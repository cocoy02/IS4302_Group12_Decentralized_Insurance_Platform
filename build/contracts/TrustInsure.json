{
  "contractName": "TrustInsure",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getInsure",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ad",
          "type": "address"
        }
      ],
      "name": "checkInsure",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "transferFromInsure",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "transferInsure",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ad\",\"type\":\"address\"}],\"name\":\"checkInsure\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInsure\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transferFromInsure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transferInsure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkInsure(address)\":{\"details\":\"Check balance of tokens\",\"params\":{\"ad\":\"Input the address of the user who want to check balance of\"},\"returns\":{\"_0\":\"uint256 credit balance of the input address\"}},\"getInsure()\":{\"details\":\"Mint TrustInsure tokens\",\"returns\":{\"_0\":\"uint256 amount of tokens minted and transferred to the user's address\"}},\"transferFromInsure(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"amt\":\"the amount of tokens to be transfered\",\"from\":\"the address of the account which TrustInsure will be transfered from\",\"to\":\"the address of the account which TrustInsure will be transfered to\"}},\"transferInsure(address,uint256)\":{\"details\":\"Transfer tokens to others\",\"params\":{\"amt\":\"the amount of tokens to be transfered\",\"to\":\"the address of the account which TrustInsure will be transfered to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TrustInsure.sol\":\"TrustInsure\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0xa317f82a0d2618512427b26c8ca3af4ea70c9e99180ef3aa6fc1db7dd4b37378\",\"urls\":[\"bzz-raw://f260a43f9f173fe07a0c6de6865011acc97bc6a830b2a87587f7964b3ff1352c\",\"dweb:/ipfs/QmTWfmUufm9WVLPDnBB7E6RqLidjZ4M2vwVsmZ32ZFRAsd\"]},\"project:/contracts/TrustInsure.sol\":{\"keccak256\":\"0xb4d6cb63e3219aaaea6c5c28366c54f51b4a1038136c5181e43ce3c95b8d9ddd\",\"urls\":[\"bzz-raw://3f92d8b7aebd7170a9715f80e092f4c01102e84ccbde306194b2197abd601585\",\"dweb:/ipfs/QmV9wjhnbx2z2yAEMHDdw1rWskNsSManCBdnwzN7gDbW9e\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600060405161001f9061006b565b604051809103906000f08015801561003b573d6000803e3d6000fd5b50600080546001600160a01b039092166001600160a01b0319928316179055600180549091163317905550610078565b6108d7806104fd83390190565b610476806100876000396000f3fe60806040526004361061003f5760003560e01c80633456ea3014610044578063371ad44714610066578063682e09b814610086578063b9b7650a146100a0575b600080fd5b34801561005057600080fd5b5061006461005f366004610315565b6100c0565b005b34801561007257600080fd5b50610064610081366004610351565b610145565b61008e6101c7565b60405190815260200160405180910390f35b3480156100ac57600080fd5b5061008e6100bb36600461037b565b610283565b6000546040516323b872dd60e01b81526001600160a01b038581166004830152848116602483015260448201849052909116906323b872dd906064016020604051808303816000875af115801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610396565b50505050565b6000546040516323b872dd60e01b81523360048201526001600160a01b03848116602483015260448201849052909116906323b872dd906064016020604051808303816000875af115801561019e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c29190610396565b505050565b6000806101db662386f26fc10000346103ce565b905060c88110610208576101f060c8826103ce565b6101fb9060056103f0565b610205908261040f565b90505b6000546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044016020604051808303816000875af1158015610259573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027d9190610396565b50919050565b600080546040516370a0823160e01b81526001600160a01b038481166004830152839216906370a0823190602401602060405180830381865afa1580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f29190610427565b9392505050565b80356001600160a01b038116811461031057600080fd5b919050565b60008060006060848603121561032a57600080fd5b610333846102f9565b9250610341602085016102f9565b9150604084013590509250925092565b6000806040838503121561036457600080fd5b61036d836102f9565b946020939093013593505050565b60006020828403121561038d57600080fd5b6102f2826102f9565b6000602082840312156103a857600080fd5b815180151581146102f257600080fd5b634e487b7160e01b600052601160045260246000fd5b6000826103eb57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561040a5761040a6103b8565b500290565b60008219821115610422576104226103b8565b500190565b60006020828403121561043957600080fd5b505191905056fea2646970667358221220d09cf9ea86d63e0e5f4ef78417221d0137e68205748452506859199715f8b53f64736f6c634300080c00336080604052600080546001600160a81b031916610100330217905534801561002657600080fd5b506108a1806100366000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780638da5cb5b116100665780638da5cb5b1461020857806395d89b4114610220578063a9059cbb14610241578063dd62ed3e1461025457600080fd5b806370a08231146101ad5780637d64bcb4146101d6578063893d20e8146101de57600080fd5b806318160ddd116100c857806318160ddd1461015b57806323b872dd1461016d578063313ce5671461018057806340c10f191461019a57600080fd5b806305d2035b146100ef57806306fdde0314610111578063095ea7b314610148575b600080fd5b6000546100fc9060ff1681565b60405190151581526020015b60405180910390f35b61013b6040518060400160405280600b81526020016a5472757374496e7375726560a81b81525081565b60405161010891906106eb565b6100fc61015636600461075c565b61028d565b6003545b604051908152602001610108565b6100fc61017b366004610786565b6102fa565b610188601281565b60405160ff9091168152602001610108565b6100fc6101a836600461075c565b610434565b61015f6101bb3660046107c2565b6001600160a01b031660009081526002602052604090205490565b6100fc610529565b60005461010090046001600160a01b03165b6040516001600160a01b039091168152602001610108565b6000546101f09061010090046001600160a01b031681565b61013b60405180604001604052806002815260200161544960f01b81525081565b6100fc61024f36600461075c565b610590565b61015f6102623660046107dd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102e89086815260200190565b60405180910390a35060015b92915050565b60006001600160a01b03831661030f57600080fd5b6001600160a01b03841660009081526002602052604090205482111561037c5760405162461bcd60e51b815260206004820181905260248201527f46726f6d20646f65736e2774206861766520656e6f7567682062616c616e636560448201526064015b60405180910390fd5b6001600160a01b03841660009081526002602052604090205461039f90836106aa565b6001600160a01b0380861660009081526002602052604080822093909355908516815220546103ce90836106cd565b6001600160a01b0380851660008181526002602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104229086815260200190565b60405180910390a35060019392505050565b6000805461010090046001600160a01b0316331461045157600080fd5b60005460ff161561046157600080fd5b60035461046e90836106cd565b6003556001600160a01b03831660009081526002602052604090205461049490836106cd565b6001600160a01b038416600081815260026020526040908190209290925590517f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885906104e39085815260200190565b60405180910390a26040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102e8565b6000805461010090046001600160a01b0316331461054657600080fd5b60005460ff161561055657600080fd5b6000805460ff191660011781556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa089190a150600190565b60006001600160a01b0383166105a557600080fd5b326000908152600260205260409020548211156106135760405162461bcd60e51b815260206004820152602660248201527f6d73672e73656e64657220646f65736e2774206861766520656e6f7567682062604482015265616c616e636560d01b6064820152608401610373565b3260009081526002602052604090205461062d90836106aa565b32600090815260026020526040808220929092556001600160a01b0385168152205461065990836106cd565b6001600160a01b0384166000818152600260205260409081902092909255905132907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906102e89086815260200190565b6000828211156106bc576106bc610810565b6106c6828461083c565b9392505050565b60006106d98284610853565b9050828110156102f4576102f4610810565b600060208083528351808285015260005b81811015610718578581018301518582016040015282016106fc565b8181111561072a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461075757600080fd5b919050565b6000806040838503121561076f57600080fd5b61077883610740565b946020939093013593505050565b60008060006060848603121561079b57600080fd5b6107a484610740565b92506107b260208501610740565b9150604084013590509250925092565b6000602082840312156107d457600080fd5b6106c682610740565b600080604083850312156107f057600080fd5b6107f983610740565b915061080760208401610740565b90509250929050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561084e5761084e610826565b500390565b6000821982111561086657610866610826565b50019056fea26469706673582212208ed324c69debaee3f5f3e443ad8adc6a2e6db907c5f7d4bb243d25742f6a328464736f6c634300080c0033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c80633456ea3014610044578063371ad44714610066578063682e09b814610086578063b9b7650a146100a0575b600080fd5b34801561005057600080fd5b5061006461005f366004610315565b6100c0565b005b34801561007257600080fd5b50610064610081366004610351565b610145565b61008e6101c7565b60405190815260200160405180910390f35b3480156100ac57600080fd5b5061008e6100bb36600461037b565b610283565b6000546040516323b872dd60e01b81526001600160a01b038581166004830152848116602483015260448201849052909116906323b872dd906064016020604051808303816000875af115801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610396565b50505050565b6000546040516323b872dd60e01b81523360048201526001600160a01b03848116602483015260448201849052909116906323b872dd906064016020604051808303816000875af115801561019e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c29190610396565b505050565b6000806101db662386f26fc10000346103ce565b905060c88110610208576101f060c8826103ce565b6101fb9060056103f0565b610205908261040f565b90505b6000546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044016020604051808303816000875af1158015610259573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027d9190610396565b50919050565b600080546040516370a0823160e01b81526001600160a01b038481166004830152839216906370a0823190602401602060405180830381865afa1580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f29190610427565b9392505050565b80356001600160a01b038116811461031057600080fd5b919050565b60008060006060848603121561032a57600080fd5b610333846102f9565b9250610341602085016102f9565b9150604084013590509250925092565b6000806040838503121561036457600080fd5b61036d836102f9565b946020939093013593505050565b60006020828403121561038d57600080fd5b6102f2826102f9565b6000602082840312156103a857600080fd5b815180151581146102f257600080fd5b634e487b7160e01b600052601160045260246000fd5b6000826103eb57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561040a5761040a6103b8565b500290565b60008219821115610422576104226103b8565b500190565b60006020828403121561043957600080fd5b505191905056fea2646970667358221220d09cf9ea86d63e0e5f4ef78417221d0137e68205748452506859199715f8b53f64736f6c634300080c0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3152:37",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:37",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:37"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:37"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:37"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:37",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:37",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:37"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:37",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:37"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:37"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:37"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:37",
                "type": ""
              }
            ],
            "src": "14:173:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "296:224:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "342:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "351:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "354:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "344:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "344:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "344:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "317:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "326:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "313:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "313:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "338:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "309:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "309:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "306:52:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "367:39:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "396:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "377:18:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "377:29:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "367:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "415:48:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "448:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "459:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "444:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "444:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "425:18:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "425:38:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "415:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "472:42:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "499:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "510:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "495:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "495:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "482:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "482:32:37"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "472:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "246:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "257:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "269:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "277:6:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "285:6:37",
                "type": ""
              }
            ],
            "src": "192:328:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:167:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "658:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "667:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "670:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "660:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "660:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "660:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "633:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "642:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "629:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "629:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "654:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "625:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "622:52:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "683:39:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "712:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "693:18:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "693:29:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "683:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "731:42:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "758:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "769:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "754:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "754:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "741:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "741:32:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "731:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "570:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "581:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "593:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "601:6:37",
                "type": ""
              }
            ],
            "src": "525:254:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "885:76:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "895:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "907:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "918:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "903:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "903:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "895:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "937:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "948:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "930:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "930:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "930:25:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "854:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "865:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "876:4:37",
                "type": ""
              }
            ],
            "src": "784:177:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1036:116:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1082:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1091:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1094:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1084:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1084:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1084:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1057:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1066:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1053:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1053:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1078:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1049:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1049:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1046:52:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1107:39:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1136:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1117:18:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1117:29:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1107:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1002:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1013:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1025:6:37",
                "type": ""
              }
            ],
            "src": "966:186:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1314:218:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1324:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1336:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1347:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1332:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1324:4:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1359:29:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1377:3:37",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1382:1:37",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1373:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1373:11:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1386:1:37",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1369:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1369:19:37"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1363:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1404:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1419:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1427:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1415:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1415:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1397:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1397:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1397:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1451:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1462:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1447:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1447:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1471:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1479:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1467:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1467:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1440:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1440:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1503:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1514:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1499:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1499:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1519:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1492:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1492:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1492:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1267:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1278:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1286:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1294:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1305:4:37",
                "type": ""
              }
            ],
            "src": "1157:375:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1615:199:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1661:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1670:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1673:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1663:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1663:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1663:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1636:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1645:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1632:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1632:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1657:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1628:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1625:52:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1686:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1705:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1699:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1699:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1690:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1768:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1777:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1780:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1770:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1770:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1770:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1737:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1758:5:37"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1751:6:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1751:13:37"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1744:6:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1744:21:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1734:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1734:32:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1727:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1727:40:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1724:60:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1793:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1803:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1793:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1581:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1592:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1604:6:37",
                "type": ""
              }
            ],
            "src": "1537:277:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1851:95:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1868:1:37",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1875:3:37",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1880:10:37",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1871:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1871:20:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1861:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1861:31:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1861:31:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1908:1:37",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1911:4:37",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1901:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1901:15:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1901:15:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1932:1:37",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1935:4:37",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1925:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1925:15:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1925:15:37"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1819:127:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1997:171:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2028:111:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2049:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2056:3:37",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2061:10:37",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2052:3:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2052:20:37"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2042:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2042:31:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2042:31:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2093:1:37",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2096:4:37",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2086:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2086:15:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2086:15:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2121:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2124:4:37",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2114:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2114:15:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2114:15:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2017:1:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2010:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2010:9:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2007:132:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2148:14:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2157:1:37"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2160:1:37"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2153:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2153:9:37"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "2148:1:37"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1982:1:37",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1985:1:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "1991:1:37",
                "type": ""
              }
            ],
            "src": "1951:217:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2225:116:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2284:22:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2286:16:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2286:18:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2286:18:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2256:1:37"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2249:6:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2249:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2242:6:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2242:17:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2264:1:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2275:1:37",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2271:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2271:6:37"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2279:1:37"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2267:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2267:14:37"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2261:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2261:21:37"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2238:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2238:45:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2235:71:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2315:20:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2330:1:37"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2333:1:37"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2326:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2326:9:37"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2315:7:37"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2204:1:37",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2207:1:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2213:7:37",
                "type": ""
              }
            ],
            "src": "2173:168:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2394:80:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2421:22:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2423:16:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2423:18:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2423:18:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2410:1:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2417:1:37"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2413:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2413:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2407:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2407:13:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2404:39:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2452:16:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2463:1:37"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2466:1:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2459:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2459:9:37"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2452:3:37"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2377:1:37",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2380:1:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2386:3:37",
                "type": ""
              }
            ],
            "src": "2346:128:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2608:145:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2618:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2630:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2641:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2626:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2626:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2618:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2660:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2675:6:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2691:3:37",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2696:1:37",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2687:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2687:11:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2700:1:37",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2683:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2683:19:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2671:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2671:32:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2653:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2653:51:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2653:51:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2724:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2735:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2720:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2720:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2740:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2713:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2713:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2713:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2569:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2580:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2588:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2599:4:37",
                "type": ""
              }
            ],
            "src": "2479:274:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2859:102:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2869:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2881:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2892:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2877:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2877:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2869:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2911:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2926:6:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2942:3:37",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2947:1:37",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2938:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2938:11:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2951:1:37",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2934:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2934:19:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2922:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2922:32:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2904:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2904:51:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2904:51:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2828:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2839:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2850:4:37",
                "type": ""
              }
            ],
            "src": "2758:203:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3047:103:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3093:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3102:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3105:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3095:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3095:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3095:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3068:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3077:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3064:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3064:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3089:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3060:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3060:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "3057:52:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3118:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3134:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3128:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3128:16:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3118:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3013:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3024:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3036:6:37",
                "type": ""
              }
            ],
            "src": "2966:184:37"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
      "id": 37,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "49:1928:8:-:0;;;121:114;;;;;;;;;;152:7;162:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;183:13:8;:17;;-1:-1:-1;;;;;183:17:8;;;-1:-1:-1;;;;;;183:17:8;;;;;;;210:18;;;;;218:10;210:18;;;-1:-1:-1;49:1928:8;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "49:1928:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1526:132;;;;;;;;;;-1:-1:-1;1526:132:8;;;;;:::i;:::-;;:::i;:::-;;1855:120;;;;;;;;;;-1:-1:-1;1855:120:8;;;;;:::i;:::-;;:::i;572:315::-;;;:::i;:::-;;;930:25:37;;;918:2;903:18;572:315:8;;;;;;;1077:147;;;;;;;;;;-1:-1:-1;1077:147:8;;;;;:::i;:::-;;:::i;1526:132::-;1610:13;;:41;;-1:-1:-1;;;1610:41:8;;-1:-1:-1;;;;;1415:15:37;;;1610:41:8;;;1397:34:37;1467:15;;;1447:18;;;1440:43;1499:18;;;1492:34;;;1610:13:8;;;;:26;;1332:18:37;;1610:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1526:132;;;:::o;1855:120::-;1921:13;;:47;;-1:-1:-1;;;1921:47:8;;1948:10;1921:47;;;1397:34:37;-1:-1:-1;;;;;1467:15:37;;;1447:18;;;1440:43;1499:18;;;1492:34;;;1921:13:8;;;;:26;;1332:18:37;;1921:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1855:120;;:::o;572:315::-;633:7;;731:37;744:23;731:9;:37;:::i;:::-;716:52;;789:3;782;:10;778:36;;802:7;806:3;802;:7;:::i;:::-;801:13;;813:1;801:13;:::i;:::-;794:20;;;;:::i;:::-;;;778:36;824:13;;:35;;-1:-1:-1;;;824:35:8;;843:10;824:35;;;2653:51:37;2720:18;;;2713:34;;;-1:-1:-1;;;;;824:13:8;;;;:18;;2626::37;;824:35:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;876:3:8;572:315;-1:-1:-1;572:315:8:o;1077:147::-;1131:7;1167:13;;:27;;-1:-1:-1;;;1167:27:8;;-1:-1:-1;;;;;2922:32:37;;;1167:27:8;;;2904:51:37;1131:7:8;;1167:13;;:23;;2877:18:37;;1167:27:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1150:44;1077:147;-1:-1:-1;;;1077:147:8:o;14:173:37:-;82:20;;-1:-1:-1;;;;;131:31:37;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:328::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;425:38;459:2;448:9;444:18;425:38;:::i;:::-;415:48;;510:2;499:9;495:18;482:32;472:42;;192:328;;;;;:::o;525:254::-;593:6;601;654:2;642:9;633:7;629:23;625:32;622:52;;;670:1;667;660:12;622:52;693:29;712:9;693:29;:::i;:::-;683:39;769:2;754:18;;;;741:32;;-1:-1:-1;;;525:254:37:o;966:186::-;1025:6;1078:2;1066:9;1057:7;1053:23;1049:32;1046:52;;;1094:1;1091;1084:12;1046:52;1117:29;1136:9;1117:29;:::i;1537:277::-;1604:6;1657:2;1645:9;1636:7;1632:23;1628:32;1625:52;;;1673:1;1670;1663:12;1625:52;1705:9;1699:16;1758:5;1751:13;1744:21;1737:5;1734:32;1724:60;;1780:1;1777;1770:12;1819:127;1880:10;1875:3;1871:20;1868:1;1861:31;1911:4;1908:1;1901:15;1935:4;1932:1;1925:15;1951:217;1991:1;2017;2007:132;;2061:10;2056:3;2052:20;2049:1;2042:31;2096:4;2093:1;2086:15;2124:4;2121:1;2114:15;2007:132;-1:-1:-1;2153:9:37;;1951:217::o;2173:168::-;2213:7;2279:1;2275;2271:6;2267:14;2264:1;2261:21;2256:1;2249:9;2242:17;2238:45;2235:71;;;2286:18;;:::i;:::-;-1:-1:-1;2326:9:37;;2173:168::o;2346:128::-;2386:3;2417:1;2413:6;2410:1;2407:13;2404:39;;;2423:18;;:::i;:::-;-1:-1:-1;2459:9:37;;2346:128::o;2966:184::-;3036:6;3089:2;3077:9;3068:7;3064:23;3060:32;3057:52;;;3105:1;3102;3095:12;3057:52;-1:-1:-1;3128:16:37;;2966:184;-1:-1:-1;2966:184:37:o",
  "source": "pragma solidity ^0.8.12;\n\nimport \"./ERC20.sol\";\n\ncontract TrustInsure {\n    ERC20 erc20Contract;\n    address owner;\n\n    constructor() public {\n        ERC20 e = new ERC20();\n        erc20Contract = e;\n        owner = msg.sender;\n    }\n\n// =====================================================================================\n// functions\n// =====================================================================================\n    \n    /** \n    * @dev Mint TrustInsure tokens\n    * @return uint256 amount of tokens minted and transferred to the user's address\n    */\n    function getInsure()\n        public payable\n        returns (uint256)\n    {\n        //uint256 amt = weiAmt / (1000000000000000000/100);\n        uint256  amt = msg.value / (1000000000000000000/100);\n        if (amt >= 200) amt += (amt/200) * 5;\n        erc20Contract.mint(msg.sender, amt);\n        return amt; \n    }\n\n    /** \n    * @dev Check balance of tokens\n    * @param ad Input the address of the user who want to check balance of\n    * @return uint256 credit balance of the input address\n    */\n    function checkInsure(address ad) public view returns (uint256) {\n        uint256 credit = erc20Contract.balanceOf(ad);\n        return credit;\n    }\n\n    /** \n    * @dev Transfer tokens from one address to another\n    * @param from the address of the account which TrustInsure will be transfered from\n    * @param to the address of the account which TrustInsure will be transfered to\n    * @param amt the amount of tokens to be transfered\n    */\n    function transferFromInsure(address from, address to, uint256 amt) public {\n        erc20Contract.transferFrom(from, to, amt);\n    }\n\n    /** \n    * @dev Transfer tokens to others\n    * @param to the address of the account which TrustInsure will be transfered to\n    * @param amt the amount of tokens to be transfered\n    */\n    function transferInsure(address to, uint256 amt) public {\n        erc20Contract.transferFrom(msg.sender, to, amt);\n    }\n}\n",
  "sourcePath": "/Users/lhhhhhy/Downloads/IS4302/IS4302_Group12/contracts/TrustInsure.sol",
  "ast": {
    "absolutePath": "project:/contracts/TrustInsure.sol",
    "exportedSymbols": {
      "ERC20": [
        444
      ],
      "SafeMath": [
        98
      ],
      "TrustInsure": [
        4855
      ]
    },
    "id": 4856,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4732,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "project:/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 4733,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4856,
        "sourceUnit": 445,
        "src": "26:21:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TrustInsure",
        "contractDependencies": [
          444
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4855,
        "linearizedBaseContracts": [
          4855
        ],
        "name": "TrustInsure",
        "nameLocation": "58:11:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4736,
            "mutability": "mutable",
            "name": "erc20Contract",
            "nameLocation": "82:13:8",
            "nodeType": "VariableDeclaration",
            "scope": 4855,
            "src": "76:19:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$444",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 4735,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4734,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 444,
                "src": "76:5:8"
              },
              "referencedDeclaration": 444,
              "src": "76:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$444",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4738,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "109:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 4855,
            "src": "101:13:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4737,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "101:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4758,
              "nodeType": "Block",
              "src": "142:93:8",
              "statements": [
                {
                  "assignments": [
                    4743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4743,
                      "mutability": "mutable",
                      "name": "e",
                      "nameLocation": "158:1:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 4758,
                      "src": "152:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$444",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 4742,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4741,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 444,
                          "src": "152:5:8"
                        },
                        "referencedDeclaration": 444,
                        "src": "152:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$444",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4748,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "162:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20_$444_$",
                        "typeString": "function () returns (contract ERC20)"
                      },
                      "typeName": {
                        "id": 4745,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4744,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 444,
                          "src": "166:5:8"
                        },
                        "referencedDeclaration": 444,
                        "src": "166:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$444",
                          "typeString": "contract ERC20"
                        }
                      }
                    },
                    "id": 4747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "162:11:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$444",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "152:21:8"
                },
                {
                  "expression": {
                    "id": 4751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4749,
                      "name": "erc20Contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4736,
                      "src": "183:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$444",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4750,
                      "name": "e",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4743,
                      "src": "199:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$444",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "183:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$444",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 4752,
                  "nodeType": "ExpressionStatement",
                  "src": "183:17:8"
                },
                {
                  "expression": {
                    "id": 4756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4753,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4738,
                      "src": "210:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4754,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "218:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "218:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "210:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4757,
                  "nodeType": "ExpressionStatement",
                  "src": "210:18:8"
                }
              ]
            },
            "id": 4759,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "132:2:8"
            },
            "returnParameters": {
              "id": 4740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "142:0:8"
            },
            "scope": 4855,
            "src": "121:114:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4798,
              "nodeType": "Block",
              "src": "646:241:8",
              "statements": [
                {
                  "assignments": [
                    4766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4766,
                      "mutability": "mutable",
                      "name": "amt",
                      "nameLocation": "725:3:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 4798,
                      "src": "716:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4765,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "716:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4774,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4767,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "731:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "731:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "id": 4771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030303030303030303030303030303030",
                            "id": 4769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "744:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1000000000000000000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 4770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "764:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "744:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          }
                        }
                      ],
                      "id": 4772,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "743:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000000000_by_1",
                        "typeString": "int_const 10000000000000000"
                      }
                    },
                    "src": "731:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "716:52:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4775,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4766,
                      "src": "782:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 4776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "789:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "782:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4787,
                  "nodeType": "IfStatement",
                  "src": "778:36:8",
                  "trueBody": {
                    "expression": {
                      "id": 4785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 4778,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4766,
                        "src": "794:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4779,
                                "name": "amt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4766,
                                "src": "802:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "323030",
                                "id": 4780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "806:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_200_by_1",
                                  "typeString": "int_const 200"
                                },
                                "value": "200"
                              },
                              "src": "802:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4782,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "801:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 4783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "813:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "801:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "794:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4786,
                    "nodeType": "ExpressionStatement",
                    "src": "794:20:8"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4791,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "843:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "843:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4793,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4766,
                        "src": "855:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4788,
                        "name": "erc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4736,
                        "src": "824:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$444",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 298,
                      "src": "824:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4795,
                  "nodeType": "ExpressionStatement",
                  "src": "824:35:8"
                },
                {
                  "expression": {
                    "id": 4796,
                    "name": "amt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4766,
                    "src": "876:3:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4764,
                  "id": 4797,
                  "nodeType": "Return",
                  "src": "869:10:8"
                }
              ]
            },
            "documentation": {
              "id": 4760,
              "nodeType": "StructuredDocumentation",
              "src": "437:130:8",
              "text": " @dev Mint TrustInsure tokens\n @return uint256 amount of tokens minted and transferred to the user's address"
            },
            "functionSelector": "682e09b8",
            "id": 4799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInsure",
            "nameLocation": "581:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "590:2:8"
            },
            "returnParameters": {
              "id": 4764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4763,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4799,
                  "src": "633:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:9:8"
            },
            "scope": 4855,
            "src": "572:315:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4816,
              "nodeType": "Block",
              "src": "1140:84:8",
              "statements": [
                {
                  "assignments": [
                    4808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4808,
                      "mutability": "mutable",
                      "name": "credit",
                      "nameLocation": "1158:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 4816,
                      "src": "1150:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4807,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1150:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4813,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4811,
                        "name": "ad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4802,
                        "src": "1191:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4809,
                        "name": "erc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4736,
                        "src": "1167:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$444",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "1167:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1167:27:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1150:44:8"
                },
                {
                  "expression": {
                    "id": 4814,
                    "name": "credit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4808,
                    "src": "1211:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4806,
                  "id": 4815,
                  "nodeType": "Return",
                  "src": "1204:13:8"
                }
              ]
            },
            "documentation": {
              "id": 4800,
              "nodeType": "StructuredDocumentation",
              "src": "893:179:8",
              "text": " @dev Check balance of tokens\n @param ad Input the address of the user who want to check balance of\n @return uint256 credit balance of the input address"
            },
            "functionSelector": "b9b7650a",
            "id": 4817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkInsure",
            "nameLocation": "1086:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4802,
                  "mutability": "mutable",
                  "name": "ad",
                  "nameLocation": "1106:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4817,
                  "src": "1098:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1097:12:8"
            },
            "returnParameters": {
              "id": 4806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4805,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4817,
                  "src": "1131:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1130:9:8"
            },
            "scope": 4855,
            "src": "1077:147:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4835,
              "nodeType": "Block",
              "src": "1600:58:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4830,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4820,
                        "src": "1637:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4831,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4822,
                        "src": "1643:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4832,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4824,
                        "src": "1647:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4827,
                        "name": "erc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4736,
                        "src": "1610:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$444",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 388,
                      "src": "1610:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1610:41:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4834,
                  "nodeType": "ExpressionStatement",
                  "src": "1610:41:8"
                }
              ]
            },
            "documentation": {
              "id": 4818,
              "nodeType": "StructuredDocumentation",
              "src": "1230:291:8",
              "text": " @dev Transfer tokens from one address to another\n @param from the address of the account which TrustInsure will be transfered from\n @param to the address of the account which TrustInsure will be transfered to\n @param amt the amount of tokens to be transfered"
            },
            "functionSelector": "3456ea30",
            "id": 4836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFromInsure",
            "nameLocation": "1535:18:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4820,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1562:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "1554:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4822,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1576:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "1568:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4824,
                  "mutability": "mutable",
                  "name": "amt",
                  "nameLocation": "1588:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "1580:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1553:39:8"
            },
            "returnParameters": {
              "id": 4826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1600:0:8"
            },
            "scope": 4855,
            "src": "1526:132:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4853,
              "nodeType": "Block",
              "src": "1911:64:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4847,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1948:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1948:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4849,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4839,
                        "src": "1960:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4850,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4841,
                        "src": "1964:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4844,
                        "name": "erc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4736,
                        "src": "1921:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$444",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 388,
                      "src": "1921:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:47:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4852,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:47:8"
                }
              ]
            },
            "documentation": {
              "id": 4837,
              "nodeType": "StructuredDocumentation",
              "src": "1664:186:8",
              "text": " @dev Transfer tokens to others\n @param to the address of the account which TrustInsure will be transfered to\n @param amt the amount of tokens to be transfered"
            },
            "functionSelector": "371ad447",
            "id": 4854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferInsure",
            "nameLocation": "1864:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4839,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1887:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4854,
                  "src": "1879:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1879:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4841,
                  "mutability": "mutable",
                  "name": "amt",
                  "nameLocation": "1899:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 4854,
                  "src": "1891:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1878:25:8"
            },
            "returnParameters": {
              "id": 4843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1911:0:8"
            },
            "scope": 4855,
            "src": "1855:120:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4856,
        "src": "49:1928:8",
        "usedErrors": []
      }
    ],
    "src": "0:1978:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.12+commit.f00d7308.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x20313aa822D0555b37585DBD5199E0555Af79Ddb",
      "transactionHash": "0x53480b32523d0cb1d90871d14ff605d4cb27a1987ea6c99ef3e7a15d06b722b6"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-04-11T14:29:57.405Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkInsure(address)": {
        "details": "Check balance of tokens",
        "params": {
          "ad": "Input the address of the user who want to check balance of"
        },
        "returns": {
          "_0": "uint256 credit balance of the input address"
        }
      },
      "getInsure()": {
        "details": "Mint TrustInsure tokens",
        "returns": {
          "_0": "uint256 amount of tokens minted and transferred to the user's address"
        }
      },
      "transferFromInsure(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "amt": "the amount of tokens to be transfered",
          "from": "the address of the account which TrustInsure will be transfered from",
          "to": "the address of the account which TrustInsure will be transfered to"
        }
      },
      "transferInsure(address,uint256)": {
        "details": "Transfer tokens to others",
        "params": {
          "amt": "the amount of tokens to be transfered",
          "to": "the address of the account which TrustInsure will be transfered to"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}