{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "ad",
						"type": "address"
					}
				],
				"name": "checkInsure",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getInsure",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					}
				],
				"name": "transferFromInsure",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					}
				],
				"name": "transferInsure",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"checkInsure(address)": {
					"details": "Check balance of tokens",
					"params": {
						"ad": "Input the address of the user who want to check balance of"
					},
					"returns": {
						"_0": "uint256 credit balance of the input address"
					}
				},
				"getInsure()": {
					"details": "Mint TrustInsure tokens",
					"returns": {
						"_0": "uint256 amount of tokens minted and transferred to the user's address"
					}
				},
				"transferFromInsure(address,address,uint256)": {
					"details": "Transfer tokens from one address to another",
					"params": {
						"amt": "the amount of tokens to be transfered",
						"from": "the address of the account which TrustInsure will be transfered from",
						"to": "the address of the account which TrustInsure will be transfered to"
					}
				},
				"transferInsure(address,uint256)": {
					"details": "Transfer tokens to others",
					"params": {
						"amt": "the amount of tokens to be transfered",
						"to": "the address of the account which TrustInsure will be transfered to"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/TrustInsure.sol": "TrustInsure"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/ERC20.sol": {
			"keccak256": "0xa317f82a0d2618512427b26c8ca3af4ea70c9e99180ef3aa6fc1db7dd4b37378",
			"urls": [
				"bzz-raw://f260a43f9f173fe07a0c6de6865011acc97bc6a830b2a87587f7964b3ff1352c",
				"dweb:/ipfs/QmTWfmUufm9WVLPDnBB7E6RqLidjZ4M2vwVsmZ32ZFRAsd"
			]
		},
		"contracts/TrustInsure.sol": {
			"keccak256": "0xb4d6cb63e3219aaaea6c5c28366c54f51b4a1038136c5181e43ce3c95b8d9ddd",
			"urls": [
				"bzz-raw://3f92d8b7aebd7170a9715f80e092f4c01102e84ccbde306194b2197abd601585",
				"dweb:/ipfs/QmV9wjhnbx2z2yAEMHDdw1rWskNsSManCBdnwzN7gDbW9e"
			]
		}
	},
	"version": 1
}