{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract InsuranceCompany",
						"name": "insuranceCompanyAddress",
						"type": "address"
					},
					{
						"internalType": "contract Hospital",
						"name": "hospitalAddress",
						"type": "address"
					},
					{
						"internalType": "contract TrustInsure",
						"name": "insureAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "insuranceId",
						"type": "uint256"
					}
				],
				"name": "signInsure",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stakeholderId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					}
				],
				"name": "addRequestIds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "NRIC",
						"type": "string"
					}
				],
				"name": "addStakeholder",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stakeholderId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "companyId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					}
				],
				"name": "checkInsuranceRequests",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "hospitalId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "stakeholderId",
						"type": "uint256"
					}
				],
				"name": "checkMCRequests",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "insuranceID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "companyId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "mcId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "beneficiaryID",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "lifeAssuredName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "lifeAssuredNRIC",
						"type": "string"
					}
				],
				"name": "claimInsurance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "insuranceId",
						"type": "uint256"
					}
				],
				"name": "getInsurance",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "ID",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "companyId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "stakeholders",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "premium",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "insuredAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "currentAmount",
								"type": "uint256"
							},
							{
								"internalType": "enum Insurance.insuranceType",
								"name": "insType",
								"type": "uint8"
							},
							{
								"internalType": "enum Insurance.status",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "issueDate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expiryDate",
								"type": "uint256"
							}
						],
						"internalType": "struct Insurance.insurance",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stakeholderID",
						"type": "uint256"
					}
				],
				"name": "getRequestId",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "insuranceId",
						"type": "uint256"
					}
				],
				"name": "getRestAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stakeholderID",
						"type": "uint256"
					}
				],
				"name": "getStakeholderAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_stakeholder",
						"type": "address"
					}
				],
				"name": "getStakeholderId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stakeholderID",
						"type": "uint256"
					}
				],
				"name": "getStakeholderNRIC",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stakeholderID",
						"type": "uint256"
					}
				],
				"name": "getStakeholderName",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "numStakeholder",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "insuranceId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "policyOwnerID",
						"type": "uint256"
					}
				],
				"name": "payPremium",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "hospitalId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "nameAssured",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "icAssured",
						"type": "string"
					}
				],
				"name": "requestMC",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "insuranceId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "companyId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "policyOwnerID",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "signature",
						"type": "string"
					}
				],
				"name": "signInsurance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "stakeholders",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "ID",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "bytes",
						"name": "NRIC",
						"type": "bytes"
					},
					{
						"internalType": "address",
						"name": "stakeholderAddress",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addRequestIds(uint256,uint256)": {
					"details": "Record the preferred product one wants to purchase",
					"params": {
						"requestId": "the id of the request",
						"stakeholderId": "the id of the stakeholder"
					}
				},
				"addStakeholder(string,string)": {
					"details": "create new stakeholder",
					"params": {
						"NRIC": "NRIC of stakeholder",
						"name": "name of stakeholder"
					},
					"returns": {
						"_0": "uint256 id of new stakeholder"
					}
				},
				"checkInsuranceRequests(uint256,uint256,uint256)": {
					"details": "Check the insurance requests status",
					"params": {
						"companyId": "id of company",
						"requestId": "id of request",
						"stakeholderId": "id of stakeholder"
					},
					"returns": {
						"_0": "uint256 insurance id"
					}
				},
				"checkMCRequests(uint256,uint256,uint256)": {
					"details": "Check MC requests",
					"params": {
						"hospitalId": "id of hospital",
						"requestId": "the id of request",
						"stakeholderId": "the id of stakeholder"
					},
					"returns": {
						"_0": "uint256 mc id"
					}
				},
				"claimInsurance(uint256,uint256,uint256,uint256,string,string)": {
					"details": "Claim insurance",
					"params": {
						"beneficiaryID": "the id of the policy owner",
						"companyId": "the id of the company",
						"insuranceID": "id of insurance",
						"lifeAssuredNRIC": "the NRIC of the life assured",
						"lifeAssuredName": "the name of the life assured",
						"mcId": "the id of the medical certificate"
					}
				},
				"payPremium(uint256,uint256,uint256)": {
					"details": "Pay premium for the contract",
					"params": {
						"amount": "the sum to be paid",
						"insuranceId": "id of insurance",
						"policyOwnerID": "id of policy owner"
					}
				},
				"requestMC(uint256,string,string)": {
					"details": "Request for MC",
					"params": {
						"hospitalId": "the id of the hospital",
						"icAssured": "the NRIC of the life assured",
						"nameAssured": "the name of the life assured"
					},
					"returns": {
						"_0": "uint256 id of request"
					}
				},
				"signInsurance(uint256,uint256,uint256,string)": {
					"details": "Sign insurance",
					"params": {
						"companyId": "id of company",
						"insuranceId": "id of insurance",
						"policyOwnerID": "id of policy owner",
						"signature": "the signature of the stakeholder."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Stakeholder.sol": "Stakeholder"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Datetime.sol": {
			"keccak256": "0x6e6a57c2128f8b8caf22221621009cb6dda0e95878e74a957c11bbc81764dd27",
			"license": "MIT",
			"urls": [
				"bzz-raw://01108c9b04712c477bcc759b3cbaa29fef101b094c699e8f81d94e9f4c38a953",
				"dweb:/ipfs/QmYtFqC8vmrQdq5oLhfKbemJ3mxt2qCaf7jZZzPPaM6S3j"
			]
		},
		"contracts/ERC20.sol": {
			"keccak256": "0x8dce7e7a68277bba541db99df03c1c0ee8859e614ca999cc734308ebd32332e5",
			"urls": [
				"bzz-raw://b6b432320306ec9ee6fb79d3bf4c60bf1831460190dffdaccacd26056b013ece",
				"dweb:/ipfs/QmW5QTND8XpMdzB8C7XhtSMtaiA8wujCFTGu8D1tQNYZwV"
			]
		},
		"contracts/Hospital.sol": {
			"keccak256": "0xaad8b180b32af073943d6ea2fef69317796b55a2e1c099f38bf02c78015816bb",
			"urls": [
				"bzz-raw://e6730adf7b56f1c8cfa9b6a38280bf11b11cd24e25f8568fdd30bdd50b90ddf2",
				"dweb:/ipfs/QmcUzXCdwyFh7TVbZoceAsvunhk8Gfgt2GjuRymEcDXVRc"
			]
		},
		"contracts/Insurance.sol": {
			"keccak256": "0x2f0facadd21bf5acf10887aa07e74ef9226bf92ef0b4ab9ead58aef1c8e9a745",
			"urls": [
				"bzz-raw://b4335a5f1ff4a93ae6eee5e0e7d9a5034fc3b794a75f243234ec30f94403d9fb",
				"dweb:/ipfs/QmRcP7sYfX83xBAhzn1pXsbZT4yEHLBcyeFETmpDV6puQr"
			]
		},
		"contracts/InsuranceCompany.sol": {
			"keccak256": "0x5c98f49b624080aef5af1832a5e009118a85f5842e233faa1e674584acd3cdf4",
			"urls": [
				"bzz-raw://3150e54d24063de81f8635576692647c2e2ffd7389a9e4aebf5c94aac9c3b2de",
				"dweb:/ipfs/QmPpZtT2Qk7gJZfsHK77xaeMVutKPuDYLmY7pv8FUEc2Qe"
			]
		},
		"contracts/MedicalCert.sol": {
			"keccak256": "0xe8078b5ffb8c10d495e8a160c8116d357021c29f286bb87c63a3108fd346c6b9",
			"urls": [
				"bzz-raw://0023a5e3580c29c58154dee985efaf9113e0b7d6508f6ccd15201cb55ab65576",
				"dweb:/ipfs/QmemFrBRkfjLfhtPfjp9vbFhysLvVbFLX6mcxhWTM5v9vU"
			]
		},
		"contracts/Stakeholder.sol": {
			"keccak256": "0x10d98942ec1062bf529e7039ee3b98f8f6aae95ff7a6854972a4fd425a52283c",
			"urls": [
				"bzz-raw://211759100a6f69aa0ea6b34ad796e5033a35625d2f887d3ced334aae8d222543",
				"dweb:/ipfs/QmXWymADqQBGEwBocqoY9RZrJ8FJbxTtJdBGvNdHmxUHtG"
			]
		},
		"contracts/TrustInsure.sol": {
			"keccak256": "0xb4d6cb63e3219aaaea6c5c28366c54f51b4a1038136c5181e43ce3c95b8d9ddd",
			"urls": [
				"bzz-raw://3f92d8b7aebd7170a9715f80e092f4c01102e84ccbde306194b2197abd601585",
				"dweb:/ipfs/QmV9wjhnbx2z2yAEMHDdw1rWskNsSManCBdnwzN7gDbW9e"
			]
		}
	},
	"version": 1
}