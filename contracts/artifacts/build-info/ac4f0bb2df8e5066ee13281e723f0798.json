{
	"id": "ac4f0bb2df8e5066ee13281e723f0798",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20.sol": {
				"content": "pragma solidity ^0.8.12;\n\n//first need to approve the address of spender \n// Check the allowance\n//Finally able to call transferFrom to transfer tokens\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract ERC20 {\n    using SafeMath for uint256;\n    \n    bool public mintingFinished = false;\n    \n    address public owner = msg.sender;\n    \n    mapping (address => mapping (address => uint256)) internal allowed;\n    mapping(address => uint256) balances;\n    \n    \n    string public constant name = \"TrustInsure\";\n    string public constant symbol = \"TI\";\n    uint8 public constant decimals = 18;\n    uint256 totalSupply_;\n  \n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Mint(address indexed to, uint256 amount);\n    event MintFinished();\n\n  \n    /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[tx.origin], \"msg.sender doesn't have enough balance\");\n\n    balances[tx.origin] = balances[tx.origin].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(tx.origin, _to, _value);\n    return true;\n  }\n\n  \n  \n    /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\n    totalSupply_ = totalSupply_.add(_amount);\n    balances[_to] = balances[_to].add(_amount);\n    emit Mint(_to, _amount);\n    emit Transfer(address(0), _to, _amount);\n    return true;\n  }\n\n  \n  function getOwner() public view returns (address){\n      return owner;\n  }\n  \n  \n   modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n  \n  \n  modifier canMint() {\n    require(!mintingFinished);\n    _;\n  }\n\n\n\n  /**\n   * @dev Function to stop minting new tokens.\n   * @return True if the operation was successful.\n   */\n  function finishMinting() onlyOwner canMint public returns (bool) {\n    mintingFinished = true;\n    emit MintFinished();\n    return true;\n  }\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from], \"From doesn't have enough balance\");\n    //require(_value <= allowed[_from][tx.origin], \"Not allowed to spend this much\");\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    //allowed[_from][tx.origin] = allowed[_from][tx.origin].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "MintFinished",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finishMinting",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintingFinished",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens that an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"returns": {
									"_0": "A uint256 specifying the amount of tokens still available for the spender."
								}
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"returns": {
									"_0": "An uint256 representing the amount owned by the passed address."
								}
							},
							"finishMinting()": {
								"details": "Function to stop minting new tokens.",
								"returns": {
									"_0": "True if the operation was successful."
								}
							},
							"mint(address,uint256)": {
								"details": "Function to mint tokens",
								"params": {
									"_amount": "The amount of tokens to mint.",
									"_to": "The address that will receive the minted tokens."
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"totalSupply()": {
								"details": "total number of tokens in existence"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint256 the amount of tokens to be transferred"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":1261:5943  contract ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20.sol\":1349:1354  false */\n  0x00\n    /* \"contracts/ERC20.sol\":1319:1354  bool public mintingFinished = false */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20.sol\":1388:1398  msg.sender */\n  caller\n    /* \"contracts/ERC20.sol\":1365:1398  address public owner = msg.sender */\n  0x00\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20.sol\":1261:5943  contract ERC20 {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":1261:5943  contract ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7d64bcb4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x18160ddd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x05d2035b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20.sol\":1319:1354  bool public mintingFinished = false */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1533:1576  string public constant name = \"TrustInsure\" */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":5164:5352  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":5858:5941  function totalSupply() public view returns (uint256) {... */\n    tag_6:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":4026:4541  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1624:1659  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2991:3265  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2134:2233  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3610:3750  function finishMinting() onlyOwner canMint public returns (bool) {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3272:3346  function getOwner() public view returns (address){... */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1365:1398  address public owner = msg.sender */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1582:1618  string public constant symbol = \"TI\" */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2388:2747  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_15:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":5671:5797  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n    tag_16:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1319:1354  bool public mintingFinished = false */\n    tag_21:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1533:1576  string public constant name = \"TrustInsure\" */\n    tag_25:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x5472757374496e73757265000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5164:5352  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_31:\n        /* \"contracts/ERC20.sol\":5231:5235  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":5275:5281  _value */\n      dup2\n        /* \"contracts/ERC20.sol\":5243:5250  allowed */\n      0x01\n        /* \"contracts/ERC20.sol\":5243:5262  allowed[msg.sender] */\n      0x00\n        /* \"contracts/ERC20.sol\":5251:5261  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":5243:5262  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":5243:5272  allowed[msg.sender][_spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":5263:5271  _spender */\n      dup6\n        /* \"contracts/ERC20.sol\":5243:5272  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":5243:5281  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":5313:5321  _spender */\n      dup3\n        /* \"contracts/ERC20.sol\":5292:5330  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5301:5311  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":5292:5330  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20.sol\":5323:5329  _value */\n      dup5\n        /* \"contracts/ERC20.sol\":5292:5330  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":5343:5347  true */\n      0x01\n        /* \"contracts/ERC20.sol\":5336:5347  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5164:5352  function approve(address _spender, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5858:5941  function totalSupply() public view returns (uint256) {... */\n    tag_34:\n        /* \"contracts/ERC20.sol\":5902:5909  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":5924:5936  totalSupply_ */\n      sload(0x03)\n        /* \"contracts/ERC20.sol\":5917:5936  return totalSupply_ */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5858:5941  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":4026:4541  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n    tag_40:\n        /* \"contracts/ERC20.sol\":4108:4112  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4143:4144  0 */\n      dup1\n        /* \"contracts/ERC20.sol\":4128:4145  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":4128:4131  _to */\n      dup4\n        /* \"contracts/ERC20.sol\":4128:4145  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":4120:4146  require(_to != address(0)) */\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n        /* \"contracts/ERC20.sol\":4170:4178  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":4170:4185  balances[_from] */\n      0x00\n        /* \"contracts/ERC20.sol\":4179:4184  _from */\n      dup6\n        /* \"contracts/ERC20.sol\":4170:4185  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4160:4166  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":4160:4185  _value <= balances[_from] */\n      gt\n      iszero\n        /* \"contracts/ERC20.sol\":4152:4222  require(_value <= balances[_from], \"From doesn't have enough balance\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"contracts/ERC20.sol\":4333:4360  balances[_from].sub(_value) */\n      tag_85\n        /* \"contracts/ERC20.sol\":4353:4359  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":4333:4341  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":4333:4348  balances[_from] */\n      0x00\n        /* \"contracts/ERC20.sol\":4342:4347  _from */\n      dup8\n        /* \"contracts/ERC20.sol\":4333:4348  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4333:4352  balances[_from].sub */\n      tag_86\n      swap1\n        /* \"contracts/ERC20.sol\":4333:4360  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"contracts/ERC20.sol\":4315:4323  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":4315:4330  balances[_from] */\n      0x00\n        /* \"contracts/ERC20.sol\":4324:4329  _from */\n      dup7\n        /* \"contracts/ERC20.sol\":4315:4330  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4315:4360  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":4382:4407  balances[_to].add(_value) */\n      tag_87\n        /* \"contracts/ERC20.sol\":4400:4406  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":4382:4390  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":4382:4395  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":4391:4394  _to */\n      dup7\n        /* \"contracts/ERC20.sol\":4382:4395  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4382:4399  balances[_to].add */\n      tag_88\n      swap1\n        /* \"contracts/ERC20.sol\":4382:4407  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"contracts/ERC20.sol\":4366:4374  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":4366:4379  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":4375:4378  _to */\n      dup6\n        /* \"contracts/ERC20.sol\":4366:4379  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4366:4407  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":4507:4510  _to */\n      dup3\n        /* \"contracts/ERC20.sol\":4491:4519  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":4500:4505  _from */\n      dup5\n        /* \"contracts/ERC20.sol\":4491:4519  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":4512:4518  _value */\n      dup5\n        /* \"contracts/ERC20.sol\":4491:4519  Transfer(_from, _to, _value) */\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":4532:4536  true */\n      0x01\n        /* \"contracts/ERC20.sol\":4525:4536  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":4026:4541  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1624:1659  uint8 public constant decimals = 18 */\n    tag_43:\n        /* \"contracts/ERC20.sol\":1657:1659  18 */\n      0x12\n        /* \"contracts/ERC20.sol\":1624:1659  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2991:3265  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {... */\n    tag_48:\n        /* \"contracts/ERC20.sol\":3069:3073  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3405:3410  owner */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3391:3410  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3391:3401  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":3391:3410  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20.sol\":3383:3411  require(msg.sender == owner) */\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n        /* \"contracts/ERC20.sol\":3466:3481  mintingFinished */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":3465:3481  !mintingFinished */\n      iszero\n        /* \"contracts/ERC20.sol\":3457:3482  require(!mintingFinished) */\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n        /* \"contracts/ERC20.sol\":3096:3121  totalSupply_.add(_amount) */\n      tag_95\n        /* \"contracts/ERC20.sol\":3113:3120  _amount */\n      dup3\n        /* \"contracts/ERC20.sol\":3096:3108  totalSupply_ */\n      sload(0x03)\n        /* \"contracts/ERC20.sol\":3096:3112  totalSupply_.add */\n      tag_88\n      swap1\n        /* \"contracts/ERC20.sol\":3096:3121  totalSupply_.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"contracts/ERC20.sol\":3081:3093  totalSupply_ */\n      0x03\n        /* \"contracts/ERC20.sol\":3081:3121  totalSupply_ = totalSupply_.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":3143:3169  balances[_to].add(_amount) */\n      tag_96\n        /* \"contracts/ERC20.sol\":3161:3168  _amount */\n      dup3\n        /* \"contracts/ERC20.sol\":3143:3151  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":3143:3156  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":3152:3155  _to */\n      dup7\n        /* \"contracts/ERC20.sol\":3143:3156  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":3143:3160  balances[_to].add */\n      tag_88\n      swap1\n        /* \"contracts/ERC20.sol\":3143:3169  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"contracts/ERC20.sol\":3127:3135  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":3127:3140  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":3136:3139  _to */\n      dup6\n        /* \"contracts/ERC20.sol\":3127:3140  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":3127:3169  balances[_to] = balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":3185:3188  _to */\n      dup3\n        /* \"contracts/ERC20.sol\":3180:3198  Mint(_to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885\n        /* \"contracts/ERC20.sol\":3190:3197  _amount */\n      dup4\n        /* \"contracts/ERC20.sol\":3180:3198  Mint(_to, _amount) */\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ERC20.sol\":3230:3233  _to */\n      dup3\n        /* \"contracts/ERC20.sol\":3209:3243  Transfer(address(0), _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3226:3227  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":3209:3243  Transfer(address(0), _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":3235:3242  _amount */\n      dup5\n        /* \"contracts/ERC20.sol\":3209:3243  Transfer(address(0), _to, _amount) */\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":3256:3260  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3249:3260  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2991:3265  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2134:2233  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_53:\n        /* \"contracts/ERC20.sol\":2190:2197  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":2212:2220  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2212:2228  balances[_owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":2221:2227  _owner */\n      dup4\n        /* \"contracts/ERC20.sol\":2212:2228  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2205:2228  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2134:2233  function balanceOf(address _owner) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3610:3750  function finishMinting() onlyOwner canMint public returns (bool) {... */\n    tag_56:\n        /* \"contracts/ERC20.sol\":3669:3673  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3405:3410  owner */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3391:3410  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3391:3401  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":3391:3410  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20.sol\":3383:3411  require(msg.sender == owner) */\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n        /* \"contracts/ERC20.sol\":3466:3481  mintingFinished */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":3465:3481  !mintingFinished */\n      iszero\n        /* \"contracts/ERC20.sol\":3457:3482  require(!mintingFinished) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n        /* \"contracts/ERC20.sol\":3699:3703  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3681:3696  mintingFinished */\n      0x00\n      dup1\n        /* \"contracts/ERC20.sol\":3681:3703  mintingFinished = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":3714:3728  MintFinished() */\n      0xae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa08\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ERC20.sol\":3741:3745  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3734:3745  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3610:3750  function finishMinting() onlyOwner canMint public returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3272:3346  function getOwner() public view returns (address){... */\n    tag_59:\n        /* \"contracts/ERC20.sol\":3313:3320  address */\n      0x00\n        /* \"contracts/ERC20.sol\":3336:3341  owner */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3329:3341  return owner */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3272:3346  function getOwner() public view returns (address){... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1365:1398  address public owner = msg.sender */\n    tag_63:\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1582:1618  string public constant symbol = \"TI\" */\n    tag_66:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      0x5449000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2388:2747  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_70:\n        /* \"contracts/ERC20.sol\":2451:2455  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":2486:2487  0 */\n      dup1\n        /* \"contracts/ERC20.sol\":2471:2488  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":2471:2474  _to */\n      dup4\n        /* \"contracts/ERC20.sol\":2471:2488  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERC20.sol\":2463:2489  require(_to != address(0)) */\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n        /* \"contracts/ERC20.sol\":2513:2521  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2513:2532  balances[tx.origin] */\n      0x00\n        /* \"contracts/ERC20.sol\":2522:2531  tx.origin */\n      origin\n        /* \"contracts/ERC20.sol\":2513:2532  balances[tx.origin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2503:2509  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":2503:2532  _value <= balances[tx.origin] */\n      gt\n      iszero\n        /* \"contracts/ERC20.sol\":2495:2575  require(_value <= balances[tx.origin], \"msg.sender doesn't have enough balance\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/ERC20.sol\":2604:2635  balances[tx.origin].sub(_value) */\n      tag_111\n        /* \"contracts/ERC20.sol\":2628:2634  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":2604:2612  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2604:2623  balances[tx.origin] */\n      0x00\n        /* \"contracts/ERC20.sol\":2613:2622  tx.origin */\n      origin\n        /* \"contracts/ERC20.sol\":2604:2623  balances[tx.origin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2604:2627  balances[tx.origin].sub */\n      tag_86\n      swap1\n        /* \"contracts/ERC20.sol\":2604:2635  balances[tx.origin].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"contracts/ERC20.sol\":2582:2590  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2582:2601  balances[tx.origin] */\n      0x00\n        /* \"contracts/ERC20.sol\":2591:2600  tx.origin */\n      origin\n        /* \"contracts/ERC20.sol\":2582:2601  balances[tx.origin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":2582:2635  balances[tx.origin] = balances[tx.origin].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":2657:2682  balances[_to].add(_value) */\n      tag_112\n        /* \"contracts/ERC20.sol\":2675:2681  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":2657:2665  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2657:2670  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":2666:2669  _to */\n      dup7\n        /* \"contracts/ERC20.sol\":2657:2670  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2657:2674  balances[_to].add */\n      tag_88\n      swap1\n        /* \"contracts/ERC20.sol\":2657:2682  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/ERC20.sol\":2641:2649  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2641:2654  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":2650:2653  _to */\n      dup6\n        /* \"contracts/ERC20.sol\":2641:2654  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":2641:2682  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":2713:2716  _to */\n      dup3\n        /* \"contracts/ERC20.sol\":2693:2725  Transfer(tx.origin, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":2702:2711  tx.origin */\n      origin\n        /* \"contracts/ERC20.sol\":2693:2725  Transfer(tx.origin, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":2718:2724  _value */\n      dup5\n        /* \"contracts/ERC20.sol\":2693:2725  Transfer(tx.origin, _to, _value) */\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":2738:2742  true */\n      0x01\n        /* \"contracts/ERC20.sol\":2731:2742  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2388:2747  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5671:5797  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n    tag_75:\n        /* \"contracts/ERC20.sol\":5745:5752  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":5767:5774  allowed */\n      0x01\n        /* \"contracts/ERC20.sol\":5767:5782  allowed[_owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":5775:5781  _owner */\n      dup5\n        /* \"contracts/ERC20.sol\":5767:5782  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":5767:5792  allowed[_owner][_spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":5783:5791  _spender */\n      dup4\n        /* \"contracts/ERC20.sol\":5767:5792  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":5760:5792  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5671:5797  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":962:1072  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_86:\n        /* \"contracts/ERC20.sol\":1020:1027  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":1047:1048  a */\n      dup3\n        /* \"contracts/ERC20.sol\":1042:1043  b */\n      dup3\n        /* \"contracts/ERC20.sol\":1042:1048  b <= a */\n      gt\n      iszero\n        /* \"contracts/ERC20.sol\":1035:1049  assert(b <= a) */\n      tag_116\n      jumpi\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n    tag_116:\n        /* \"contracts/ERC20.sol\":1066:1067  b */\n      dup2\n        /* \"contracts/ERC20.sol\":1062:1063  a */\n      dup4\n        /* \"contracts/ERC20.sol\":1062:1067  a - b */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/ERC20.sol\":1055:1067  return a - b */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":962:1072  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1134:1257  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n    tag_88:\n        /* \"contracts/ERC20.sol\":1192:1201  uint256 c */\n      0x00\n        /* \"contracts/ERC20.sol\":1217:1218  b */\n      dup2\n        /* \"contracts/ERC20.sol\":1213:1214  a */\n      dup4\n        /* \"contracts/ERC20.sol\":1213:1218  a + b */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"contracts/ERC20.sol\":1209:1218  c = a + b */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1236:1237  a */\n      dup3\n        /* \"contracts/ERC20.sol\":1231:1232  c */\n      dup2\n        /* \"contracts/ERC20.sol\":1231:1237  c >= a */\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":1224:1238  assert(c >= a) */\n      tag_124\n      jumpi\n      tag_125\n      tag_118\n      jump\t// in\n    tag_125:\n    tag_124:\n        /* \"contracts/ERC20.sol\":1134:1257  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_126:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_127:\n        /* \"#utility.yul\":184:205   */\n      tag_155\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_126\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_23:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_157\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_127\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:533   */\n    tag_128:\n        /* \"#utility.yul\":486:492   */\n      0x00\n        /* \"#utility.yul\":520:525   */\n      dup2\n        /* \"#utility.yul\":514:526   */\n      mload\n        /* \"#utility.yul\":504:526   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:708   */\n    tag_129:\n        /* \"#utility.yul\":623:634   */\n      0x00\n        /* \"#utility.yul\":657:663   */\n      dup3\n        /* \"#utility.yul\":652:655   */\n      dup3\n        /* \"#utility.yul\":645:664   */\n      mstore\n        /* \"#utility.yul\":697:701   */\n      0x20\n        /* \"#utility.yul\":692:695   */\n      dup3\n        /* \"#utility.yul\":688:702   */\n      add\n        /* \"#utility.yul\":673:702   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":714:960   */\n    tag_130:\n        /* \"#utility.yul\":795:796   */\n      0x00\n        /* \"#utility.yul\":805:918   */\n    tag_161:\n        /* \"#utility.yul\":819:825   */\n      dup4\n        /* \"#utility.yul\":816:817   */\n      dup2\n        /* \"#utility.yul\":813:826   */\n      lt\n        /* \"#utility.yul\":805:918   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":904:905   */\n      dup1\n        /* \"#utility.yul\":899:902   */\n      dup3\n        /* \"#utility.yul\":895:906   */\n      add\n        /* \"#utility.yul\":889:907   */\n      mload\n        /* \"#utility.yul\":885:886   */\n      dup2\n        /* \"#utility.yul\":880:883   */\n      dup5\n        /* \"#utility.yul\":876:887   */\n      add\n        /* \"#utility.yul\":869:908   */\n      mstore\n        /* \"#utility.yul\":841:843   */\n      0x20\n        /* \"#utility.yul\":838:839   */\n      dup2\n        /* \"#utility.yul\":834:844   */\n      add\n        /* \"#utility.yul\":829:844   */\n      swap1\n      pop\n        /* \"#utility.yul\":805:918   */\n      jump(tag_161)\n    tag_163:\n        /* \"#utility.yul\":952:953   */\n      0x00\n        /* \"#utility.yul\":943:949   */\n      dup5\n        /* \"#utility.yul\":938:941   */\n      dup5\n        /* \"#utility.yul\":934:950   */\n      add\n        /* \"#utility.yul\":927:954   */\n      mstore\n        /* \"#utility.yul\":776:960   */\n      pop\n        /* \"#utility.yul\":714:960   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":966:1068   */\n    tag_131:\n        /* \"#utility.yul\":1007:1013   */\n      0x00\n        /* \"#utility.yul\":1058:1060   */\n      0x1f\n        /* \"#utility.yul\":1054:1061   */\n      not\n        /* \"#utility.yul\":1049:1051   */\n      0x1f\n        /* \"#utility.yul\":1042:1047   */\n      dup4\n        /* \"#utility.yul\":1038:1052   */\n      add\n        /* \"#utility.yul\":1034:1062   */\n      and\n        /* \"#utility.yul\":1024:1062   */\n      swap1\n      pop\n        /* \"#utility.yul\":966:1068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1074:1451   */\n    tag_132:\n        /* \"#utility.yul\":1162:1165   */\n      0x00\n        /* \"#utility.yul\":1190:1229   */\n      tag_166\n        /* \"#utility.yul\":1223:1228   */\n      dup3\n        /* \"#utility.yul\":1190:1229   */\n      tag_128\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1245:1316   */\n      tag_167\n        /* \"#utility.yul\":1309:1315   */\n      dup2\n        /* \"#utility.yul\":1304:1307   */\n      dup6\n        /* \"#utility.yul\":1245:1316   */\n      tag_129\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1238:1316   */\n      swap4\n      pop\n        /* \"#utility.yul\":1325:1390   */\n      tag_168\n        /* \"#utility.yul\":1383:1389   */\n      dup2\n        /* \"#utility.yul\":1378:1381   */\n      dup6\n        /* \"#utility.yul\":1371:1375   */\n      0x20\n        /* \"#utility.yul\":1364:1369   */\n      dup7\n        /* \"#utility.yul\":1360:1376   */\n      add\n        /* \"#utility.yul\":1325:1390   */\n      tag_130\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1415:1444   */\n      tag_169\n        /* \"#utility.yul\":1437:1443   */\n      dup2\n        /* \"#utility.yul\":1415:1444   */\n      tag_131\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1410:1413   */\n      dup5\n        /* \"#utility.yul\":1406:1445   */\n      add\n        /* \"#utility.yul\":1399:1445   */\n      swap2\n      pop\n        /* \"#utility.yul\":1166:1451   */\n      pop\n        /* \"#utility.yul\":1074:1451   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1457:1770   */\n    tag_27:\n        /* \"#utility.yul\":1570:1574   */\n      0x00\n        /* \"#utility.yul\":1608:1610   */\n      0x20\n        /* \"#utility.yul\":1597:1606   */\n      dup3\n        /* \"#utility.yul\":1593:1611   */\n      add\n        /* \"#utility.yul\":1585:1611   */\n      swap1\n      pop\n        /* \"#utility.yul\":1657:1666   */\n      dup2\n        /* \"#utility.yul\":1651:1655   */\n      dup2\n        /* \"#utility.yul\":1647:1667   */\n      sub\n        /* \"#utility.yul\":1643:1644   */\n      0x00\n        /* \"#utility.yul\":1632:1641   */\n      dup4\n        /* \"#utility.yul\":1628:1645   */\n      add\n        /* \"#utility.yul\":1621:1668   */\n      mstore\n        /* \"#utility.yul\":1685:1763   */\n      tag_171\n        /* \"#utility.yul\":1758:1762   */\n      dup2\n        /* \"#utility.yul\":1749:1755   */\n      dup5\n        /* \"#utility.yul\":1685:1763   */\n      tag_132\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1677:1763   */\n      swap1\n      pop\n        /* \"#utility.yul\":1457:1770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1857:1974   */\n    tag_134:\n        /* \"#utility.yul\":1966:1967   */\n      0x00\n        /* \"#utility.yul\":1963:1964   */\n      dup1\n        /* \"#utility.yul\":1956:1968   */\n      revert\n        /* \"#utility.yul\":2103:2229   */\n    tag_136:\n        /* \"#utility.yul\":2140:2147   */\n      0x00\n        /* \"#utility.yul\":2180:2222   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2173:2178   */\n      dup3\n        /* \"#utility.yul\":2169:2223   */\n      and\n        /* \"#utility.yul\":2158:2223   */\n      swap1\n      pop\n        /* \"#utility.yul\":2103:2229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2235:2331   */\n    tag_137:\n        /* \"#utility.yul\":2272:2279   */\n      0x00\n        /* \"#utility.yul\":2301:2325   */\n      tag_177\n        /* \"#utility.yul\":2319:2324   */\n      dup3\n        /* \"#utility.yul\":2301:2325   */\n      tag_136\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2290:2325   */\n      swap1\n      pop\n        /* \"#utility.yul\":2235:2331   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2337:2459   */\n    tag_138:\n        /* \"#utility.yul\":2410:2434   */\n      tag_179\n        /* \"#utility.yul\":2428:2433   */\n      dup2\n        /* \"#utility.yul\":2410:2434   */\n      tag_137\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2403:2408   */\n      dup2\n        /* \"#utility.yul\":2400:2435   */\n      eq\n        /* \"#utility.yul\":2390:2453   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":2449:2450   */\n      0x00\n        /* \"#utility.yul\":2446:2447   */\n      dup1\n        /* \"#utility.yul\":2439:2451   */\n      revert\n        /* \"#utility.yul\":2390:2453   */\n    tag_180:\n        /* \"#utility.yul\":2337:2459   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2465:2604   */\n    tag_139:\n        /* \"#utility.yul\":2511:2516   */\n      0x00\n        /* \"#utility.yul\":2549:2555   */\n      dup2\n        /* \"#utility.yul\":2536:2556   */\n      calldataload\n        /* \"#utility.yul\":2527:2556   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2598   */\n      tag_182\n        /* \"#utility.yul\":2592:2597   */\n      dup2\n        /* \"#utility.yul\":2565:2598   */\n      tag_138\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2465:2604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2610:2687   */\n    tag_140:\n        /* \"#utility.yul\":2647:2654   */\n      0x00\n        /* \"#utility.yul\":2676:2681   */\n      dup2\n        /* \"#utility.yul\":2665:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2610:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2815   */\n    tag_141:\n        /* \"#utility.yul\":2766:2790   */\n      tag_185\n        /* \"#utility.yul\":2784:2789   */\n      dup2\n        /* \"#utility.yul\":2766:2790   */\n      tag_140\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2759:2764   */\n      dup2\n        /* \"#utility.yul\":2756:2791   */\n      eq\n        /* \"#utility.yul\":2746:2809   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":2805:2806   */\n      0x00\n        /* \"#utility.yul\":2802:2803   */\n      dup1\n        /* \"#utility.yul\":2795:2807   */\n      revert\n        /* \"#utility.yul\":2746:2809   */\n    tag_186:\n        /* \"#utility.yul\":2693:2815   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2821:2960   */\n    tag_142:\n        /* \"#utility.yul\":2867:2872   */\n      0x00\n        /* \"#utility.yul\":2905:2911   */\n      dup2\n        /* \"#utility.yul\":2892:2912   */\n      calldataload\n        /* \"#utility.yul\":2883:2912   */\n      swap1\n      pop\n        /* \"#utility.yul\":2921:2954   */\n      tag_188\n        /* \"#utility.yul\":2948:2953   */\n      dup2\n        /* \"#utility.yul\":2921:2954   */\n      tag_141\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2821:2960   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2966:3440   */\n    tag_30:\n        /* \"#utility.yul\":3034:3040   */\n      0x00\n        /* \"#utility.yul\":3042:3048   */\n      dup1\n        /* \"#utility.yul\":3091:3093   */\n      0x40\n        /* \"#utility.yul\":3079:3088   */\n      dup4\n        /* \"#utility.yul\":3070:3077   */\n      dup6\n        /* \"#utility.yul\":3066:3089   */\n      sub\n        /* \"#utility.yul\":3062:3094   */\n      slt\n        /* \"#utility.yul\":3059:3178   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":3097:3176   */\n      tag_191\n      tag_134\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3059:3178   */\n    tag_190:\n        /* \"#utility.yul\":3217:3218   */\n      0x00\n        /* \"#utility.yul\":3242:3295   */\n      tag_192\n        /* \"#utility.yul\":3287:3294   */\n      dup6\n        /* \"#utility.yul\":3278:3284   */\n      dup3\n        /* \"#utility.yul\":3267:3276   */\n      dup7\n        /* \"#utility.yul\":3263:3285   */\n      add\n        /* \"#utility.yul\":3242:3295   */\n      tag_139\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3232:3295   */\n      swap3\n      pop\n        /* \"#utility.yul\":3188:3305   */\n      pop\n        /* \"#utility.yul\":3344:3346   */\n      0x20\n        /* \"#utility.yul\":3370:3423   */\n      tag_193\n        /* \"#utility.yul\":3415:3422   */\n      dup6\n        /* \"#utility.yul\":3406:3412   */\n      dup3\n        /* \"#utility.yul\":3395:3404   */\n      dup7\n        /* \"#utility.yul\":3391:3413   */\n      add\n        /* \"#utility.yul\":3370:3423   */\n      tag_142\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3360:3423   */\n      swap2\n      pop\n        /* \"#utility.yul\":3315:3433   */\n      pop\n        /* \"#utility.yul\":2966:3440   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_143:\n        /* \"#utility.yul\":3533:3557   */\n      tag_195\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_140\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_36:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_197\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_143\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_39:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_200\n      tag_134\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3908:4027   */\n    tag_199:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_201\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_139\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_202\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_139\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_203\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_142\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_144:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_145:\n        /* \"#utility.yul\":4598:4620   */\n      tag_206\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_144\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_45:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_208\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_145\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_52:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_211\n      tag_134\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4929:5048   */\n    tag_210:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_212\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_139\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5306   */\n    tag_146:\n        /* \"#utility.yul\":5275:5299   */\n      tag_214\n        /* \"#utility.yul\":5293:5298   */\n      dup2\n        /* \"#utility.yul\":5275:5299   */\n      tag_137\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5300   */\n      mstore\n        /* \"#utility.yul\":5188:5306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5534   */\n    tag_61:\n        /* \"#utility.yul\":5405:5409   */\n      0x00\n        /* \"#utility.yul\":5443:5445   */\n      0x20\n        /* \"#utility.yul\":5432:5441   */\n      dup3\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5420:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5527   */\n      tag_216\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5456:5527   */\n      tag_146\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5312:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_74:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_219\n      tag_134\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5633:5752   */\n    tag_218:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_220\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_139\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_221\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_139\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6202   */\n    tag_147:\n        /* \"#utility.yul\":6160:6194   */\n      0x46726f6d20646f65736e2774206861766520656e6f7567682062616c616e6365\n        /* \"#utility.yul\":6156:6157   */\n      0x00\n        /* \"#utility.yul\":6148:6154   */\n      dup3\n        /* \"#utility.yul\":6144:6158   */\n      add\n        /* \"#utility.yul\":6137:6195   */\n      mstore\n        /* \"#utility.yul\":6020:6202   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6208:6574   */\n    tag_148:\n        /* \"#utility.yul\":6350:6353   */\n      0x00\n        /* \"#utility.yul\":6371:6438   */\n      tag_224\n        /* \"#utility.yul\":6435:6437   */\n      0x20\n        /* \"#utility.yul\":6430:6433   */\n      dup4\n        /* \"#utility.yul\":6371:6438   */\n      tag_129\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6364:6438   */\n      swap2\n      pop\n        /* \"#utility.yul\":6447:6540   */\n      tag_225\n        /* \"#utility.yul\":6536:6539   */\n      dup3\n        /* \"#utility.yul\":6447:6540   */\n      tag_147\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6565:6567   */\n      0x20\n        /* \"#utility.yul\":6560:6563   */\n      dup3\n        /* \"#utility.yul\":6556:6568   */\n      add\n        /* \"#utility.yul\":6549:6568   */\n      swap1\n      pop\n        /* \"#utility.yul\":6208:6574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6580:6999   */\n    tag_84:\n        /* \"#utility.yul\":6746:6750   */\n      0x00\n        /* \"#utility.yul\":6784:6786   */\n      0x20\n        /* \"#utility.yul\":6773:6782   */\n      dup3\n        /* \"#utility.yul\":6769:6787   */\n      add\n        /* \"#utility.yul\":6761:6787   */\n      swap1\n      pop\n        /* \"#utility.yul\":6833:6842   */\n      dup2\n        /* \"#utility.yul\":6827:6831   */\n      dup2\n        /* \"#utility.yul\":6823:6843   */\n      sub\n        /* \"#utility.yul\":6819:6820   */\n      0x00\n        /* \"#utility.yul\":6808:6817   */\n      dup4\n        /* \"#utility.yul\":6804:6821   */\n      add\n        /* \"#utility.yul\":6797:6844   */\n      mstore\n        /* \"#utility.yul\":6861:6992   */\n      tag_227\n        /* \"#utility.yul\":6987:6991   */\n      dup2\n        /* \"#utility.yul\":6861:6992   */\n      tag_148\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6853:6992   */\n      swap1\n      pop\n        /* \"#utility.yul\":6580:6999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7005:7230   */\n    tag_149:\n        /* \"#utility.yul\":7145:7179   */\n      0x6d73672e73656e64657220646f65736e2774206861766520656e6f7567682062\n        /* \"#utility.yul\":7141:7142   */\n      0x00\n        /* \"#utility.yul\":7133:7139   */\n      dup3\n        /* \"#utility.yul\":7129:7143   */\n      add\n        /* \"#utility.yul\":7122:7180   */\n      mstore\n        /* \"#utility.yul\":7214:7222   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7209:7211   */\n      0x20\n        /* \"#utility.yul\":7201:7207   */\n      dup3\n        /* \"#utility.yul\":7197:7212   */\n      add\n        /* \"#utility.yul\":7190:7223   */\n      mstore\n        /* \"#utility.yul\":7005:7230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7236:7602   */\n    tag_150:\n        /* \"#utility.yul\":7378:7381   */\n      0x00\n        /* \"#utility.yul\":7399:7466   */\n      tag_230\n        /* \"#utility.yul\":7463:7465   */\n      0x26\n        /* \"#utility.yul\":7458:7461   */\n      dup4\n        /* \"#utility.yul\":7399:7466   */\n      tag_129\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7392:7466   */\n      swap2\n      pop\n        /* \"#utility.yul\":7475:7568   */\n      tag_231\n        /* \"#utility.yul\":7564:7567   */\n      dup3\n        /* \"#utility.yul\":7475:7568   */\n      tag_149\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7593:7595   */\n      0x40\n        /* \"#utility.yul\":7588:7591   */\n      dup3\n        /* \"#utility.yul\":7584:7596   */\n      add\n        /* \"#utility.yul\":7577:7596   */\n      swap1\n      pop\n        /* \"#utility.yul\":7236:7602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7608:8027   */\n    tag_110:\n        /* \"#utility.yul\":7774:7778   */\n      0x00\n        /* \"#utility.yul\":7812:7814   */\n      0x20\n        /* \"#utility.yul\":7801:7810   */\n      dup3\n        /* \"#utility.yul\":7797:7815   */\n      add\n        /* \"#utility.yul\":7789:7815   */\n      swap1\n      pop\n        /* \"#utility.yul\":7861:7870   */\n      dup2\n        /* \"#utility.yul\":7855:7859   */\n      dup2\n        /* \"#utility.yul\":7851:7871   */\n      sub\n        /* \"#utility.yul\":7847:7848   */\n      0x00\n        /* \"#utility.yul\":7836:7845   */\n      dup4\n        /* \"#utility.yul\":7832:7849   */\n      add\n        /* \"#utility.yul\":7825:7872   */\n      mstore\n        /* \"#utility.yul\":7889:8020   */\n      tag_233\n        /* \"#utility.yul\":8015:8019   */\n      dup2\n        /* \"#utility.yul\":7889:8020   */\n      tag_150\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7881:8020   */\n      swap1\n      pop\n        /* \"#utility.yul\":7608:8027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8033:8213   */\n    tag_118:\n        /* \"#utility.yul\":8081:8158   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8078:8079   */\n      0x00\n        /* \"#utility.yul\":8071:8159   */\n      mstore\n        /* \"#utility.yul\":8178:8182   */\n      0x01\n        /* \"#utility.yul\":8175:8176   */\n      0x04\n        /* \"#utility.yul\":8168:8183   */\n      mstore\n        /* \"#utility.yul\":8202:8206   */\n      0x24\n        /* \"#utility.yul\":8199:8200   */\n      0x00\n        /* \"#utility.yul\":8192:8207   */\n      revert\n        /* \"#utility.yul\":8219:8399   */\n    tag_151:\n        /* \"#utility.yul\":8267:8344   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8264:8265   */\n      0x00\n        /* \"#utility.yul\":8257:8345   */\n      mstore\n        /* \"#utility.yul\":8364:8368   */\n      0x11\n        /* \"#utility.yul\":8361:8362   */\n      0x04\n        /* \"#utility.yul\":8354:8369   */\n      mstore\n        /* \"#utility.yul\":8388:8392   */\n      0x24\n        /* \"#utility.yul\":8385:8386   */\n      0x00\n        /* \"#utility.yul\":8378:8393   */\n      revert\n        /* \"#utility.yul\":8405:8599   */\n    tag_120:\n        /* \"#utility.yul\":8445:8449   */\n      0x00\n        /* \"#utility.yul\":8465:8485   */\n      tag_237\n        /* \"#utility.yul\":8483:8484   */\n      dup3\n        /* \"#utility.yul\":8465:8485   */\n      tag_140\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":8460:8485   */\n      swap2\n      pop\n        /* \"#utility.yul\":8499:8519   */\n      tag_238\n        /* \"#utility.yul\":8517:8518   */\n      dup4\n        /* \"#utility.yul\":8499:8519   */\n      tag_140\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8494:8519   */\n      swap3\n      pop\n        /* \"#utility.yul\":8543:8544   */\n      dup3\n        /* \"#utility.yul\":8540:8541   */\n      dup3\n        /* \"#utility.yul\":8536:8545   */\n      sub\n        /* \"#utility.yul\":8528:8545   */\n      swap1\n      pop\n        /* \"#utility.yul\":8567:8568   */\n      dup2\n        /* \"#utility.yul\":8561:8565   */\n      dup2\n        /* \"#utility.yul\":8558:8569   */\n      gt\n        /* \"#utility.yul\":8555:8592   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":8572:8590   */\n      tag_240\n      tag_151\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8555:8592   */\n    tag_239:\n        /* \"#utility.yul\":8405:8599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8605:8796   */\n    tag_123:\n        /* \"#utility.yul\":8645:8648   */\n      0x00\n        /* \"#utility.yul\":8664:8684   */\n      tag_242\n        /* \"#utility.yul\":8682:8683   */\n      dup3\n        /* \"#utility.yul\":8664:8684   */\n      tag_140\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":8659:8684   */\n      swap2\n      pop\n        /* \"#utility.yul\":8698:8718   */\n      tag_243\n        /* \"#utility.yul\":8716:8717   */\n      dup4\n        /* \"#utility.yul\":8698:8718   */\n      tag_140\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":8693:8718   */\n      swap3\n      pop\n        /* \"#utility.yul\":8741:8742   */\n      dup3\n        /* \"#utility.yul\":8738:8739   */\n      dup3\n        /* \"#utility.yul\":8734:8743   */\n      add\n        /* \"#utility.yul\":8727:8743   */\n      swap1\n      pop\n        /* \"#utility.yul\":8762:8765   */\n      dup1\n        /* \"#utility.yul\":8759:8760   */\n      dup3\n        /* \"#utility.yul\":8756:8766   */\n      gt\n        /* \"#utility.yul\":8753:8789   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":8769:8787   */\n      tag_245\n      tag_151\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8753:8789   */\n    tag_244:\n        /* \"#utility.yul\":8605:8796   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122048f6965a16ff6653bb31fa00b15fb20daaf7764d1406e3a603c9b4fdfe2c1fe164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff02191690831515021790555033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006b57600080fd5b506112428061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780638da5cb5b116100665780638da5cb5b1461026357806395d89b4114610281578063a9059cbb1461029f578063dd62ed3e146102cf576100ea565b806370a08231146101f75780637d64bcb414610227578063893d20e814610245576100ea565b806318160ddd116100c857806318160ddd1461015b57806323b872dd14610179578063313ce567146101a957806340c10f19146101c7576100ea565b806305d2035b146100ef57806306fdde031461010d578063095ea7b31461012b575b600080fd5b6100f76102ff565b6040516101049190610d57565b60405180910390f35b610115610310565b6040516101229190610e02565b60405180910390f35b61014560048036038101906101409190610ebd565b610349565b6040516101529190610d57565b60405180910390f35b61016361043b565b6040516101709190610f0c565b60405180910390f35b610193600480360381019061018e9190610f27565b610445565b6040516101a09190610d57565b60405180910390f35b6101b161069b565b6040516101be9190610f96565b60405180910390f35b6101e160048036038101906101dc9190610ebd565b6106a0565b6040516101ee9190610d57565b60405180910390f35b610211600480360381019061020c9190610fb1565b610881565b60405161021e9190610f0c565b60405180910390f35b61022f6108ca565b60405161023c9190610d57565b60405180910390f35b61024d61098a565b60405161025a9190610fed565b60405180910390f35b61026b6109b3565b6040516102789190610fed565b60405180910390f35b6102896109d9565b6040516102969190610e02565b60405180910390f35b6102b960048036038101906102b49190610ebd565b610a12565b6040516102c69190610d57565b60405180910390f35b6102e960048036038101906102e49190611008565b610c67565b6040516102f69190610f0c565b60405180910390f35b60008054906101000a900460ff1681565b6040518060400160405280600b81526020017f5472757374496e7375726500000000000000000000000000000000000000000081525081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104299190610f0c565b60405180910390a36001905092915050565b6000600354905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361047f57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f890611094565b60405180910390fd5b61055382600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cee90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105e882600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d1590919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106889190610f0c565b60405180910390a3600190509392505050565b601281565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106fb57600080fd5b60008054906101000a900460ff161561071357600080fd5b61072882600354610d1590919063ffffffff16565b60038190555061078082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d1590919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040516108099190610f0c565b60405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161086f9190610f0c565b60405180910390a36001905092915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461092557600080fd5b60008054906101000a900460ff161561093d57600080fd5b60016000806101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600281526020017f544900000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a4c57600080fd5b600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610ace576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac590611126565b60405180910390fd5b610b2082600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cee90919063ffffffff16565b600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bb582600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d1590919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c559190610f0c565b60405180910390a36001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115610d0157610d00611146565b5b8183610d0d91906111a4565b905092915050565b60008183610d2391906111d8565b905082811015610d3657610d35611146565b5b92915050565b60008115159050919050565b610d5181610d3c565b82525050565b6000602082019050610d6c6000830184610d48565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dac578082015181840152602081019050610d91565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dd482610d72565b610dde8185610d7d565b9350610dee818560208601610d8e565b610df781610db8565b840191505092915050565b60006020820190508181036000830152610e1c8184610dc9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5482610e29565b9050919050565b610e6481610e49565b8114610e6f57600080fd5b50565b600081359050610e8181610e5b565b92915050565b6000819050919050565b610e9a81610e87565b8114610ea557600080fd5b50565b600081359050610eb781610e91565b92915050565b60008060408385031215610ed457610ed3610e24565b5b6000610ee285828601610e72565b9250506020610ef385828601610ea8565b9150509250929050565b610f0681610e87565b82525050565b6000602082019050610f216000830184610efd565b92915050565b600080600060608486031215610f4057610f3f610e24565b5b6000610f4e86828701610e72565b9350506020610f5f86828701610e72565b9250506040610f7086828701610ea8565b9150509250925092565b600060ff82169050919050565b610f9081610f7a565b82525050565b6000602082019050610fab6000830184610f87565b92915050565b600060208284031215610fc757610fc6610e24565b5b6000610fd584828501610e72565b91505092915050565b610fe781610e49565b82525050565b60006020820190506110026000830184610fde565b92915050565b6000806040838503121561101f5761101e610e24565b5b600061102d85828601610e72565b925050602061103e85828601610e72565b9150509250929050565b7f46726f6d20646f65736e2774206861766520656e6f7567682062616c616e6365600082015250565b600061107e602083610d7d565b915061108982611048565b602082019050919050565b600060208201905081810360008301526110ad81611071565b9050919050565b7f6d73672e73656e64657220646f65736e2774206861766520656e6f756768206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611110602683610d7d565b915061111b826110b4565b604082019050919050565b6000602082019050818103600083015261113f81611103565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111af82610e87565b91506111ba83610e87565b92508282039050818111156111d2576111d1611175565b5b92915050565b60006111e382610e87565b91506111ee83610e87565b925082820190508082111561120657611205611175565b5b9291505056fea264697066735822122048f6965a16ff6653bb31fa00b15fb20daaf7764d1406e3a603c9b4fdfe2c1fe164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1242 DUP1 PUSH2 0x7B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2CF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x7D64BCB4 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x245 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C7 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5D2035B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x9D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5472757374496E73757265000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F8 SWAP1 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x553 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x5E8 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD15 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x728 DUP3 PUSH1 0x3 SLOAD PUSH2 0xD15 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x780 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD15 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP4 PUSH1 0x40 MLOAD PUSH2 0x809 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x86F SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5449000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB20 DUP3 PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xBB5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD15 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC55 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xD01 JUMPI PUSH2 0xD00 PUSH2 0x1146 JUMP JUMPDEST JUMPDEST DUP2 DUP4 PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x11A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xD36 JUMPI PUSH2 0xD35 PUSH2 0x1146 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD51 DUP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDAC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD4 DUP3 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0xDDE DUP2 DUP6 PUSH2 0xD7D JUMP JUMPDEST SWAP4 POP PUSH2 0xDEE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xDF7 DUP2 PUSH2 0xDB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1C DUP2 DUP5 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE54 DUP3 PUSH2 0xE29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE64 DUP2 PUSH2 0xE49 JUMP JUMPDEST DUP2 EQ PUSH2 0xE6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE81 DUP2 PUSH2 0xE5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE9A DUP2 PUSH2 0xE87 JUMP JUMPDEST DUP2 EQ PUSH2 0xEA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB7 DUP2 PUSH2 0xE91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED4 JUMPI PUSH2 0xED3 PUSH2 0xE24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE2 DUP6 DUP3 DUP7 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEF3 DUP6 DUP3 DUP7 ADD PUSH2 0xEA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF06 DUP2 PUSH2 0xE87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF21 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF40 JUMPI PUSH2 0xF3F PUSH2 0xE24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF4E DUP7 DUP3 DUP8 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF5F DUP7 DUP3 DUP8 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF70 DUP7 DUP3 DUP8 ADD PUSH2 0xEA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF90 DUP2 PUSH2 0xF7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC7 JUMPI PUSH2 0xFC6 PUSH2 0xE24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD5 DUP5 DUP3 DUP6 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFE7 DUP2 PUSH2 0xE49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1002 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x101F JUMPI PUSH2 0x101E PUSH2 0xE24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x102D DUP6 DUP3 DUP7 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x103E DUP6 DUP3 DUP7 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x46726F6D20646F65736E2774206861766520656E6F7567682062616C616E6365 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107E PUSH1 0x20 DUP4 PUSH2 0xD7D JUMP JUMPDEST SWAP2 POP PUSH2 0x1089 DUP3 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10AD DUP2 PUSH2 0x1071 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D73672E73656E64657220646F65736E2774206861766520656E6F7567682062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1110 PUSH1 0x26 DUP4 PUSH2 0xD7D JUMP JUMPDEST SWAP2 POP PUSH2 0x111B DUP3 PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x113F DUP2 PUSH2 0x1103 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11AF DUP3 PUSH2 0xE87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11BA DUP4 PUSH2 0xE87 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11D2 JUMPI PUSH2 0x11D1 PUSH2 0x1175 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E3 DUP3 PUSH2 0xE87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EE DUP4 PUSH2 0xE87 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1206 JUMPI PUSH2 0x1205 PUSH2 0x1175 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xF6 SWAP7 GAS AND SELFDESTRUCT PUSH7 0x53BB31FA00B15F 0xB2 0xD 0xAA 0xF7 PUSH23 0x4D1406E3A603C9B4FDFE2C1FE164736F6C634300081200 CALLER ",
							"sourceMap": "1261:4682:0:-:0;;;1349:5;1319:35;;;;;;;;;;;;;;;;;;;;1388:10;1365:33;;;;;;;;;;;;;;;;;;;;1261:4682;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_97": {
									"entryPoint": 3349,
									"id": 97,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_433": {
									"entryPoint": 3175,
									"id": 433,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_416": {
									"entryPoint": 841,
									"id": 416,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_166": {
									"entryPoint": 2177,
									"id": 166,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_127": {
									"entryPoint": 1691,
									"id": 127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finishMinting_326": {
									"entryPoint": 2250,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOwner_286": {
									"entryPoint": 2442,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_278": {
									"entryPoint": 1696,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintingFinished_104": {
									"entryPoint": 767,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_121": {
									"entryPoint": 784,
									"id": 121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_108": {
									"entryPoint": 2483,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_72": {
									"entryPoint": 3310,
									"id": 72,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_124": {
									"entryPoint": 2521,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_442": {
									"entryPoint": 1083,
									"id": 442,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_387": {
									"entryPoint": 1093,
									"id": 387,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_229": {
									"entryPoint": 2578,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3470,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x01": {
									"entryPoint": 4422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0": {
									"entryPoint": 4276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d": {
									"entryPoint": 4168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8799:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "504:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "520:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "514:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "504:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "476:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "486:6:1",
														"type": ""
													}
												],
												"src": "434:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "635:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "652:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "657:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "673:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "692:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "688:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "673:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "607:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "612:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "623:11:1",
														"type": ""
													}
												],
												"src": "539:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "776:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "786:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "795:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "790:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "855:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "880:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "885:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "876:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "876:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "899:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "904:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "895:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "895:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "889:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "889:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "869:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "869:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "869:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "816:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "819:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "813:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "827:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "829:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "838:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "841:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "834:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "834:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "829:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "809:3:1",
																"statements": []
															},
															"src": "805:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "938:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "943:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "934:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "934:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "952:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "758:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "763:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "768:6:1",
														"type": ""
													}
												],
												"src": "714:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1014:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1024:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1042:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1049:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1038:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1038:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1058:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1054:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1034:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1024:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "997:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1007:6:1",
														"type": ""
													}
												],
												"src": "966:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1166:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1176:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1223:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1190:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1180:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1238:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1304:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1309:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1245:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1238:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1371:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1360:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1378:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1383:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1325:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1325:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1325:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1399:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1410:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1437:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1415:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1415:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1406:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1406:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1147:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1154:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1162:3:1",
														"type": ""
													}
												],
												"src": "1074:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1575:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1585:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1597:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1608:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1585:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1632:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1643:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1628:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1628:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1651:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1657:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1647:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1621:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1621:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1677:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1749:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1758:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1685:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1677:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1547:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1559:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1570:4:1",
														"type": ""
													}
												],
												"src": "1457:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1816:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1826:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1842:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1836:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1809:6:1",
														"type": ""
													}
												],
												"src": "1776:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1946:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1966:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1956:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1956:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1857:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2069:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2089:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2079:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2079:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2079:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1980:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2148:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2158:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2173:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2169:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2169:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2158:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2130:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2140:7:1",
														"type": ""
													}
												],
												"src": "2103:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2280:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2290:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2319:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2301:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2301:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2290:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2262:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2272:7:1",
														"type": ""
													}
												],
												"src": "2235:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2380:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2437:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2446:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2449:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2439:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2439:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2439:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2403:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2428:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2410:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2410:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2400:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2400:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2393:43:1"
															},
															"nodeType": "YulIf",
															"src": "2390:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2373:5:1",
														"type": ""
													}
												],
												"src": "2337:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2517:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2527:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2549:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2536:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2536:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2527:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2592:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2565:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2565:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2495:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2503:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2511:5:1",
														"type": ""
													}
												],
												"src": "2465:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2655:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2665:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2676:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2665:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2637:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2647:7:1",
														"type": ""
													}
												],
												"src": "2610:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2793:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2802:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2805:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2795:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2795:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2795:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2759:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2784:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2766:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2766:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2756:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:43:1"
															},
															"nodeType": "YulIf",
															"src": "2746:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2729:5:1",
														"type": ""
													}
												],
												"src": "2693:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2873:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2883:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2905:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2892:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2883:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2948:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2921:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2921:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2921:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2851:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2859:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2867:5:1",
														"type": ""
													}
												],
												"src": "2821:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3049:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3095:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3097:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3097:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3097:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3070:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3079:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3066:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3066:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3091:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3062:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:32:1"
															},
															"nodeType": "YulIf",
															"src": "3059:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3188:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3203:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3217:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3207:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3232:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3267:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3278:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3263:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3263:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3287:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3242:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3242:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3232:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3315:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3330:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3334:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3360:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3395:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3406:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3391:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3391:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3415:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3370:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3370:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3360:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3011:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3022:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3034:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3042:6:1",
														"type": ""
													}
												],
												"src": "2966:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:1",
														"type": ""
													}
												],
												"src": "3446:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:1",
														"type": ""
													}
												],
												"src": "3570:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:1"
															},
															"nodeType": "YulIf",
															"src": "3908:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:1",
														"type": ""
													}
												],
												"src": "3798:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:1",
														"type": ""
													}
												],
												"src": "4423:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:1",
														"type": ""
													}
												],
												"src": "4515:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:1",
														"type": ""
													}
												],
												"src": "4633:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:1"
															},
															"nodeType": "YulIf",
															"src": "4929:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:1",
														"type": ""
													}
												],
												"src": "4853:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5253:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5293:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5275:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5275:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5248:3:1",
														"type": ""
													}
												],
												"src": "5188:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5410:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5420:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5443:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5456:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5456:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5382:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5394:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5405:4:1",
														"type": ""
													}
												],
												"src": "5312:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5623:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5669:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5636:32:1"
															},
															"nodeType": "YulIf",
															"src": "5633:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5762:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5806:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5889:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5934:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5585:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5596:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5608:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5616:6:1",
														"type": ""
													}
												],
												"src": "5540:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6126:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6148:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6156:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6144:14:1"
																	},
																	{
																		"hexValue": "46726f6d20646f65736e2774206861766520656e6f7567682062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6160:34:1",
																		"type": "",
																		"value": "From doesn't have enough balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6137:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6137:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6118:6:1",
														"type": ""
													}
												],
												"src": "6020:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6354:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6364:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6430:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6435:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6371:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6364:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6536:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d",
																	"nodeType": "YulIdentifier",
																	"src": "6447:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6447:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6447:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6549:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6560:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6565:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6549:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6342:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6350:3:1",
														"type": ""
													}
												],
												"src": "6208:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6751:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6761:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6773:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6784:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6769:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6761:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6808:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6819:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6804:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6827:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6833:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6823:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6797:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6797:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6797:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6853:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6987:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6861:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6861:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6853:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6731:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6746:4:1",
														"type": ""
													}
												],
												"src": "6580:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7111:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7133:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7141:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7129:14:1"
																	},
																	{
																		"hexValue": "6d73672e73656e64657220646f65736e2774206861766520656e6f7567682062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7145:34:1",
																		"type": "",
																		"value": "msg.sender doesn't have enough b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7122:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7201:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7209:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7197:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7197:15:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7214:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7190:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7190:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7190:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7103:6:1",
														"type": ""
													}
												],
												"src": "7005:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7382:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7392:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7458:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7463:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7399:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7399:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7392:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7564:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0",
																	"nodeType": "YulIdentifier",
																	"src": "7475:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7475:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7475:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7577:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7588:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7593:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7584:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7584:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7577:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7370:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7378:3:1",
														"type": ""
													}
												],
												"src": "7236:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7779:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7789:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7801:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7797:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7797:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7789:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7836:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7847:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7832:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7855:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7861:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7851:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7851:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7825:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7881:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8015:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7889:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7881:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7759:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7774:4:1",
														"type": ""
													}
												],
												"src": "7608:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8061:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8078:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8081:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8071:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8071:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8071:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8175:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8178:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8168:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8168:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8168:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8199:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8202:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8192:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "8033:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8247:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8264:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8267:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8257:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8257:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8257:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8361:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8364:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8354:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8354:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8354:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8385:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8388:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8378:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8378:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8219:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8450:149:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8460:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8483:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8465:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8465:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8460:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8494:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8517:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8499:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8499:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8494:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8528:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8540:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8543:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8536:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8536:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8528:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8570:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8572:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8572:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8572:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8561:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8567:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8558:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8558:11:1"
															},
															"nodeType": "YulIf",
															"src": "8555:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8436:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8439:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8445:4:1",
														"type": ""
													}
												],
												"src": "8405:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8649:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8659:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8682:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8664:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8664:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8659:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8693:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8716:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8698:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8698:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8693:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8727:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8738:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8741:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8734:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8734:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8727:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8767:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8769:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8769:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8769:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8759:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8762:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8756:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8756:10:1"
															},
															"nodeType": "YulIf",
															"src": "8753:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8636:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8639:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8645:3:1",
														"type": ""
													}
												],
												"src": "8605:191:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d(memPtr) {\n\n        mstore(add(memPtr, 0), \"From doesn't have enough balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0(memPtr) {\n\n        mstore(add(memPtr, 0), \"msg.sender doesn't have enough b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780638da5cb5b116100665780638da5cb5b1461026357806395d89b4114610281578063a9059cbb1461029f578063dd62ed3e146102cf576100ea565b806370a08231146101f75780637d64bcb414610227578063893d20e814610245576100ea565b806318160ddd116100c857806318160ddd1461015b57806323b872dd14610179578063313ce567146101a957806340c10f19146101c7576100ea565b806305d2035b146100ef57806306fdde031461010d578063095ea7b31461012b575b600080fd5b6100f76102ff565b6040516101049190610d57565b60405180910390f35b610115610310565b6040516101229190610e02565b60405180910390f35b61014560048036038101906101409190610ebd565b610349565b6040516101529190610d57565b60405180910390f35b61016361043b565b6040516101709190610f0c565b60405180910390f35b610193600480360381019061018e9190610f27565b610445565b6040516101a09190610d57565b60405180910390f35b6101b161069b565b6040516101be9190610f96565b60405180910390f35b6101e160048036038101906101dc9190610ebd565b6106a0565b6040516101ee9190610d57565b60405180910390f35b610211600480360381019061020c9190610fb1565b610881565b60405161021e9190610f0c565b60405180910390f35b61022f6108ca565b60405161023c9190610d57565b60405180910390f35b61024d61098a565b60405161025a9190610fed565b60405180910390f35b61026b6109b3565b6040516102789190610fed565b60405180910390f35b6102896109d9565b6040516102969190610e02565b60405180910390f35b6102b960048036038101906102b49190610ebd565b610a12565b6040516102c69190610d57565b60405180910390f35b6102e960048036038101906102e49190611008565b610c67565b6040516102f69190610f0c565b60405180910390f35b60008054906101000a900460ff1681565b6040518060400160405280600b81526020017f5472757374496e7375726500000000000000000000000000000000000000000081525081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104299190610f0c565b60405180910390a36001905092915050565b6000600354905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361047f57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f890611094565b60405180910390fd5b61055382600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cee90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105e882600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d1590919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106889190610f0c565b60405180910390a3600190509392505050565b601281565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106fb57600080fd5b60008054906101000a900460ff161561071357600080fd5b61072882600354610d1590919063ffffffff16565b60038190555061078082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d1590919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040516108099190610f0c565b60405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161086f9190610f0c565b60405180910390a36001905092915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461092557600080fd5b60008054906101000a900460ff161561093d57600080fd5b60016000806101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600281526020017f544900000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a4c57600080fd5b600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610ace576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac590611126565b60405180910390fd5b610b2082600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cee90919063ffffffff16565b600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bb582600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d1590919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c559190610f0c565b60405180910390a36001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115610d0157610d00611146565b5b8183610d0d91906111a4565b905092915050565b60008183610d2391906111d8565b905082811015610d3657610d35611146565b5b92915050565b60008115159050919050565b610d5181610d3c565b82525050565b6000602082019050610d6c6000830184610d48565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dac578082015181840152602081019050610d91565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dd482610d72565b610dde8185610d7d565b9350610dee818560208601610d8e565b610df781610db8565b840191505092915050565b60006020820190508181036000830152610e1c8184610dc9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5482610e29565b9050919050565b610e6481610e49565b8114610e6f57600080fd5b50565b600081359050610e8181610e5b565b92915050565b6000819050919050565b610e9a81610e87565b8114610ea557600080fd5b50565b600081359050610eb781610e91565b92915050565b60008060408385031215610ed457610ed3610e24565b5b6000610ee285828601610e72565b9250506020610ef385828601610ea8565b9150509250929050565b610f0681610e87565b82525050565b6000602082019050610f216000830184610efd565b92915050565b600080600060608486031215610f4057610f3f610e24565b5b6000610f4e86828701610e72565b9350506020610f5f86828701610e72565b9250506040610f7086828701610ea8565b9150509250925092565b600060ff82169050919050565b610f9081610f7a565b82525050565b6000602082019050610fab6000830184610f87565b92915050565b600060208284031215610fc757610fc6610e24565b5b6000610fd584828501610e72565b91505092915050565b610fe781610e49565b82525050565b60006020820190506110026000830184610fde565b92915050565b6000806040838503121561101f5761101e610e24565b5b600061102d85828601610e72565b925050602061103e85828601610e72565b9150509250929050565b7f46726f6d20646f65736e2774206861766520656e6f7567682062616c616e6365600082015250565b600061107e602083610d7d565b915061108982611048565b602082019050919050565b600060208201905081810360008301526110ad81611071565b9050919050565b7f6d73672e73656e64657220646f65736e2774206861766520656e6f756768206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611110602683610d7d565b915061111b826110b4565b604082019050919050565b6000602082019050818103600083015261113f81611103565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111af82610e87565b91506111ba83610e87565b92508282039050818111156111d2576111d1611175565b5b92915050565b60006111e382610e87565b91506111ee83610e87565b925082820190508082111561120657611205611175565b5b9291505056fea264697066735822122048f6965a16ff6653bb31fa00b15fb20daaf7764d1406e3a603c9b4fdfe2c1fe164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2CF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x7D64BCB4 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x245 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C7 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5D2035B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x98A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x9D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5472757374496E73757265000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F8 SWAP1 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x553 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x5E8 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD15 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x728 DUP3 PUSH1 0x3 SLOAD PUSH2 0xD15 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x780 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD15 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP4 PUSH1 0x40 MLOAD PUSH2 0x809 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x86F SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5449000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB20 DUP3 PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xBB5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD15 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC55 SWAP2 SWAP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xD01 JUMPI PUSH2 0xD00 PUSH2 0x1146 JUMP JUMPDEST JUMPDEST DUP2 DUP4 PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x11A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xD36 JUMPI PUSH2 0xD35 PUSH2 0x1146 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD51 DUP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDAC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD4 DUP3 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0xDDE DUP2 DUP6 PUSH2 0xD7D JUMP JUMPDEST SWAP4 POP PUSH2 0xDEE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xDF7 DUP2 PUSH2 0xDB8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1C DUP2 DUP5 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE54 DUP3 PUSH2 0xE29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE64 DUP2 PUSH2 0xE49 JUMP JUMPDEST DUP2 EQ PUSH2 0xE6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE81 DUP2 PUSH2 0xE5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE9A DUP2 PUSH2 0xE87 JUMP JUMPDEST DUP2 EQ PUSH2 0xEA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB7 DUP2 PUSH2 0xE91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED4 JUMPI PUSH2 0xED3 PUSH2 0xE24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE2 DUP6 DUP3 DUP7 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEF3 DUP6 DUP3 DUP7 ADD PUSH2 0xEA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF06 DUP2 PUSH2 0xE87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF21 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF40 JUMPI PUSH2 0xF3F PUSH2 0xE24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF4E DUP7 DUP3 DUP8 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF5F DUP7 DUP3 DUP8 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF70 DUP7 DUP3 DUP8 ADD PUSH2 0xEA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF90 DUP2 PUSH2 0xF7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC7 JUMPI PUSH2 0xFC6 PUSH2 0xE24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD5 DUP5 DUP3 DUP6 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFE7 DUP2 PUSH2 0xE49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1002 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x101F JUMPI PUSH2 0x101E PUSH2 0xE24 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x102D DUP6 DUP3 DUP7 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x103E DUP6 DUP3 DUP7 ADD PUSH2 0xE72 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x46726F6D20646F65736E2774206861766520656E6F7567682062616C616E6365 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107E PUSH1 0x20 DUP4 PUSH2 0xD7D JUMP JUMPDEST SWAP2 POP PUSH2 0x1089 DUP3 PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10AD DUP2 PUSH2 0x1071 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D73672E73656E64657220646F65736E2774206861766520656E6F7567682062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1110 PUSH1 0x26 DUP4 PUSH2 0xD7D JUMP JUMPDEST SWAP2 POP PUSH2 0x111B DUP3 PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x113F DUP2 PUSH2 0x1103 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11AF DUP3 PUSH2 0xE87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11BA DUP4 PUSH2 0xE87 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11D2 JUMPI PUSH2 0x11D1 PUSH2 0x1175 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E3 DUP3 PUSH2 0xE87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EE DUP4 PUSH2 0xE87 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1206 JUMPI PUSH2 0x1205 PUSH2 0x1175 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xF6 SWAP7 GAS AND SELFDESTRUCT PUSH7 0x53BB31FA00B15F 0xB2 0xD 0xAA 0xF7 PUSH23 0x4D1406E3A603C9B4FDFE2C1FE164736F6C634300081200 CALLER ",
							"sourceMap": "1261:4682:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1319:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1533:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5164:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5858:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4026:515;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1624:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2991:274;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2134:99;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:140;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3272:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1365:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1582:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2388:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5671:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1319:35;;;;;;;;;;;;:::o;1533:43::-;;;;;;;;;;;;;;;;;;;:::o;5164:188::-;5231:4;5275:6;5243:7;:19;5251:10;5243:19;;;;;;;;;;;;;;;:29;5263:8;5243:29;;;;;;;;;;;;;;;:38;;;;5313:8;5292:38;;5301:10;5292:38;;;5323:6;5292:38;;;;;;:::i;:::-;;;;;;;;5343:4;5336:11;;5164:188;;;;:::o;5858:83::-;5902:7;5924:12;;5917:19;;5858:83;:::o;4026:515::-;4108:4;4143:1;4128:17;;:3;:17;;;4120:26;;;;;;4170:8;:15;4179:5;4170:15;;;;;;;;;;;;;;;;4160:6;:25;;4152:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4333:27;4353:6;4333:8;:15;4342:5;4333:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;4315:8;:15;4324:5;4315:15;;;;;;;;;;;;;;;:45;;;;4382:25;4400:6;4382:8;:13;4391:3;4382:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;4366:8;:13;4375:3;4366:13;;;;;;;;;;;;;;;:41;;;;4507:3;4491:28;;4500:5;4491:28;;;4512:6;4491:28;;;;;;:::i;:::-;;;;;;;;4532:4;4525:11;;4026:515;;;;;:::o;1624:35::-;1657:2;1624:35;:::o;2991:274::-;3069:4;3405:5;;;;;;;;;;;3391:19;;:10;:19;;;3383:28;;;;;;3466:15:::1;::::0;::::1;;;;;;;;3465:16;3457:25;;;::::0;::::1;;3096::::2;3113:7;3096:12;;:16;;:25;;;;:::i;:::-;3081:12;:40;;;;3143:26;3161:7;3143:8;:13;3152:3;3143:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;3127:8;:13;3136:3;3127:13;;;;;;;;;;;;;;;:42;;;;3185:3;3180:18;;;3190:7;3180:18;;;;;;:::i;:::-;;;;;;;;3230:3;3209:34;;3226:1;3209:34;;;3235:7;3209:34;;;;;;:::i;:::-;;;;;;;;3256:4;3249:11;;2991:274:::0;;;;:::o;2134:99::-;2190:7;2212:8;:16;2221:6;2212:16;;;;;;;;;;;;;;;;2205:23;;2134:99;;;:::o;3610:140::-;3669:4;3405:5;;;;;;;;;;;3391:19;;:10;:19;;;3383:28;;;;;;3466:15:::1;::::0;::::1;;;;;;;;3465:16;3457:25;;;::::0;::::1;;3699:4:::2;3681:15;::::0;:22:::2;;;;;;;;;;;;;;;;;;3714:14;;;;;;;;;;3741:4;3734:11;;3610:140:::0;:::o;3272:74::-;3313:7;3336:5;;;;;;;;;;;3329:12;;3272:74;:::o;1365:33::-;;;;;;;;;;;;;:::o;1582:36::-;;;;;;;;;;;;;;;;;;;:::o;2388:359::-;2451:4;2486:1;2471:17;;:3;:17;;;2463:26;;;;;;2513:8;:19;2522:9;2513:19;;;;;;;;;;;;;;;;2503:6;:29;;2495:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2604:31;2628:6;2604:8;:19;2613:9;2604:19;;;;;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;2582:8;:19;2591:9;2582:19;;;;;;;;;;;;;;;:53;;;;2657:25;2675:6;2657:8;:13;2666:3;2657:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;2641:8;:13;2650:3;2641:13;;;;;;;;;;;;;;;:41;;;;2713:3;2693:32;;2702:9;2693:32;;;2718:6;2693:32;;;;;;:::i;:::-;;;;;;;;2738:4;2731:11;;2388:359;;;;:::o;5671:126::-;5745:7;5767;:15;5775:6;5767:15;;;;;;;;;;;;;;;:25;5783:8;5767:25;;;;;;;;;;;;;;;;5760:32;;5671:126;;;;:::o;962:110::-;1020:7;1047:1;1042;:6;;1035:14;;;;:::i;:::-;;1066:1;1062;:5;;;;:::i;:::-;1055:12;;962:110;;;;:::o;1134:123::-;1192:9;1217:1;1213;:5;;;;:::i;:::-;1209:9;;1236:1;1231;:6;;1224:14;;;;:::i;:::-;;1134:123;;;;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:99::-;486:6;520:5;514:12;504:22;;434:99;;;:::o;539:169::-;623:11;657:6;652:3;645:19;697:4;692:3;688:14;673:29;;539:169;;;;:::o;714:246::-;795:1;805:113;819:6;816:1;813:13;805:113;;;904:1;899:3;895:11;889:18;885:1;880:3;876:11;869:39;841:2;838:1;834:10;829:15;;805:113;;;952:1;943:6;938:3;934:16;927:27;776:184;714:246;;;:::o;966:102::-;1007:6;1058:2;1054:7;1049:2;1042:5;1038:14;1034:28;1024:38;;966:102;;;:::o;1074:377::-;1162:3;1190:39;1223:5;1190:39;:::i;:::-;1245:71;1309:6;1304:3;1245:71;:::i;:::-;1238:78;;1325:65;1383:6;1378:3;1371:4;1364:5;1360:16;1325:65;:::i;:::-;1415:29;1437:6;1415:29;:::i;:::-;1410:3;1406:39;1399:46;;1166:285;1074:377;;;;:::o;1457:313::-;1570:4;1608:2;1597:9;1593:18;1585:26;;1657:9;1651:4;1647:20;1643:1;1632:9;1628:17;1621:47;1685:78;1758:4;1749:6;1685:78;:::i;:::-;1677:86;;1457:313;;;;:::o;1857:117::-;1966:1;1963;1956:12;2103:126;2140:7;2180:42;2173:5;2169:54;2158:65;;2103:126;;;:::o;2235:96::-;2272:7;2301:24;2319:5;2301:24;:::i;:::-;2290:35;;2235:96;;;:::o;2337:122::-;2410:24;2428:5;2410:24;:::i;:::-;2403:5;2400:35;2390:63;;2449:1;2446;2439:12;2390:63;2337:122;:::o;2465:139::-;2511:5;2549:6;2536:20;2527:29;;2565:33;2592:5;2565:33;:::i;:::-;2465:139;;;;:::o;2610:77::-;2647:7;2676:5;2665:16;;2610:77;;;:::o;2693:122::-;2766:24;2784:5;2766:24;:::i;:::-;2759:5;2756:35;2746:63;;2805:1;2802;2795:12;2746:63;2693:122;:::o;2821:139::-;2867:5;2905:6;2892:20;2883:29;;2921:33;2948:5;2921:33;:::i;:::-;2821:139;;;;:::o;2966:474::-;3034:6;3042;3091:2;3079:9;3070:7;3066:23;3062:32;3059:119;;;3097:79;;:::i;:::-;3059:119;3217:1;3242:53;3287:7;3278:6;3267:9;3263:22;3242:53;:::i;:::-;3232:63;;3188:117;3344:2;3370:53;3415:7;3406:6;3395:9;3391:22;3370:53;:::i;:::-;3360:63;;3315:118;2966:474;;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:182::-;6160:34;6156:1;6148:6;6144:14;6137:58;6020:182;:::o;6208:366::-;6350:3;6371:67;6435:2;6430:3;6371:67;:::i;:::-;6364:74;;6447:93;6536:3;6447:93;:::i;:::-;6565:2;6560:3;6556:12;6549:19;;6208:366;;;:::o;6580:419::-;6746:4;6784:2;6773:9;6769:18;6761:26;;6833:9;6827:4;6823:20;6819:1;6808:9;6804:17;6797:47;6861:131;6987:4;6861:131;:::i;:::-;6853:139;;6580:419;;;:::o;7005:225::-;7145:34;7141:1;7133:6;7129:14;7122:58;7214:8;7209:2;7201:6;7197:15;7190:33;7005:225;:::o;7236:366::-;7378:3;7399:67;7463:2;7458:3;7399:67;:::i;:::-;7392:74;;7475:93;7564:3;7475:93;:::i;:::-;7593:2;7588:3;7584:12;7577:19;;7236:366;;;:::o;7608:419::-;7774:4;7812:2;7801:9;7797:18;7789:26;;7861:9;7855:4;7851:20;7847:1;7836:9;7832:17;7825:47;7889:131;8015:4;7889:131;:::i;:::-;7881:139;;7608:419;;;:::o;8033:180::-;8081:77;8078:1;8071:88;8178:4;8175:1;8168:15;8202:4;8199:1;8192:15;8219:180;8267:77;8264:1;8257:88;8364:4;8361:1;8354:15;8388:4;8385:1;8378:15;8405:194;8445:4;8465:20;8483:1;8465:20;:::i;:::-;8460:25;;8499:20;8517:1;8499:20;:::i;:::-;8494:25;;8543:1;8540;8536:9;8528:17;;8567:1;8561:4;8558:11;8555:37;;;8572:18;;:::i;:::-;8555:37;8405:194;;;;:::o;8605:191::-;8645:3;8664:20;8682:1;8664:20;:::i;:::-;8659:25;;8698:20;8716:1;8698:20;:::i;:::-;8693:25;;8741:1;8738;8734:9;8727:16;;8762:3;8759:1;8756:10;8753:36;;;8769:18;;:::i;:::-;8753:36;8605:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "934800",
								"executionCost": "49558",
								"totalCost": "984358"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2864",
								"decimals()": "402",
								"finishMinting()": "29805",
								"getOwner()": "2639",
								"mint(address,uint256)": "infinite",
								"mintingFinished()": "2492",
								"name()": "infinite",
								"owner()": "2586",
								"symbol()": "infinite",
								"totalSupply()": "2460",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1261,
									"end": 5943,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1354,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1319,
									"end": 1354,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1388,
									"end": 1398,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1398,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1261,
									"end": 5943,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048f6965a16ff6653bb31fa00b15fb20daaf7764d1406e3a603c9b4fdfe2c1fe164736f6c63430008120033",
									".code": [
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "7D64BCB4"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "5D2035B"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 5943,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1319,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1319,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1533,
											"end": 1576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1533,
											"end": 1576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5164,
											"end": 5352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5164,
											"end": 5352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5164,
											"end": 5352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5858,
											"end": 5941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5858,
											"end": 5941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4026,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4026,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4026,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1624,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1624,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2991,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2991,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2991,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2134,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2134,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2134,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3610,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3610,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3272,
											"end": 3346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3272,
											"end": 3346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1365,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1365,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1582,
											"end": 1618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1582,
											"end": 1618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2388,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2388,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2388,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5671,
											"end": 5797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5671,
											"end": 5797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5671,
											"end": 5797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1319,
											"end": 1354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "5472757374496E73757265000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5251,
											"end": 5261,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5262,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5271,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5281,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5311,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5292,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5330,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5343,
											"end": 5347,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5336,
											"end": 5347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5336,
											"end": 5347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5902,
											"end": 5909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5936,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5924,
											"end": 5936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5917,
											"end": 5936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5858,
											"end": 5941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4108,
											"end": 4112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4184,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4160,
											"end": 4166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4160,
											"end": 4185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4152,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4353,
											"end": 4359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4341,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4347,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4333,
											"end": 4352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4333,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4323,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4360,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4400,
											"end": 4406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4390,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4394,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4382,
											"end": 4399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4382,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4374,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4378,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4407,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4507,
											"end": 4510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4500,
											"end": 4505,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4512,
											"end": 4518,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4491,
											"end": 4519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4519,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4525,
											"end": 4536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4525,
											"end": 4536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4026,
											"end": 4541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1624,
											"end": 1659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3069,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3401,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3481,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3121,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3113,
											"end": 3120,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3108,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3096,
											"end": 3108,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3112,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3096,
											"end": 3112,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3121,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3121,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3121,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3096,
											"end": 3121,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3121,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3121,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3096,
											"end": 3121,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3081,
											"end": 3121,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3121,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3121,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3121,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3169,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3161,
											"end": 3168,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3151,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3155,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3160,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3143,
											"end": 3160,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3169,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3169,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3169,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3143,
											"end": 3169,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3169,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3169,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3143,
											"end": 3169,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3135,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3139,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3140,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3169,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3169,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3169,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3169,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3188,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885"
										},
										{
											"begin": 3190,
											"end": 3197,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3180,
											"end": 3198,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3233,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3227,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3235,
											"end": 3242,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3209,
											"end": 3243,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3243,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3249,
											"end": 3260,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3260,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2991,
											"end": 3265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3401,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3383,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3466,
											"end": 3481,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3481,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3457,
											"end": 3482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3703,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3681,
											"end": 3696,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3703,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "AE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08"
										},
										{
											"begin": 3714,
											"end": 3728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3728,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3728,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3728,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3728,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3728,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3728,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3728,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3741,
											"end": 3745,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3734,
											"end": 3745,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3745,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3313,
											"end": 3320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "PUSH",
											"source": 0,
											"value": "5449000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2474,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2488,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2463,
											"end": 2489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2489,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2463,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2521,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2531,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2532,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2495,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2495,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2604,
											"end": 2627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2635,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2604,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2600,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2675,
											"end": 2681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2669,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2657,
											"end": 2674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2649,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2653,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2682,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2716,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2718,
											"end": 2724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2693,
											"end": 2725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2731,
											"end": 2742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2731,
											"end": 2742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5745,
											"end": 5752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5774,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5775,
											"end": 5781,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5760,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5760,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5671,
											"end": 5797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1072,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 962,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1048,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1035,
											"end": 1049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1062,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1072,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1257,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1134,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1213,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1224,
											"end": 1238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1224,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1224,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1238,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1224,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1238,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1224,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 434,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 486,
											"end": 492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 504,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 504,
											"end": 526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 708,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 539,
											"end": 708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 623,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 652,
											"end": 655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 645,
											"end": 664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 697,
											"end": 701,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 688,
											"end": 702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 673,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 708,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 539,
											"end": 708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 960,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 714,
											"end": 960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 795,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 805,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 819,
											"end": 825,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 816,
											"end": 817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 813,
											"end": 826,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 805,
											"end": 918,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 805,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 805,
											"end": 918,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 904,
											"end": 905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 895,
											"end": 906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 889,
											"end": 907,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 880,
											"end": 883,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 876,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 869,
											"end": 908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 834,
											"end": 844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 829,
											"end": 844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 805,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 805,
											"end": 918,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 805,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 805,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 934,
											"end": 950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 927,
											"end": 954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 966,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1054,
											"end": 1061,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1042,
											"end": 1047,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1062,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1451,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1074,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1223,
											"end": 1228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1190,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1190,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1245,
											"end": 1316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1316,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1245,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1316,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1381,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1375,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1325,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1390,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1325,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1415,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1444,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1415,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1413,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1451,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1770,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1457,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1610,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1651,
											"end": 1655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1641,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1758,
											"end": 1762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1755,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1685,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1763,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1685,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1770,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1857,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1968,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2229,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2103,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2223,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2331,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2235,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2319,
											"end": 2324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2301,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2325,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2301,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2459,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2337,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2428,
											"end": 2433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2410,
											"end": 2434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2434,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2410,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2435,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2390,
											"end": 2453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2451,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2390,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2465,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2556,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2592,
											"end": 2597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2565,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2598,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2565,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2687,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2610,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2815,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2693,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2784,
											"end": 2789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2766,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2790,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2766,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2791,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2746,
											"end": 2809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2807,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2809,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2746,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2960,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2821,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2912,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2921,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2954,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2921,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2960,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2966,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3077,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3094,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3178,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3059,
											"end": 3178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3097,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3097,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3176,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3097,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3178,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3059,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3217,
											"end": 3218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3287,
											"end": 3294,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3276,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3242,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3295,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3242,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3295,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3415,
											"end": 3422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3391,
											"end": 3413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3370,
											"end": 3423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3423,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3370,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5275,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5456,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6202,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6020,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6160,
											"end": 6194,
											"name": "PUSH",
											"source": 1,
											"value": "46726F6D20646F65736E2774206861766520656E6F7567682062616C616E6365"
										},
										{
											"begin": 6156,
											"end": 6157,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6144,
											"end": 6158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6574,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6208,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6371,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 6435,
											"end": 6437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6430,
											"end": 6433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6371,
											"end": 6438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6438,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 6371,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 6536,
											"end": 6539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6447,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 6447,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6565,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6563,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6549,
											"end": 6568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6549,
											"end": 6568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6999,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6580,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6746,
											"end": 6750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6773,
											"end": 6782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 6842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 6843,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6804,
											"end": 6821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6987,
											"end": 6991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6861,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6992,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6861,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7230,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7005,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "6D73672E73656E64657220646F65736E2774206861766520656E6F7567682062"
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7133,
											"end": 7139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7129,
											"end": 7143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7222,
											"name": "PUSH",
											"source": 1,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7209,
											"end": 7211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7190,
											"end": 7223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7005,
											"end": 7230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7602,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7236,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7463,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7458,
											"end": 7461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7399,
											"end": 7466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7392,
											"end": 7466,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7392,
											"end": 7466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7475,
											"end": 7568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7568,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7475,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7588,
											"end": 7591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7584,
											"end": 7596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7602,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 8027,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7608,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7801,
											"end": 7810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7789,
											"end": 7815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7789,
											"end": 7815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 7870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7847,
											"end": 7848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7832,
											"end": 7849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7825,
											"end": 7872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7889,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 8015,
											"end": 8019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7889,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7889,
											"end": 8020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7889,
											"end": 8020,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7889,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 8020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 8020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 8027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 8027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 8027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 8027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8033,
											"end": 8213,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 8033,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8158,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8078,
											"end": 8079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8071,
											"end": 8159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8182,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8175,
											"end": 8176,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8168,
											"end": 8183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8206,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8199,
											"end": 8200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8207,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8399,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8219,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8344,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8264,
											"end": 8265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8364,
											"end": 8368,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8392,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8385,
											"end": 8386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8378,
											"end": 8393,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8599,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8405,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 8483,
											"end": 8484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8465,
											"end": 8485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 8465,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8499,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 8517,
											"end": 8518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8499,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8499,
											"end": 8519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8499,
											"end": 8519,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 8499,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8494,
											"end": 8519,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8494,
											"end": 8519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8543,
											"end": 8544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8536,
											"end": 8545,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8528,
											"end": 8545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8528,
											"end": 8545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8567,
											"end": 8568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8569,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8592,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 8555,
											"end": 8592,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8572,
											"end": 8590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8592,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 8555,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8599,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 8682,
											"end": 8683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8664,
											"end": 8684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8684,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 8664,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8716,
											"end": 8717,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8698,
											"end": 8718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8718,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8698,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 8718,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 8718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 8742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 8743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8727,
											"end": 8743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8727,
											"end": 8743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8762,
											"end": 8765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8766,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 8753,
											"end": 8789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8769,
											"end": 8787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8789,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 8753,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"finishMinting()": "7d64bcb4",
							"getOwner()": "893d20e8",
							"mint(address,uint256)": "40c10f19",
							"mintingFinished()": "05d2035b",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"returns\":{\"_0\":\"A uint256 specifying the amount of tokens still available for the spender.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"returns\":{\"_0\":\"An uint256 representing the amount owned by the passed address.\"}},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens.\",\"returns\":{\"_0\":\"True if the operation was successful.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint.\",\"_to\":\"The address that will receive the minted tokens.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"totalSupply()\":{\"details\":\"total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xd21811786d234e0ba0624a740ae502e1c0f25887cf73556309f79b82b359025f\",\"urls\":[\"bzz-raw://b661a37122468a631f772597d585177e0610d746baea69278cf355f1b7c84617\",\"dweb:/ipfs/QmW7fqRN8MnxzenrKi6jLSY8sqbLepzMk48akuhL8ymJXM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 104,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "mintingFinished",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 108,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "owner",
								"offset": 1,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 114,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 118,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 129,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "totalSupply_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that throw on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":243:1259  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":243:1259  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cf5581176ae1df54c855979d2464580b564f93556390db092453c6011e933bcc64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf5581176ae1df54c855979d2464580b564f93556390db092453c6011e933bcc64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF SSTORE DUP2 OR PUSH11 0xE1DF54C855979D2464580B JUMP 0x4F SWAP4 SSTORE PUSH4 0x90DB0924 MSTORE8 0xC6 ADD 0x1E SWAP4 EXTCODESIZE 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "243:1016:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf5581176ae1df54c855979d2464580b564f93556390db092453c6011e933bcc64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF SSTORE DUP2 OR PUSH11 0xE1DF54C855979D2464580B JUMP 0x4F SWAP4 SSTORE PUSH4 0x90DB0924 MSTORE8 0xC6 ADD 0x1E SWAP4 EXTCODESIZE 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "243:1016:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 243,
									"end": 1259,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cf5581176ae1df54c855979d2464580b564f93556390db092453c6011e933bcc64736f6c63430008120033",
									".code": [
										{
											"begin": 243,
											"end": 1259,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 243,
											"end": 1259,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 243,
											"end": 1259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 243,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 1259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 243,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 243,
											"end": 1259,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xd21811786d234e0ba0624a740ae502e1c0f25887cf73556309f79b82b359025f\",\"urls\":[\"bzz-raw://b661a37122468a631f772597d585177e0610d746baea69278cf355f1b7c84617\",\"dweb:/ipfs/QmW7fqRN8MnxzenrKi6jLSY8sqbLepzMk48akuhL8ymJXM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ERC20.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ERC20.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							443
						],
						"SafeMath": [
							98
						]
					},
					"id": 444,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "153:89:0",
								"text": " @title SafeMath\n @dev Math operations with safety checks that throw on error"
							},
							"fullyImplemented": true,
							"id": 98,
							"linearizedBaseContracts": [
								98
							],
							"name": "SafeMath",
							"nameLocation": "251:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "398:98:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 12,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "408:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "413:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "408:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 18,
												"nodeType": "IfStatement",
												"src": "404:35:0",
												"trueBody": {
													"id": 17,
													"nodeType": "Block",
													"src": "416:23:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "431:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 11,
															"id": 16,
															"nodeType": "Return",
															"src": "424:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 19,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "444:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 20,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "448:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 21,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "452:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "448:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "444:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "444:9:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 26,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "466:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 27,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "470:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "466:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 29,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "475:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "466:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 25,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "459:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "459:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "459:18:0"
											},
											{
												"expression": {
													"id": 33,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "490:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 34,
												"nodeType": "Return",
												"src": "483:8:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "265:61:0",
										"text": " @dev Multiplies two numbers, throws on overflow."
									},
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "338:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "350:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "342:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "361:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "353:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "395:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "387:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:11:0"
									},
									"scope": 98,
									"src": "329:167:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "645:205:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 46,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "840:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 47,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "844:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "840:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 45,
												"id": 49,
												"nodeType": "Return",
												"src": "833:12:0"
											}
										]
									},
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "500:75:0",
										"text": " @dev Integer division of two numbers, truncating the quotient."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "587:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "610:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "602:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "636:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:9:0"
									},
									"scope": 98,
									"src": "578:272:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1029:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 62,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "1042:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 63,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "1047:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1042:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1035:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1035:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1035:14:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 67,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1062:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 68,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1066:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1062:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 70,
												"nodeType": "Return",
												"src": "1055:12:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "854:105:0",
										"text": " @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend)."
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "971:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "983:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "975:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "974:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1020:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:9:0"
									},
									"scope": 98,
									"src": "962:110:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "1203:54:0",
										"statements": [
											{
												"expression": {
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 82,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1209:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 83,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "1213:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 84,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1217:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1213:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1209:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1209:9:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1231:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 90,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "1236:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1231:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 88,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1224:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1224:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1224:14:0"
											},
											{
												"expression": {
													"id": 94,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "1251:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 95,
												"nodeType": "Return",
												"src": "1244:8:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1076:55:0",
										"text": " @dev Adds two numbers, throws on overflow."
									},
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1143:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1155:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1147:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1166:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1158:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "1200:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1192:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1191:11:0"
									},
									"scope": 98,
									"src": "1134:123:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 444,
							"src": "243:1016:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 443,
							"linearizedBaseContracts": [
								443
							],
							"name": "ERC20",
							"nameLocation": "1270:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 101,
									"libraryName": {
										"id": 99,
										"name": "SafeMath",
										"nameLocations": [
											"1288:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 98,
										"src": "1288:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1282:27:0",
									"typeName": {
										"id": 100,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1301:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "05d2035b",
									"id": 104,
									"mutability": "mutable",
									"name": "mintingFinished",
									"nameLocation": "1331:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1319:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 102,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1319:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 103,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1349:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 108,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "1380:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1365:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"expression": {
											"id": 106,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "1388:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 107,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "1392:6:0",
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"src": "1388:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 114,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "1468:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1409:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 113,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 109,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1418:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1409:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 112,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 110,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1438:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1429:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1449:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 118,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "1509:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1481:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 117,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 115,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1489:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1481:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 116,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1500:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 121,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "1556:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1533:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 119,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1533:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5472757374496e73757265",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1563:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_389c7b826f10ea0c17f8a929e8c436589513a50969c07de8fc7edd1e41109fba",
											"typeString": "literal_string \"TrustInsure\""
										},
										"value": "TrustInsure"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 124,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "1605:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1582:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 122,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1582:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5449",
										"id": 123,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1614:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d9aa9c46eb66917f09042cd7818e9d81bceb9282bbabb16feb2818b042e9690d",
											"typeString": "literal_string \"TI\""
										},
										"value": "TI"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 127,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "1646:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1624:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 125,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1624:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1657:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 129,
									"mutability": "mutable",
									"name": "totalSupply_",
									"nameLocation": "1673:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "1665:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1665:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 137,
									"name": "Transfer",
									"nameLocation": "1700:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1725:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1709:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1747:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1731:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1759:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1751:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:57:0"
									},
									"src": "1694:72:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 145,
									"name": "Approval",
									"nameLocation": "1777:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1802:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1786:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1825:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1809:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1842:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1834:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1785:63:0"
									},
									"src": "1771:78:0"
								},
								{
									"anonymous": false,
									"eventSelector": "0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885",
									"id": 151,
									"name": "Mint",
									"nameLocation": "1860:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1881:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1865:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1893:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1885:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1864:36:0"
									},
									"src": "1854:47:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa08",
									"id": 153,
									"name": "MintFinished",
									"nameLocation": "1912:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1924:2:0"
									},
									"src": "1906:21:0"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "2199:34:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 161,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2212:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 163,
													"indexExpression": {
														"id": 162,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2221:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2212:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 160,
												"id": 164,
												"nodeType": "Return",
												"src": "2205:23:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1936:195:0",
										"text": " @dev Gets the balance of the specified address.\n @param _owner The address to query the the balance of.\n @return An uint256 representing the amount owned by the passed address."
									},
									"functionSelector": "70a08231",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2143:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2161:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2153:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:16:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2190:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:9:0"
									},
									"scope": 443,
									"src": "2134:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "2457:290:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 177,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "2471:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2486:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2478:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 178,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2478:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2478:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2471:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2463:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2463:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "2463:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 186,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "2503:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 187,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2513:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 190,
																"indexExpression": {
																	"expression": {
																		"id": 188,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967270,
																		"src": "2522:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2525:6:0",
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"src": "2522:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2513:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2503:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d73672e73656e64657220646f65736e2774206861766520656e6f7567682062616c616e6365",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0",
																"typeString": "literal_string \"msg.sender doesn't have enough balance\""
															},
															"value": "msg.sender doesn't have enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0",
																"typeString": "literal_string \"msg.sender doesn't have enough balance\""
															}
														],
														"id": 185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2495:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2495:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "2495:80:0"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 195,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "2582:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 198,
														"indexExpression": {
															"expression": {
																"id": 196,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "2591:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2594:6:0",
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "2591:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2582:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 204,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "2628:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 199,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2604:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 202,
																"indexExpression": {
																	"expression": {
																		"id": 200,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967270,
																		"src": "2613:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2616:6:0",
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"src": "2613:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2604:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2624:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "2604:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2604:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2582:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2582:53:0"
											},
											{
												"expression": {
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 208,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "2641:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 210,
														"indexExpression": {
															"id": 209,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "2650:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2641:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 215,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "2675:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 211,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2657:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 213,
																"indexExpression": {
																	"id": 212,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "2666:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2657:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2671:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 97,
															"src": "2657:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2657:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2641:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2641:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 220,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "2702:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2705:6:0",
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "2702:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "2713:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 223,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 219,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2693:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2693:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "EmitStatement",
												"src": "2688:37:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2738:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 175,
												"id": 227,
												"nodeType": "Return",
												"src": "2731:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "2238:147:0",
										"text": " @dev transfer token for a specified address\n @param _to The address to transfer to.\n @param _value The amount to be transferred."
									},
									"functionSelector": "a9059cbb",
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2397:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2414:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2406:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "2427:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2419:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2405:29:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2451:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2451:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2450:6:0"
									},
									"scope": 443,
									"src": "2388:359:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3075:190:0",
										"statements": [
											{
												"expression": {
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 243,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3081:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 246,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "3113:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 244,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "3096:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3109:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 97,
															"src": "3096:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3096:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3081:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "3081:40:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 250,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3127:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 252,
														"indexExpression": {
															"id": 251,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "3136:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3127:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 257,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "3161:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 253,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3143:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 255,
																"indexExpression": {
																	"id": 254,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "3152:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3143:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3157:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 97,
															"src": "3143:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3143:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3127:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "3127:42:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "3185:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "3190:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "3180:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3180:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "EmitStatement",
												"src": "3175:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3226:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3218:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 267,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3218:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3218:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 271,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "3230:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "3235:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 266,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "3209:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3209:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "EmitStatement",
												"src": "3204:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 242,
												"id": 276,
												"nodeType": "Return",
												"src": "3249:11:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2759:229:0",
										"text": " @dev Function to mint tokens\n @param _to The address that will receive the minted tokens.\n @param _amount The amount of tokens to mint.\n @return A boolean that indicates if the operation was successful."
									},
									"functionSelector": "40c10f19",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 237,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 236,
												"name": "onlyOwner",
												"nameLocations": [
													"3035:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 297,
												"src": "3035:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3035:9:0"
										},
										{
											"id": 239,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 238,
												"name": "canMint",
												"nameLocations": [
													"3045:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 306,
												"src": "3045:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3045:7:0"
										}
									],
									"name": "mint",
									"nameLocation": "3000:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3013:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3005:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3026:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3018:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3004:30:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3069:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:6:0"
									},
									"scope": 443,
									"src": "2991:274:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3321:25:0",
										"statements": [
											{
												"expression": {
													"id": 283,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 108,
													"src": "3336:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 282,
												"id": 284,
												"nodeType": "Return",
												"src": "3329:12:0"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "3281:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:2:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3313:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:9:0"
									},
									"scope": 443,
									"src": "3272:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "3377:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 289,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3391:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3395:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3391:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 291,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "3405:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3391:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3383:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "3383:28:0"
											},
											{
												"id": 295,
												"nodeType": "PlaceholderStatement",
												"src": "3417:1:0"
											}
										]
									},
									"id": 297,
									"name": "onlyOwner",
									"nameLocation": "3365:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3374:2:0"
									},
									"src": "3356:67:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "3451:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3465:16:0",
															"subExpression": {
																"id": 300,
																"name": "mintingFinished",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "3466:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3457:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3457:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "3457:25:0"
											},
											{
												"id": 304,
												"nodeType": "PlaceholderStatement",
												"src": "3488:1:0"
											}
										]
									},
									"id": 306,
									"name": "canMint",
									"nameLocation": "3441:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3448:2:0"
									},
									"src": "3432:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "3675:75:0",
										"statements": [
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "mintingFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "3681:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3699:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3681:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "3681:22:0"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 320,
														"name": "MintFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "3714:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3714:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "EmitStatement",
												"src": "3709:19:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 315,
												"id": 324,
												"nodeType": "Return",
												"src": "3734:11:0"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "3500:107:0",
										"text": " @dev Function to stop minting new tokens.\n @return True if the operation was successful."
									},
									"functionSelector": "7d64bcb4",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 310,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 309,
												"name": "onlyOwner",
												"nameLocations": [
													"3635:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 297,
												"src": "3635:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3635:9:0"
										},
										{
											"id": 312,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 311,
												"name": "canMint",
												"nameLocations": [
													"3645:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 306,
												"src": "3645:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3645:7:0"
										}
									],
									"name": "finishMinting",
									"nameLocation": "3619:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3632:2:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3669:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3669:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3668:6:0"
									},
									"scope": 443,
									"src": "3610:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "4114:427:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 339,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "4128:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4143:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4135:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 340,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4135:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4135:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4128:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4120:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4120:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "4120:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 348,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4160:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 349,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4170:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 351,
																"indexExpression": {
																	"id": 350,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4179:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4170:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4160:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46726f6d20646f65736e2774206861766520656e6f7567682062616c616e6365",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4187:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d",
																"typeString": "literal_string \"From doesn't have enough balance\""
															},
															"value": "From doesn't have enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d",
																"typeString": "literal_string \"From doesn't have enough balance\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4152:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4152:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "4152:70:0"
											},
											{
												"expression": {
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 356,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "4315:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 358,
														"indexExpression": {
															"id": 357,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "4324:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4315:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 363,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4353:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 359,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4333:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 361,
																"indexExpression": {
																	"id": 360,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4342:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4333:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4349:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "4333:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4333:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4315:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "4315:45:0"
											},
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 367,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "4366:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 369,
														"indexExpression": {
															"id": 368,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4375:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4366:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 374,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4400:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 370,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4382:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 372,
																"indexExpression": {
																	"id": 371,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4391:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4382:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4396:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 97,
															"src": "4382:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4382:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4366:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "4366:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 379,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "4500:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4507:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "4512:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 378,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "4491:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4491:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "EmitStatement",
												"src": "4486:33:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4532:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 337,
												"id": 385,
												"nodeType": "Return",
												"src": "4525:11:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3755:268:0",
										"text": " @dev Transfer tokens from one address to another\n @param _from address The address which you want to send tokens from\n @param _to address The address which you want to transfer to\n @param _value uint256 the amount of tokens to be transferred"
									},
									"functionSelector": "23b872dd",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4035:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4056:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4048:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4071:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4063:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "4084:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4076:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4047:44:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4108:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4108:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4107:6:0"
									},
									"scope": 443,
									"src": "4026:515:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "5237:115:0",
										"statements": [
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 397,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5243:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 401,
															"indexExpression": {
																"expression": {
																	"id": 398,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5251:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5255:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5251:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5243:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 400,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5243:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 403,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "5275:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5243:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "5243:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 407,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5301:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5305:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5301:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5313:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "5323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 406,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "5292:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5292:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "EmitStatement",
												"src": "5287:43:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5343:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 396,
												"id": 414,
												"nodeType": "Return",
												"src": "5336:11:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "4545:616:0",
										"text": " @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n Beware that changing an allowance with this method brings the risk that someone may use both the old\n and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @param _spender The address which will spend the funds.\n @param _value The amount of tokens to be spent."
									},
									"functionSelector": "095ea7b3",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5173:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "5189:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "5181:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "5207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "5199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5180:34:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "5231:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:6:0"
									},
									"scope": 443,
									"src": "5164:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "5754:43:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 426,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "5767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 428,
														"indexExpression": {
															"id": 427,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5775:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5767:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 430,
													"indexExpression": {
														"id": 429,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "5783:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5767:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 425,
												"id": 431,
												"nodeType": "Return",
												"src": "5760:32:0"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "5356:312:0",
										"text": " @dev Function to check the amount of tokens that an owner allowed to a spender.\n @param _owner address The address which owns the funds.\n @param _spender address The address which will spend the funds.\n @return A uint256 specifying the amount of tokens still available for the spender."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5680:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5698:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "5690:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "5714:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "5706:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5689:34:0"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "5745:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5744:9:0"
									},
									"scope": 443,
									"src": "5671:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "5911:30:0",
										"statements": [
											{
												"expression": {
													"id": 439,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "5924:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 438,
												"id": 440,
												"nodeType": "Return",
												"src": "5917:19:0"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "5802:53:0",
										"text": " @dev total number of tokens in existence"
									},
									"functionSelector": "18160ddd",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5867:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5878:2:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "5902:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5901:9:0"
									},
									"scope": 443,
									"src": "5858:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 444,
							"src": "1261:4682:0",
							"usedErrors": []
						}
					],
					"src": "0:5943:0"
				},
				"id": 0
			}
		}
	}
}