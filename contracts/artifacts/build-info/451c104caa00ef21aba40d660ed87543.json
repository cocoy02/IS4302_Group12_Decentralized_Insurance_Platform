{
	"id": "451c104caa00ef21aba40d660ed87543",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\n//first need to approve the address of spender \n// Check the allowance\n//Finally able to call transferFrom to transfer tokens\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    if (a == 0) {\n      return 0;\n    }\n    c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    // uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return a / b;\n  }\n\n  /**\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\n    c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\ncontract ERC20 {\n    using SafeMath for uint256;\n    \n    bool public mintingFinished = false;\n    \n    address public owner = msg.sender;\n    \n    mapping (address => mapping (address => uint256)) internal allowed;\n    mapping(address => uint256) balances;\n    \n    \n    string public constant name = \"DiceToken\";\n    string public constant symbol = \"DT\";\n    uint8 public constant decimals = 18;\n    uint256 totalSupply_;\n  \n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Mint(address indexed to, uint256 amount);\n    event MintFinished();\n\n  \n    /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[tx.origin], \"msg.sender doesn't have enough balance\");\n\n    balances[tx.origin] = balances[tx.origin].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(tx.origin, _to, _value);\n    return true;\n  }\n\n  \n  \n    /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\n    totalSupply_ = totalSupply_.add(_amount);\n    balances[_to] = balances[_to].add(_amount);\n    emit Mint(_to, _amount);\n    emit Transfer(address(0), _to, _amount);\n    return true;\n  }\n\n  \n  function getOwner() public view returns (address){\n      return owner;\n  }\n  \n  \n   modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n  \n  \n  modifier canMint() {\n    require(!mintingFinished);\n    _;\n  }\n\n\n\n  /**\n   * @dev Function to stop minting new tokens.\n   * @return True if the operation was successful.\n   */\n  function finishMinting() onlyOwner canMint public returns (bool) {\n    mintingFinished = true;\n    emit MintFinished();\n    return true;\n  }\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from], \"From doesn't have enough balance\");\n    require(_value <= allowed[_from][tx.origin], \"Not allowed to spend this much\");\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][tx.origin] = allowed[_from][tx.origin].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "MintFinished",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "finishMinting",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "mintingFinished",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens that an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"return": "A uint256 specifying the amount of tokens still available for the spender."
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint256 representing the amount owned by the passed address."
							},
							"finishMinting()": {
								"details": "Function to stop minting new tokens.",
								"return": "True if the operation was successful."
							},
							"mint(address,uint256)": {
								"details": "Function to mint tokens",
								"params": {
									"_amount": "The amount of tokens to mint.",
									"_to": "The address that will receive the minted tokens."
								},
								"return": "A boolean that indicates if the operation was successful."
							},
							"totalSupply()": {
								"details": "total number of tokens in existence"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint256 the amount of tokens to be transferred"
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":1260:5936  contract ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20.sol\":1348:1353  false */\n  0x00\n    /* \"contracts/ERC20.sol\":1318:1353  bool public mintingFinished = false */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20.sol\":1387:1397  msg.sender */\n  caller\n    /* \"contracts/ERC20.sol\":1364:1397  address public owner = msg.sender */\n  0x00\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20.sol\":1260:5936  contract ERC20 {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/ERC20.sol\":1260:5936  contract ERC20 {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":1260:5936  contract ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/ERC20.sol\":1260:5936  contract ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7d64bcb4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x18160ddd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x05d2035b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20.sol\":1318:1353  bool public mintingFinished = false */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1532:1573  string public constant name = \"DiceToken\" */\n    tag_4:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_24:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_24)\n    tag_26:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC20.sol\":1532:1573  string public constant name = \"DiceToken\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":5157:5345  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"contracts/ERC20.sol\":5157:5345  function approve(address _spender, uint256 _value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":5851:5934  function totalSupply() public view returns (uint256) {... */\n    tag_6:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":4023:4534  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n    tag_7:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"contracts/ERC20.sol\":4023:4534  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1621:1656  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2988:3262  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {... */\n    tag_9:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"contracts/ERC20.sol\":2988:3262  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2131:2230  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_10:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/ERC20.sol\":2131:2230  function balanceOf(address _owner) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3607:3747  function finishMinting() onlyOwner canMint public returns (bool) {... */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":3269:3343  function getOwner() public view returns (address){... */\n    tag_12:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1364:1397  address public owner = msg.sender */\n    tag_13:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1579:1615  string public constant symbol = \"DT\" */\n    tag_14:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_52:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_52)\n    tag_54:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/ERC20.sol\":1579:1615  string public constant symbol = \"DT\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_55:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":2385:2744  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_15:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"contracts/ERC20.sol\":2385:2744  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":5664:5790  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n    tag_16:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n        /* \"contracts/ERC20.sol\":5664:5790  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":1318:1353  bool public mintingFinished = false */\n    tag_21:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1532:1573  string public constant name = \"DiceToken\" */\n    tag_23:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      0x44696365546f6b656e0000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5157:5345  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_30:\n        /* \"contracts/ERC20.sol\":5224:5228  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":5268:5274  _value */\n      dup2\n        /* \"contracts/ERC20.sol\":5236:5243  allowed */\n      0x01\n        /* \"contracts/ERC20.sol\":5236:5255  allowed[msg.sender] */\n      0x00\n        /* \"contracts/ERC20.sol\":5244:5254  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":5236:5255  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":5236:5265  allowed[msg.sender][_spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":5256:5264  _spender */\n      dup6\n        /* \"contracts/ERC20.sol\":5236:5265  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":5236:5274  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":5306:5314  _spender */\n      dup3\n        /* \"contracts/ERC20.sol\":5285:5323  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":5294:5304  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":5285:5323  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20.sol\":5316:5322  _value */\n      dup5\n        /* \"contracts/ERC20.sol\":5285:5323  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":5336:5340  true */\n      0x01\n        /* \"contracts/ERC20.sol\":5329:5340  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5157:5345  function approve(address _spender, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5851:5934  function totalSupply() public view returns (uint256) {... */\n    tag_32:\n        /* \"contracts/ERC20.sol\":5895:5902  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":5917:5929  totalSupply_ */\n      sload(0x03)\n        /* \"contracts/ERC20.sol\":5910:5929  return totalSupply_ */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5851:5934  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":4023:4534  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n    tag_35:\n        /* \"contracts/ERC20.sol\":4105:4109  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":4140:4141  0 */\n      dup1\n        /* \"contracts/ERC20.sol\":4125:4142  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":4125:4128  _to */\n      dup4\n        /* \"contracts/ERC20.sol\":4125:4142  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC20.sol\":4117:4143  require(_to != address(0)) */\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n        /* \"contracts/ERC20.sol\":4167:4175  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":4167:4182  balances[_from] */\n      0x00\n        /* \"contracts/ERC20.sol\":4176:4181  _from */\n      dup6\n        /* \"contracts/ERC20.sol\":4167:4182  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4157:4163  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":4157:4182  _value <= balances[_from] */\n      gt\n      iszero\n        /* \"contracts/ERC20.sol\":4149:4219  require(_value <= balances[_from], \"From doesn't have enough balance\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x46726f6d20646f65736e2774206861766520656e6f7567682062616c616e6365\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/ERC20.sol\":4243:4250  allowed */\n      0x01\n        /* \"contracts/ERC20.sol\":4243:4257  allowed[_from] */\n      0x00\n        /* \"contracts/ERC20.sol\":4251:4256  _from */\n      dup6\n        /* \"contracts/ERC20.sol\":4243:4257  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4243:4268  allowed[_from][tx.origin] */\n      0x00\n        /* \"contracts/ERC20.sol\":4258:4267  tx.origin */\n      origin\n        /* \"contracts/ERC20.sol\":4243:4268  allowed[_from][tx.origin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4233:4239  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":4233:4268  _value <= allowed[_from][tx.origin] */\n      gt\n      iszero\n        /* \"contracts/ERC20.sol\":4225:4303  require(_value <= allowed[_from][tx.origin], \"Not allowed to spend this much\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7420616c6c6f77656420746f207370656e642074686973206d7563680000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"contracts/ERC20.sol\":4328:4355  balances[_from].sub(_value) */\n      tag_68\n        /* \"contracts/ERC20.sol\":4348:4354  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":4328:4336  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":4328:4343  balances[_from] */\n      0x00\n        /* \"contracts/ERC20.sol\":4337:4342  _from */\n      dup8\n        /* \"contracts/ERC20.sol\":4328:4343  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4328:4347  balances[_from].sub */\n      tag_69\n      swap1\n        /* \"contracts/ERC20.sol\":4328:4355  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"contracts/ERC20.sol\":4310:4318  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":4310:4325  balances[_from] */\n      0x00\n        /* \"contracts/ERC20.sol\":4319:4324  _from */\n      dup7\n        /* \"contracts/ERC20.sol\":4310:4325  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4310:4355  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":4377:4402  balances[_to].add(_value) */\n      tag_70\n        /* \"contracts/ERC20.sol\":4395:4401  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":4377:4385  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":4377:4390  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":4386:4389  _to */\n      dup7\n        /* \"contracts/ERC20.sol\":4377:4390  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4377:4394  balances[_to].add */\n      tag_71\n      swap1\n        /* \"contracts/ERC20.sol\":4377:4402  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"contracts/ERC20.sol\":4361:4369  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":4361:4374  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":4370:4373  _to */\n      dup6\n        /* \"contracts/ERC20.sol\":4361:4374  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4361:4402  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":4436:4473  allowed[_from][tx.origin].sub(_value) */\n      tag_72\n        /* \"contracts/ERC20.sol\":4466:4472  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":4436:4443  allowed */\n      0x01\n        /* \"contracts/ERC20.sol\":4436:4450  allowed[_from] */\n      0x00\n        /* \"contracts/ERC20.sol\":4444:4449  _from */\n      dup8\n        /* \"contracts/ERC20.sol\":4436:4450  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4436:4461  allowed[_from][tx.origin] */\n      0x00\n        /* \"contracts/ERC20.sol\":4451:4460  tx.origin */\n      origin\n        /* \"contracts/ERC20.sol\":4436:4461  allowed[_from][tx.origin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":4436:4465  allowed[_from][tx.origin].sub */\n      tag_69\n      swap1\n        /* \"contracts/ERC20.sol\":4436:4473  allowed[_from][tx.origin].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"contracts/ERC20.sol\":4408:4415  allowed */\n      0x01\n        /* \"contracts/ERC20.sol\":4408:4422  allowed[_from] */\n      0x00\n        /* \"contracts/ERC20.sol\":4416:4421  _from */\n      dup7\n        /* \"contracts/ERC20.sol\":4408:4422  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4408:4433  allowed[_from][tx.origin] */\n      0x00\n        /* \"contracts/ERC20.sol\":4423:4432  tx.origin */\n      origin\n        /* \"contracts/ERC20.sol\":4408:4433  allowed[_from][tx.origin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":4408:4473  allowed[_from][tx.origin] = allowed[_from][tx.origin].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":4500:4503  _to */\n      dup3\n        /* \"contracts/ERC20.sol\":4484:4512  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":4493:4498  _from */\n      dup5\n        /* \"contracts/ERC20.sol\":4484:4512  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":4505:4511  _value */\n      dup5\n        /* \"contracts/ERC20.sol\":4484:4512  Transfer(_from, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":4525:4529  true */\n      0x01\n        /* \"contracts/ERC20.sol\":4518:4529  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":4023:4534  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1621:1656  uint8 public constant decimals = 18 */\n    tag_37:\n        /* \"contracts/ERC20.sol\":1654:1656  18 */\n      0x12\n        /* \"contracts/ERC20.sol\":1621:1656  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2988:3262  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {... */\n    tag_40:\n        /* \"contracts/ERC20.sol\":3066:3070  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3402:3407  owner */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3388:3407  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3388:3398  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":3388:3407  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20.sol\":3380:3408  require(msg.sender == owner) */\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n        /* \"contracts/ERC20.sol\":3463:3478  mintingFinished */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":3462:3478  !mintingFinished */\n      iszero\n        /* \"contracts/ERC20.sol\":3454:3479  require(!mintingFinished) */\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n        /* \"contracts/ERC20.sol\":3093:3118  totalSupply_.add(_amount) */\n      tag_78\n        /* \"contracts/ERC20.sol\":3110:3117  _amount */\n      dup3\n        /* \"contracts/ERC20.sol\":3093:3105  totalSupply_ */\n      sload(0x03)\n        /* \"contracts/ERC20.sol\":3093:3109  totalSupply_.add */\n      tag_71\n      swap1\n        /* \"contracts/ERC20.sol\":3093:3118  totalSupply_.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"contracts/ERC20.sol\":3078:3090  totalSupply_ */\n      0x03\n        /* \"contracts/ERC20.sol\":3078:3118  totalSupply_ = totalSupply_.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":3140:3166  balances[_to].add(_amount) */\n      tag_79\n        /* \"contracts/ERC20.sol\":3158:3165  _amount */\n      dup3\n        /* \"contracts/ERC20.sol\":3140:3148  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":3140:3153  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":3149:3152  _to */\n      dup7\n        /* \"contracts/ERC20.sol\":3140:3153  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":3140:3157  balances[_to].add */\n      tag_71\n      swap1\n        /* \"contracts/ERC20.sol\":3140:3166  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"contracts/ERC20.sol\":3124:3132  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":3124:3137  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":3133:3136  _to */\n      dup6\n        /* \"contracts/ERC20.sol\":3124:3137  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":3124:3166  balances[_to] = balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":3182:3185  _to */\n      dup3\n        /* \"contracts/ERC20.sol\":3177:3195  Mint(_to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885\n        /* \"contracts/ERC20.sol\":3187:3194  _amount */\n      dup4\n        /* \"contracts/ERC20.sol\":3177:3195  Mint(_to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ERC20.sol\":3227:3230  _to */\n      dup3\n        /* \"contracts/ERC20.sol\":3206:3240  Transfer(address(0), _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3223:3224  0 */\n      0x00\n        /* \"contracts/ERC20.sol\":3206:3240  Transfer(address(0), _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":3232:3239  _amount */\n      dup5\n        /* \"contracts/ERC20.sol\":3206:3240  Transfer(address(0), _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":3253:3257  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3246:3257  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2988:3262  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2131:2230  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_43:\n        /* \"contracts/ERC20.sol\":2187:2194  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":2209:2217  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2209:2225  balances[_owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":2218:2224  _owner */\n      dup4\n        /* \"contracts/ERC20.sol\":2209:2225  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2202:2225  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2131:2230  function balanceOf(address _owner) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3607:3747  function finishMinting() onlyOwner canMint public returns (bool) {... */\n    tag_45:\n        /* \"contracts/ERC20.sol\":3666:3670  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3402:3407  owner */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3388:3407  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3388:3398  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":3388:3407  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20.sol\":3380:3408  require(msg.sender == owner) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"contracts/ERC20.sol\":3463:3478  mintingFinished */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":3462:3478  !mintingFinished */\n      iszero\n        /* \"contracts/ERC20.sol\":3454:3479  require(!mintingFinished) */\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n        /* \"contracts/ERC20.sol\":3696:3700  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3678:3693  mintingFinished */\n      0x00\n      dup1\n        /* \"contracts/ERC20.sol\":3678:3700  mintingFinished = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":3711:3725  MintFinished() */\n      0xae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa08\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ERC20.sol\":3738:3742  true */\n      0x01\n        /* \"contracts/ERC20.sol\":3731:3742  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3607:3747  function finishMinting() onlyOwner canMint public returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":3269:3343  function getOwner() public view returns (address){... */\n    tag_47:\n        /* \"contracts/ERC20.sol\":3310:3317  address */\n      0x00\n        /* \"contracts/ERC20.sol\":3333:3338  owner */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":3326:3338  return owner */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":3269:3343  function getOwner() public view returns (address){... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1364:1397  address public owner = msg.sender */\n    tag_49:\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1579:1615  string public constant symbol = \"DT\" */\n    tag_51:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      0x4454000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2385:2744  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_58:\n        /* \"contracts/ERC20.sol\":2448:2452  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":2483:2484  0 */\n      dup1\n        /* \"contracts/ERC20.sol\":2468:2485  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":2468:2471  _to */\n      dup4\n        /* \"contracts/ERC20.sol\":2468:2485  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ERC20.sol\":2460:2486  require(_to != address(0)) */\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n        /* \"contracts/ERC20.sol\":2510:2518  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2510:2529  balances[tx.origin] */\n      0x00\n        /* \"contracts/ERC20.sol\":2519:2528  tx.origin */\n      origin\n        /* \"contracts/ERC20.sol\":2510:2529  balances[tx.origin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2500:2506  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":2500:2529  _value <= balances[tx.origin] */\n      gt\n      iszero\n        /* \"contracts/ERC20.sol\":2492:2572  require(_value <= balances[tx.origin], \"msg.sender doesn't have enough balance\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/ERC20.sol\":2601:2632  balances[tx.origin].sub(_value) */\n      tag_90\n        /* \"contracts/ERC20.sol\":2625:2631  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":2601:2609  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2601:2620  balances[tx.origin] */\n      0x00\n        /* \"contracts/ERC20.sol\":2610:2619  tx.origin */\n      origin\n        /* \"contracts/ERC20.sol\":2601:2620  balances[tx.origin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2601:2624  balances[tx.origin].sub */\n      tag_69\n      swap1\n        /* \"contracts/ERC20.sol\":2601:2632  balances[tx.origin].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_90:\n        /* \"contracts/ERC20.sol\":2579:2587  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2579:2598  balances[tx.origin] */\n      0x00\n        /* \"contracts/ERC20.sol\":2588:2597  tx.origin */\n      origin\n        /* \"contracts/ERC20.sol\":2579:2598  balances[tx.origin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":2579:2632  balances[tx.origin] = balances[tx.origin].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":2654:2679  balances[_to].add(_value) */\n      tag_91\n        /* \"contracts/ERC20.sol\":2672:2678  _value */\n      dup3\n        /* \"contracts/ERC20.sol\":2654:2662  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2654:2667  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":2663:2666  _to */\n      dup7\n        /* \"contracts/ERC20.sol\":2654:2667  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2654:2671  balances[_to].add */\n      tag_71\n      swap1\n        /* \"contracts/ERC20.sol\":2654:2679  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"contracts/ERC20.sol\":2638:2646  balances */\n      0x02\n        /* \"contracts/ERC20.sol\":2638:2651  balances[_to] */\n      0x00\n        /* \"contracts/ERC20.sol\":2647:2650  _to */\n      dup6\n        /* \"contracts/ERC20.sol\":2638:2651  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":2638:2679  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20.sol\":2710:2713  _to */\n      dup3\n        /* \"contracts/ERC20.sol\":2690:2722  Transfer(tx.origin, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20.sol\":2699:2708  tx.origin */\n      origin\n        /* \"contracts/ERC20.sol\":2690:2722  Transfer(tx.origin, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20.sol\":2715:2721  _value */\n      dup5\n        /* \"contracts/ERC20.sol\":2690:2722  Transfer(tx.origin, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":2735:2739  true */\n      0x01\n        /* \"contracts/ERC20.sol\":2728:2739  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":2385:2744  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":5664:5790  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n    tag_61:\n        /* \"contracts/ERC20.sol\":5738:5745  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":5760:5767  allowed */\n      0x01\n        /* \"contracts/ERC20.sol\":5760:5775  allowed[_owner] */\n      0x00\n        /* \"contracts/ERC20.sol\":5768:5774  _owner */\n      dup5\n        /* \"contracts/ERC20.sol\":5760:5775  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":5760:5785  allowed[_owner][_spender] */\n      0x00\n        /* \"contracts/ERC20.sol\":5776:5784  _spender */\n      dup4\n        /* \"contracts/ERC20.sol\":5760:5785  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":5753:5785  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5664:5790  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":961:1071  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"contracts/ERC20.sol\":1019:1026  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":1046:1047  a */\n      dup3\n        /* \"contracts/ERC20.sol\":1041:1042  b */\n      dup3\n        /* \"contracts/ERC20.sol\":1041:1047  b <= a */\n      gt\n      iszero\n        /* \"contracts/ERC20.sol\":1034:1048  assert(b <= a) */\n      tag_94\n      jumpi\n      invalid\n    tag_94:\n        /* \"contracts/ERC20.sol\":1065:1066  b */\n      dup2\n        /* \"contracts/ERC20.sol\":1061:1062  a */\n      dup4\n        /* \"contracts/ERC20.sol\":1061:1066  a - b */\n      sub\n        /* \"contracts/ERC20.sol\":1054:1066  return a - b */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":961:1071  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1133:1256  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n    tag_71:\n        /* \"contracts/ERC20.sol\":1191:1200  uint256 c */\n      0x00\n        /* \"contracts/ERC20.sol\":1216:1217  b */\n      dup2\n        /* \"contracts/ERC20.sol\":1212:1213  a */\n      dup4\n        /* \"contracts/ERC20.sol\":1212:1217  a + b */\n      add\n        /* \"contracts/ERC20.sol\":1208:1217  c = a + b */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1235:1236  a */\n      dup3\n        /* \"contracts/ERC20.sol\":1230:1231  c */\n      dup2\n        /* \"contracts/ERC20.sol\":1230:1236  c >= a */\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":1223:1237  assert(c >= a) */\n      tag_96\n      jumpi\n      invalid\n    tag_96:\n        /* \"contracts/ERC20.sol\":1250:1251  c */\n      dup1\n        /* \"contracts/ERC20.sol\":1243:1251  return c */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":1133:1256  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0 6d73672e73656e64657220646f65736e2774206861766520656e6f7567682062616c616e6365\n\n    auxdata: 0xa265627a7a72315820bd6042a699339ec981de3b0d1e18d771e18a79b4877a92d24ecf37ae96e5012164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff02191690831515021790555033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006b57600080fd5b506112618061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780638da5cb5b116100665780638da5cb5b146103ec57806395d89b4114610436578063a9059cbb146104b9578063dd62ed3e1461051f576100ea565b806370a08231146103285780637d64bcb414610380578063893d20e8146103a2576100ea565b806318160ddd116100c857806318160ddd146101fa57806323b872dd14610218578063313ce5671461029e57806340c10f19146102c2576100ea565b806305d2035b146100ef57806306fdde0314610111578063095ea7b314610194575b600080fd5b6100f7610597565b604051808215151515815260200191505060405180910390f35b6101196105a9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015957808201518184015260208101905061013e565b50505050905090810190601f1680156101865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e0600480360360408110156101aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105e2565b604051808215151515815260200191505060405180910390f35b6102026106d4565b6040518082815260200191505060405180910390f35b6102846004803603606081101561022e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106de565b604051808215151515815260200191505060405180910390f35b6102a6610b69565b604051808260ff1660ff16815260200191505060405180910390f35b61030e600480360360408110156102d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b6e565b604051808215151515815260200191505060405180910390f35b61036a6004803603602081101561033e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d50565b6040518082815260200191505060405180910390f35b610388610d99565b604051808215151515815260200191505060405180910390f35b6103aa610e5a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103f4610e83565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61043e610ea9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561047e578082015181840152602081019050610463565b50505050905090810190601f1680156104ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610505600480360360408110156104cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ee2565b604051808215151515815260200191505060405180910390f35b6105816004803603604081101561053557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061114e565b6040518082815260200191505060405180910390f35b6000809054906101000a900460ff1681565b6040518060400160405280600981526020017f44696365546f6b656e000000000000000000000000000000000000000000000081525081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600354905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561071957600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f46726f6d20646f65736e2774206861766520656e6f7567682062616c616e636581525060200191505060405180910390fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156108c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f7420616c6c6f77656420746f207370656e642074686973206d756368000081525060200191505060405180910390fd5b61091282600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d590919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109a782600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ec90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a7982600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d590919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b601281565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc957600080fd5b6000809054906101000a900460ff1615610be257600080fd5b610bf7826003546111ec90919063ffffffff16565b600381905550610c4f82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ec90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df457600080fd5b6000809054906101000a900460ff1615610e0d57600080fd5b60016000806101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600281526020017f445400000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f1d57600080fd5b600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610fb5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112076026913960400191505060405180910390fd5b61100782600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d590919063ffffffff16565b600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109c82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ec90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211156111e157fe5b818303905092915050565b60008183019050828110156111fd57fe5b8090509291505056fe6d73672e73656e64657220646f65736e2774206861766520656e6f7567682062616c616e6365a265627a7a72315820bd6042a699339ec981de3b0d1e18d771e18a79b4877a92d24ecf37ae96e5012164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1261 DUP1 PUSH2 0x7B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x51F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x7D64BCB4 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3A2 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C2 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5D2035B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x159 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x186 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43E PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x47E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x463 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4AB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x505 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x581 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44696365546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x46726F6D20646F65736E2774206861766520656E6F7567682062616C616E6365 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420616C6C6F77656420746F207370656E642074686973206D7563680000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x912 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9A7 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA79 DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF7 DUP3 PUSH1 0x3 SLOAD PUSH2 0x11EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0xC4F DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4454000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1207 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1007 DUP3 PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x109C DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x11E1 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x11FD JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID PUSH14 0x73672E73656E64657220646F6573 PUSH15 0x2774206861766520656E6F75676820 PUSH3 0x616C61 PUSH15 0x6365A265627A7A72315820BD6042A6 SWAP10 CALLER SWAP15 0xC9 DUP2 0xDE EXTCODESIZE 0xD 0x1E XOR 0xD7 PUSH18 0xE18A79B4877A92D24ECF37AE96E501216473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "1260:4676:0:-;;;1348:5;1318:35;;;;;;;;;;;;;;;;;;;;1387:10;1364:33;;;;;;;;;;;;;;;;;;;;1260:4676;8:9:-1;5:2;;;30:1;27;20:12;5:2;1260:4676:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780638da5cb5b116100665780638da5cb5b146103ec57806395d89b4114610436578063a9059cbb146104b9578063dd62ed3e1461051f576100ea565b806370a08231146103285780637d64bcb414610380578063893d20e8146103a2576100ea565b806318160ddd116100c857806318160ddd146101fa57806323b872dd14610218578063313ce5671461029e57806340c10f19146102c2576100ea565b806305d2035b146100ef57806306fdde0314610111578063095ea7b314610194575b600080fd5b6100f7610597565b604051808215151515815260200191505060405180910390f35b6101196105a9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015957808201518184015260208101905061013e565b50505050905090810190601f1680156101865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e0600480360360408110156101aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105e2565b604051808215151515815260200191505060405180910390f35b6102026106d4565b6040518082815260200191505060405180910390f35b6102846004803603606081101561022e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106de565b604051808215151515815260200191505060405180910390f35b6102a6610b69565b604051808260ff1660ff16815260200191505060405180910390f35b61030e600480360360408110156102d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b6e565b604051808215151515815260200191505060405180910390f35b61036a6004803603602081101561033e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d50565b6040518082815260200191505060405180910390f35b610388610d99565b604051808215151515815260200191505060405180910390f35b6103aa610e5a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103f4610e83565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61043e610ea9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561047e578082015181840152602081019050610463565b50505050905090810190601f1680156104ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610505600480360360408110156104cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ee2565b604051808215151515815260200191505060405180910390f35b6105816004803603604081101561053557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061114e565b6040518082815260200191505060405180910390f35b6000809054906101000a900460ff1681565b6040518060400160405280600981526020017f44696365546f6b656e000000000000000000000000000000000000000000000081525081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600354905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561071957600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f46726f6d20646f65736e2774206861766520656e6f7567682062616c616e636581525060200191505060405180910390fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156108c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f7420616c6c6f77656420746f207370656e642074686973206d756368000081525060200191505060405180910390fd5b61091282600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d590919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109a782600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ec90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a7982600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d590919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b601281565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc957600080fd5b6000809054906101000a900460ff1615610be257600080fd5b610bf7826003546111ec90919063ffffffff16565b600381905550610c4f82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ec90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df457600080fd5b6000809054906101000a900460ff1615610e0d57600080fd5b60016000806101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600281526020017f445400000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f1d57600080fd5b600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610fb5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112076026913960400191505060405180910390fd5b61100782600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d590919063ffffffff16565b600260003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109c82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ec90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211156111e157fe5b818303905092915050565b60008183019050828110156111fd57fe5b8090509291505056fe6d73672e73656e64657220646f65736e2774206861766520656e6f7567682062616c616e6365a265627a7a72315820bd6042a699339ec981de3b0d1e18d771e18a79b4877a92d24ecf37ae96e5012164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x51F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x7D64BCB4 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3A2 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C2 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5D2035B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x159 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x186 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43E PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x47E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x463 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4AB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x505 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x581 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44696365546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x46726F6D20646F65736E2774206861766520656E6F7567682062616C616E6365 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420616C6C6F77656420746F207370656E642074686973206D7563680000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x912 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9A7 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA79 DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF7 DUP3 PUSH1 0x3 SLOAD PUSH2 0x11EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0xC4F DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4454000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1207 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1007 DUP3 PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11D5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x109C DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x11E1 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x11FD JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID PUSH14 0x73672E73656E64657220646F6573 PUSH15 0x2774206861766520656E6F75676820 PUSH3 0x616C61 PUSH15 0x6365A265627A7A72315820BD6042A6 SWAP10 CALLER SWAP15 0xC9 DUP2 0xDE EXTCODESIZE 0xD 0x1E XOR 0xD7 PUSH18 0xE18A79B4877A92D24ECF37AE96E501216473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "1260:4676:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1260:4676:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1318:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1532:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1532:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5157:188;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5157:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5851:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4023:511;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4023:511:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1621:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2988:274;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2988:274:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2131:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2131:99:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3607:140;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3269:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1364:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1579:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1579:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:359;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2385:359:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5664:126;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5664:126:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1318:35;;;;;;;;;;;;;:::o;1532:41::-;;;;;;;;;;;;;;;;;;;:::o;5157:188::-;5224:4;5268:6;5236:7;:19;5244:10;5236:19;;;;;;;;;;;;;;;:29;5256:8;5236:29;;;;;;;;;;;;;;;:38;;;;5306:8;5285:38;;5294:10;5285:38;;;5316:6;5285:38;;;;;;;;;;;;;;;;;;5336:4;5329:11;;5157:188;;;;:::o;5851:83::-;5895:7;5917:12;;5910:19;;5851:83;:::o;4023:511::-;4105:4;4140:1;4125:17;;:3;:17;;;;4117:26;;;;;;4167:8;:15;4176:5;4167:15;;;;;;;;;;;;;;;;4157:6;:25;;4149:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4243:7;:14;4251:5;4243:14;;;;;;;;;;;;;;;:25;4258:9;4243:25;;;;;;;;;;;;;;;;4233:6;:35;;4225:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4328:27;4348:6;4328:8;:15;4337:5;4328:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;4310:8;:15;4319:5;4310:15;;;;;;;;;;;;;;;:45;;;;4377:25;4395:6;4377:8;:13;4386:3;4377:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;4361:8;:13;4370:3;4361:13;;;;;;;;;;;;;;;:41;;;;4436:37;4466:6;4436:7;:14;4444:5;4436:14;;;;;;;;;;;;;;;:25;4451:9;4436:25;;;;;;;;;;;;;;;;:29;;:37;;;;:::i;:::-;4408:7;:14;4416:5;4408:14;;;;;;;;;;;;;;;:25;4423:9;4408:25;;;;;;;;;;;;;;;:65;;;;4500:3;4484:28;;4493:5;4484:28;;;4505:6;4484:28;;;;;;;;;;;;;;;;;;4525:4;4518:11;;4023:511;;;;;:::o;1621:35::-;1654:2;1621:35;:::o;2988:274::-;3066:4;3402:5;;;;;;;;;;;3388:19;;:10;:19;;;3380:28;;;;;;3463:15;;;;;;;;;;;3462:16;3454:25;;;;;;3093;3110:7;3093:12;;:16;;:25;;;;:::i;:::-;3078:12;:40;;;;3140:26;3158:7;3140:8;:13;3149:3;3140:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;3124:8;:13;3133:3;3124:13;;;;;;;;;;;;;;;:42;;;;3182:3;3177:18;;;3187:7;3177:18;;;;;;;;;;;;;;;;;;3227:3;3206:34;;3223:1;3206:34;;;3232:7;3206:34;;;;;;;;;;;;;;;;;;3253:4;3246:11;;2988:274;;;;:::o;2131:99::-;2187:7;2209:8;:16;2218:6;2209:16;;;;;;;;;;;;;;;;2202:23;;2131:99;;;:::o;3607:140::-;3666:4;3402:5;;;;;;;;;;;3388:19;;:10;:19;;;3380:28;;;;;;3463:15;;;;;;;;;;;3462:16;3454:25;;;;;;3696:4;3678:15;;:22;;;;;;;;;;;;;;;;;;3711:14;;;;;;;;;;3738:4;3731:11;;3607:140;:::o;3269:74::-;3310:7;3333:5;;;;;;;;;;;3326:12;;3269:74;:::o;1364:33::-;;;;;;;;;;;;;:::o;1579:36::-;;;;;;;;;;;;;;;;;;;:::o;2385:359::-;2448:4;2483:1;2468:17;;:3;:17;;;;2460:26;;;;;;2510:8;:19;2519:9;2510:19;;;;;;;;;;;;;;;;2500:6;:29;;2492:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2601:31;2625:6;2601:8;:19;2610:9;2601:19;;;;;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;2579:8;:19;2588:9;2579:19;;;;;;;;;;;;;;;:53;;;;2654:25;2672:6;2654:8;:13;2663:3;2654:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;2638:8;:13;2647:3;2638:13;;;;;;;;;;;;;;;:41;;;;2710:3;2690:32;;2699:9;2690:32;;;2715:6;2690:32;;;;;;;;;;;;;;;;;;2735:4;2728:11;;2385:359;;;;:::o;5664:126::-;5738:7;5760;:15;5768:6;5760:15;;;;;;;;;;;;;;;:25;5776:8;5760:25;;;;;;;;;;;;;;;;5753:32;;5664:126;;;;:::o;961:110::-;1019:7;1046:1;1041;:6;;1034:14;;;;1065:1;1061;:5;1054:12;;961:110;;;;:::o;1133:123::-;1191:9;1216:1;1212;:5;1208:9;;1235:1;1230;:6;;1223:14;;;;1250:1;1243:8;;1133:123;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "941000",
								"executionCost": "42764",
								"totalCost": "983764"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22436",
								"balanceOf(address)": "1219",
								"decimals()": "284",
								"finishMinting()": "23690",
								"getOwner()": "1178",
								"mint(address,uint256)": "infinite",
								"mintingFinished()": "1077",
								"name()": "infinite",
								"owner()": "1125",
								"symbol()": "infinite",
								"totalSupply()": "1036",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1260,
									"end": 5936,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1260,
									"end": 5936,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1260,
									"end": 5936,
									"name": "MSTORE"
								},
								{
									"begin": 1348,
									"end": 1353,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "DUP1"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "EXP"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "DUP2"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "SLOAD"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "DUP2"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "MUL"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "NOT"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "AND"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "SWAP1"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "DUP4"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "ISZERO"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "ISZERO"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "MUL"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "OR"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "SWAP1"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "SSTORE"
								},
								{
									"begin": 1318,
									"end": 1353,
									"name": "POP"
								},
								{
									"begin": 1387,
									"end": 1397,
									"name": "CALLER"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "EXP"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "DUP2"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "SLOAD"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "DUP2"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "MUL"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "NOT"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "AND"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "DUP4"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "AND"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "MUL"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "OR"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "SWAP1"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "SSTORE"
								},
								{
									"begin": 1364,
									"end": 1397,
									"name": "POP"
								},
								{
									"begin": 1260,
									"end": 5936,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1260,
									"end": 5936,
									"name": "POP"
								},
								{
									"begin": 1260,
									"end": 5936,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1260,
									"end": 5936,
									"name": "DUP1"
								},
								{
									"begin": 1260,
									"end": 5936,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1260,
									"end": 5936,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 5936,
									"name": "CODECOPY"
								},
								{
									"begin": 1260,
									"end": 5936,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 5936,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820bd6042a699339ec981de3b0d1e18d771e18a79b4877a92d24ecf37ae96e5012164736f6c63430005110032",
									".code": [
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "MSTORE"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "POP"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "LT"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "SHR"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "GT"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "GT"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMP"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPDEST"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "7D64BCB4"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMP"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPDEST"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "GT"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMP"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPDEST"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "5D2035B"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "EQ"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPI"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "JUMPDEST"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "DUP1"
										},
										{
											"begin": 1260,
											"end": 5936,
											"name": "REVERT"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "JUMPDEST"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "JUMPDEST"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "MLOAD"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "DUP1"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "DUP3"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "ISZERO"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "ISZERO"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "ISZERO"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "ISZERO"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "DUP2"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "MSTORE"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "ADD"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "SWAP2"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "POP"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "POP"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "MLOAD"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "DUP1"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "SWAP2"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "SUB"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "SWAP1"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "RETURN"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "JUMPDEST"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "JUMPDEST"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MLOAD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP3"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP3"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP4"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MLOAD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MLOAD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP4"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "ISZERO"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "JUMPI"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP3"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MLOAD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP4"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "EXP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "NOT"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "JUMPDEST"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP3"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MLOAD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SUB"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "RETURN"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "JUMPDEST"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "DUP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "DUP2"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "ADD"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "DUP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "DUP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "AND"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "ADD"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP3"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP2"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "DUP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "ADD"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP3"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP2"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "POP"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "POP"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "POP"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "JUMPDEST"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "MLOAD"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "DUP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "DUP3"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "ISZERO"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "ISZERO"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "ISZERO"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "ISZERO"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "DUP2"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "MSTORE"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "ADD"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP2"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "POP"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "POP"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "MLOAD"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "DUP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP2"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SUB"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP1"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "RETURN"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "JUMPDEST"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "JUMPDEST"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "MLOAD"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "DUP1"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "DUP3"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "DUP2"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "MSTORE"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "ADD"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "SWAP2"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "POP"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "POP"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "MLOAD"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "DUP1"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "SWAP2"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "SUB"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "SWAP1"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "RETURN"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "JUMPDEST"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "DUP2"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "ADD"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "AND"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "ADD"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP3"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP2"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "AND"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "ADD"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP3"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP2"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "ADD"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP3"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP2"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "POP"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "POP"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "POP"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "JUMPDEST"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "MLOAD"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "DUP3"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "ISZERO"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "ISZERO"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "ISZERO"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "ISZERO"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "DUP2"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "MSTORE"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "ADD"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP2"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "POP"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "POP"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "MLOAD"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "DUP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP2"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SUB"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP1"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "RETURN"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "JUMPDEST"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "JUMPDEST"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "MLOAD"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "DUP1"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "DUP3"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "AND"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "AND"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "DUP2"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "MSTORE"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "ADD"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "SWAP2"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "POP"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "MLOAD"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "DUP1"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "SWAP2"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "SUB"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "SWAP1"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "RETURN"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "JUMPDEST"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "DUP2"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "ADD"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "AND"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "ADD"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP3"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP2"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "ADD"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP3"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP2"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "JUMPDEST"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "MLOAD"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "DUP3"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "ISZERO"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "ISZERO"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "ISZERO"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "ISZERO"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "DUP2"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "MSTORE"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "ADD"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP2"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "MLOAD"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "DUP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP2"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SUB"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP1"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "RETURN"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "JUMPDEST"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "DUP1"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "DUP2"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "ADD"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SWAP1"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "DUP1"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "DUP1"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "AND"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SWAP1"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "ADD"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SWAP1"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SWAP3"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SWAP2"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SWAP1"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "POP"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "POP"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "POP"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "JUMPDEST"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "MLOAD"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "DUP1"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "DUP3"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "DUP2"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "MSTORE"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "ADD"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SWAP2"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "POP"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "POP"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "MLOAD"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "DUP1"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SWAP2"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SUB"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SWAP1"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "RETURN"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "JUMPDEST"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "JUMPDEST"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "MLOAD"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "DUP3"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "ISZERO"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "ISZERO"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "ISZERO"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "ISZERO"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "DUP2"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "MSTORE"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "ADD"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "SWAP2"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "POP"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "POP"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "MLOAD"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "SWAP2"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "SUB"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "SWAP1"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "RETURN"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "JUMPDEST"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "JUMPDEST"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "MLOAD"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "DUP1"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "DUP3"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "AND"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "AND"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "DUP2"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "MSTORE"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "ADD"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "SWAP2"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "POP"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "POP"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "MLOAD"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "DUP1"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "SWAP2"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "SUB"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "SWAP1"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "RETURN"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "JUMPDEST"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "JUMPDEST"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "MLOAD"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "DUP1"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "DUP3"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "AND"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "AND"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "DUP2"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "MSTORE"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "ADD"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "SWAP2"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "MLOAD"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "DUP1"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "SWAP2"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "SUB"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "RETURN"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "JUMPDEST"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "JUMPDEST"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MLOAD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP3"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SUB"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP3"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP4"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MLOAD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SWAP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MLOAD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP4"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "AND"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "ISZERO"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "JUMPI"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP3"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SUB"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MLOAD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP4"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SUB"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "EXP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SUB"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "NOT"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "AND"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SWAP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "JUMPDEST"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SWAP3"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MLOAD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SWAP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SUB"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "RETURN"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "JUMPDEST"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "DUP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "DUP2"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "ADD"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "DUP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "DUP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "AND"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "ADD"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP3"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP2"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "DUP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "ADD"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP3"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP2"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "POP"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "POP"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "POP"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "JUMPDEST"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "MLOAD"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "DUP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "DUP3"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "ISZERO"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "ISZERO"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "ISZERO"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "ISZERO"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "DUP2"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "MSTORE"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "ADD"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP2"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "POP"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "POP"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "MLOAD"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "DUP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP2"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SUB"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP1"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "RETURN"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "JUMPDEST"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "DUP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "DUP2"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "ADD"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "DUP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "DUP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "AND"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "ADD"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP3"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP2"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "DUP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "AND"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "ADD"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP3"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP2"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "POP"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "POP"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "POP"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "JUMPDEST"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "MLOAD"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "DUP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "DUP3"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "DUP2"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "MSTORE"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "ADD"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP2"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "POP"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "POP"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "MLOAD"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "DUP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP2"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SUB"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "RETURN"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "JUMPDEST"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "DUP1"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "SWAP1"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "SLOAD"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "SWAP1"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "EXP"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "SWAP1"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "DIV"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "AND"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "DUP2"
										},
										{
											"begin": 1318,
											"end": 1353,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "JUMPDEST"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MLOAD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"value": "44696365546F6B656E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "JUMPDEST"
										},
										{
											"begin": 5224,
											"end": 5228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP2"
										},
										{
											"begin": 5236,
											"end": 5243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5254,
											"name": "CALLER"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "AND"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "AND"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "DUP2"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "MSTORE"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "ADD"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "SWAP1"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "DUP2"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "MSTORE"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "ADD"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5255,
											"name": "KECCAK256"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5264,
											"name": "DUP6"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "AND"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "AND"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "DUP2"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "MSTORE"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "ADD"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "SWAP1"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "DUP2"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "MSTORE"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "ADD"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5265,
											"name": "KECCAK256"
										},
										{
											"begin": 5236,
											"end": 5274,
											"name": "DUP2"
										},
										{
											"begin": 5236,
											"end": 5274,
											"name": "SWAP1"
										},
										{
											"begin": 5236,
											"end": 5274,
											"name": "SSTORE"
										},
										{
											"begin": 5236,
											"end": 5274,
											"name": "POP"
										},
										{
											"begin": 5306,
											"end": 5314,
											"name": "DUP3"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "AND"
										},
										{
											"begin": 5294,
											"end": 5304,
											"name": "CALLER"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "AND"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5316,
											"end": 5322,
											"name": "DUP5"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "MLOAD"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "DUP1"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "DUP3"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "DUP2"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "MSTORE"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "ADD"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "SWAP2"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "POP"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "POP"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "MLOAD"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "DUP1"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "SWAP2"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "SUB"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "SWAP1"
										},
										{
											"begin": 5285,
											"end": 5323,
											"name": "LOG3"
										},
										{
											"begin": 5336,
											"end": 5340,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5329,
											"end": 5340,
											"name": "SWAP1"
										},
										{
											"begin": 5329,
											"end": 5340,
											"name": "POP"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP3"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "SWAP2"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "POP"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "POP"
										},
										{
											"begin": 5157,
											"end": 5345,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "JUMPDEST"
										},
										{
											"begin": 5895,
											"end": 5902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5929,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5917,
											"end": 5929,
											"name": "SLOAD"
										},
										{
											"begin": 5910,
											"end": 5929,
											"name": "SWAP1"
										},
										{
											"begin": 5910,
											"end": 5929,
											"name": "POP"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "SWAP1"
										},
										{
											"begin": 5851,
											"end": 5934,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "JUMPDEST"
										},
										{
											"begin": 4105,
											"end": 4109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4141,
											"name": "DUP1"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "AND"
										},
										{
											"begin": 4125,
											"end": 4128,
											"name": "DUP4"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "AND"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "EQ"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "ISZERO"
										},
										{
											"begin": 4117,
											"end": 4143,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 4117,
											"end": 4143,
											"name": "JUMPI"
										},
										{
											"begin": 4117,
											"end": 4143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4143,
											"name": "DUP1"
										},
										{
											"begin": 4117,
											"end": 4143,
											"name": "REVERT"
										},
										{
											"begin": 4117,
											"end": 4143,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 4117,
											"end": 4143,
											"name": "JUMPDEST"
										},
										{
											"begin": 4167,
											"end": 4175,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4181,
											"name": "DUP6"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "AND"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "AND"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "DUP2"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "MSTORE"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "ADD"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "SWAP1"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "DUP2"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "MSTORE"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "ADD"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "KECCAK256"
										},
										{
											"begin": 4167,
											"end": 4182,
											"name": "SLOAD"
										},
										{
											"begin": 4157,
											"end": 4163,
											"name": "DUP3"
										},
										{
											"begin": 4157,
											"end": 4182,
											"name": "GT"
										},
										{
											"begin": 4157,
											"end": 4182,
											"name": "ISZERO"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "JUMPI"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "MLOAD"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "DUP3"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "SUB"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "DUP3"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "PUSH",
											"value": "46726F6D20646F65736E2774206861766520656E6F7567682062616C616E6365"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "SWAP2"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "MLOAD"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "SWAP2"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "SUB"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "REVERT"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 4149,
											"end": 4219,
											"name": "JUMPDEST"
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP6"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "AND"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "AND"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "DUP2"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "MSTORE"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "ADD"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "SWAP1"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "DUP2"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "MSTORE"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "ADD"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4257,
											"name": "KECCAK256"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4267,
											"name": "ORIGIN"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "AND"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "AND"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "DUP2"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "MSTORE"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "ADD"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "SWAP1"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "DUP2"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "MSTORE"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "ADD"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "KECCAK256"
										},
										{
											"begin": 4243,
											"end": 4268,
											"name": "SLOAD"
										},
										{
											"begin": 4233,
											"end": 4239,
											"name": "DUP3"
										},
										{
											"begin": 4233,
											"end": 4268,
											"name": "GT"
										},
										{
											"begin": 4233,
											"end": 4268,
											"name": "ISZERO"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "JUMPI"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "MLOAD"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "DUP2"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "MSTORE"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "ADD"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "DUP1"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "DUP1"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "ADD"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "DUP3"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "DUP2"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "SUB"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "DUP3"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "MSTORE"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "DUP2"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "MSTORE"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "ADD"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "DUP1"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "PUSH",
											"value": "4E6F7420616C6C6F77656420746F207370656E642074686973206D7563680000"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "DUP2"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "MSTORE"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "POP"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "ADD"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "SWAP2"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "POP"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "POP"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "MLOAD"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "DUP1"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "SWAP2"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "SUB"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "SWAP1"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "REVERT"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 4225,
											"end": 4303,
											"name": "JUMPDEST"
										},
										{
											"begin": 4328,
											"end": 4355,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 4348,
											"end": 4354,
											"name": "DUP3"
										},
										{
											"begin": 4328,
											"end": 4336,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP8"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "AND"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "AND"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "DUP2"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "MSTORE"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "ADD"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "SWAP1"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "DUP2"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "MSTORE"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "ADD"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "KECCAK256"
										},
										{
											"begin": 4328,
											"end": 4343,
											"name": "SLOAD"
										},
										{
											"begin": 4328,
											"end": 4347,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 4328,
											"end": 4347,
											"name": "SWAP1"
										},
										{
											"begin": 4328,
											"end": 4355,
											"name": "SWAP2"
										},
										{
											"begin": 4328,
											"end": 4355,
											"name": "SWAP1"
										},
										{
											"begin": 4328,
											"end": 4355,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4328,
											"end": 4355,
											"name": "AND"
										},
										{
											"begin": 4328,
											"end": 4355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4328,
											"end": 4355,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 4328,
											"end": 4355,
											"name": "JUMPDEST"
										},
										{
											"begin": 4310,
											"end": 4318,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4324,
											"name": "DUP7"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "AND"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "AND"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "DUP2"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "MSTORE"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "ADD"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "SWAP1"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "DUP2"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "MSTORE"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "ADD"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4325,
											"name": "KECCAK256"
										},
										{
											"begin": 4310,
											"end": 4355,
											"name": "DUP2"
										},
										{
											"begin": 4310,
											"end": 4355,
											"name": "SWAP1"
										},
										{
											"begin": 4310,
											"end": 4355,
											"name": "SSTORE"
										},
										{
											"begin": 4310,
											"end": 4355,
											"name": "POP"
										},
										{
											"begin": 4377,
											"end": 4402,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP3"
										},
										{
											"begin": 4377,
											"end": 4385,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4389,
											"name": "DUP7"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "AND"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "AND"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "DUP2"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "MSTORE"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "ADD"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "SWAP1"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "DUP2"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "MSTORE"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "ADD"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "KECCAK256"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "SLOAD"
										},
										{
											"begin": 4377,
											"end": 4394,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 4377,
											"end": 4394,
											"name": "SWAP1"
										},
										{
											"begin": 4377,
											"end": 4402,
											"name": "SWAP2"
										},
										{
											"begin": 4377,
											"end": 4402,
											"name": "SWAP1"
										},
										{
											"begin": 4377,
											"end": 4402,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4402,
											"name": "AND"
										},
										{
											"begin": 4377,
											"end": 4402,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4377,
											"end": 4402,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 4377,
											"end": 4402,
											"name": "JUMPDEST"
										},
										{
											"begin": 4361,
											"end": 4369,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "DUP6"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "AND"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "AND"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "DUP2"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "MSTORE"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "ADD"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "SWAP1"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "DUP2"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "MSTORE"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "ADD"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4361,
											"end": 4374,
											"name": "KECCAK256"
										},
										{
											"begin": 4361,
											"end": 4402,
											"name": "DUP2"
										},
										{
											"begin": 4361,
											"end": 4402,
											"name": "SWAP1"
										},
										{
											"begin": 4361,
											"end": 4402,
											"name": "SSTORE"
										},
										{
											"begin": 4361,
											"end": 4402,
											"name": "POP"
										},
										{
											"begin": 4436,
											"end": 4473,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 4466,
											"end": 4472,
											"name": "DUP3"
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4449,
											"name": "DUP8"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "AND"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "AND"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "DUP2"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "MSTORE"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "ADD"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "DUP2"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "MSTORE"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "ADD"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4436,
											"end": 4450,
											"name": "KECCAK256"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4451,
											"end": 4460,
											"name": "ORIGIN"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "AND"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "AND"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "DUP2"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "MSTORE"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "ADD"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "DUP2"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "MSTORE"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "ADD"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "KECCAK256"
										},
										{
											"begin": 4436,
											"end": 4461,
											"name": "SLOAD"
										},
										{
											"begin": 4436,
											"end": 4465,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 4436,
											"end": 4465,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4473,
											"name": "SWAP2"
										},
										{
											"begin": 4436,
											"end": 4473,
											"name": "SWAP1"
										},
										{
											"begin": 4436,
											"end": 4473,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4436,
											"end": 4473,
											"name": "AND"
										},
										{
											"begin": 4436,
											"end": 4473,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4436,
											"end": 4473,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 4436,
											"end": 4473,
											"name": "JUMPDEST"
										},
										{
											"begin": 4408,
											"end": 4415,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4421,
											"name": "DUP7"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "AND"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "AND"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "DUP2"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "MSTORE"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "ADD"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "SWAP1"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "DUP2"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "MSTORE"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "ADD"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4422,
											"name": "KECCAK256"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4432,
											"name": "ORIGIN"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "AND"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "AND"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "DUP2"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "MSTORE"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "ADD"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "SWAP1"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "DUP2"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "MSTORE"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "ADD"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "KECCAK256"
										},
										{
											"begin": 4408,
											"end": 4473,
											"name": "DUP2"
										},
										{
											"begin": 4408,
											"end": 4473,
											"name": "SWAP1"
										},
										{
											"begin": 4408,
											"end": 4473,
											"name": "SSTORE"
										},
										{
											"begin": 4408,
											"end": 4473,
											"name": "POP"
										},
										{
											"begin": 4500,
											"end": 4503,
											"name": "DUP3"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "AND"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP5"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "AND"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4505,
											"end": 4511,
											"name": "DUP5"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "MLOAD"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "DUP1"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "DUP3"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "DUP2"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "MSTORE"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "ADD"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "SWAP2"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "POP"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "POP"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "MLOAD"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "DUP1"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "SWAP2"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "SUB"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "SWAP1"
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "LOG3"
										},
										{
											"begin": 4525,
											"end": 4529,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "SWAP1"
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "POP"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP4"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "SWAP3"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "POP"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "POP"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "POP"
										},
										{
											"begin": 4023,
											"end": 4534,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "JUMPDEST"
										},
										{
											"begin": 1654,
											"end": 1656,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "DUP2"
										},
										{
											"begin": 1621,
											"end": 1656,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "JUMPDEST"
										},
										{
											"begin": 3066,
											"end": 3070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "SLOAD"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "EXP"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "DIV"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3388,
											"end": 3398,
											"name": "CALLER"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "EQ"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "JUMPI"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "DUP1"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "REVERT"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "JUMPDEST"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "DUP1"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "SLOAD"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "EXP"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "DIV"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "AND"
										},
										{
											"begin": 3462,
											"end": 3478,
											"name": "ISZERO"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "JUMPI"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "DUP1"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "REVERT"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "JUMPDEST"
										},
										{
											"begin": 3093,
											"end": 3118,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3110,
											"end": 3117,
											"name": "DUP3"
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "SLOAD"
										},
										{
											"begin": 3093,
											"end": 3109,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3093,
											"end": 3109,
											"name": "SWAP1"
										},
										{
											"begin": 3093,
											"end": 3118,
											"name": "SWAP2"
										},
										{
											"begin": 3093,
											"end": 3118,
											"name": "SWAP1"
										},
										{
											"begin": 3093,
											"end": 3118,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3093,
											"end": 3118,
											"name": "AND"
										},
										{
											"begin": 3093,
											"end": 3118,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3118,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3093,
											"end": 3118,
											"name": "JUMPDEST"
										},
										{
											"begin": 3078,
											"end": 3090,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3078,
											"end": 3118,
											"name": "DUP2"
										},
										{
											"begin": 3078,
											"end": 3118,
											"name": "SWAP1"
										},
										{
											"begin": 3078,
											"end": 3118,
											"name": "SSTORE"
										},
										{
											"begin": 3078,
											"end": 3118,
											"name": "POP"
										},
										{
											"begin": 3140,
											"end": 3166,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 3158,
											"end": 3165,
											"name": "DUP3"
										},
										{
											"begin": 3140,
											"end": 3148,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3152,
											"name": "DUP7"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "AND"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "AND"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "DUP2"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "MSTORE"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "ADD"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "SWAP1"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "DUP2"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "MSTORE"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "ADD"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "KECCAK256"
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "SLOAD"
										},
										{
											"begin": 3140,
											"end": 3157,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3140,
											"end": 3157,
											"name": "SWAP1"
										},
										{
											"begin": 3140,
											"end": 3166,
											"name": "SWAP2"
										},
										{
											"begin": 3140,
											"end": 3166,
											"name": "SWAP1"
										},
										{
											"begin": 3140,
											"end": 3166,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3166,
											"name": "AND"
										},
										{
											"begin": 3140,
											"end": 3166,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3140,
											"end": 3166,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 3140,
											"end": 3166,
											"name": "JUMPDEST"
										},
										{
											"begin": 3124,
											"end": 3132,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3136,
											"name": "DUP6"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "AND"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "AND"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "DUP2"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "MSTORE"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "ADD"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "SWAP1"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "DUP2"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "MSTORE"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "ADD"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "KECCAK256"
										},
										{
											"begin": 3124,
											"end": 3166,
											"name": "DUP2"
										},
										{
											"begin": 3124,
											"end": 3166,
											"name": "SWAP1"
										},
										{
											"begin": 3124,
											"end": 3166,
											"name": "SSTORE"
										},
										{
											"begin": 3124,
											"end": 3166,
											"name": "POP"
										},
										{
											"begin": 3182,
											"end": 3185,
											"name": "DUP3"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "AND"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "PUSH",
											"value": "F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885"
										},
										{
											"begin": 3187,
											"end": 3194,
											"name": "DUP4"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "MLOAD"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "DUP1"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "DUP3"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "DUP2"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "MSTORE"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "ADD"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "SWAP2"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "POP"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "MLOAD"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "DUP1"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "SWAP2"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "SUB"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "SWAP1"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "LOG2"
										},
										{
											"begin": 3227,
											"end": 3230,
											"name": "DUP3"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "AND"
										},
										{
											"begin": 3223,
											"end": 3224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "AND"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3232,
											"end": 3239,
											"name": "DUP5"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "MLOAD"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "DUP1"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "DUP3"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "DUP2"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "MSTORE"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "ADD"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "SWAP2"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "POP"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "POP"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "MLOAD"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "DUP1"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "SWAP2"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "SUB"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "SWAP1"
										},
										{
											"begin": 3206,
											"end": 3240,
											"name": "LOG3"
										},
										{
											"begin": 3253,
											"end": 3257,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3246,
											"end": 3257,
											"name": "SWAP1"
										},
										{
											"begin": 3246,
											"end": 3257,
											"name": "POP"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP3"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "SWAP2"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "POP"
										},
										{
											"begin": 2988,
											"end": 3262,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "JUMPDEST"
										},
										{
											"begin": 2187,
											"end": 2194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2217,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "DUP4"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "AND"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "AND"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "DUP2"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "MSTORE"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "ADD"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "SWAP1"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "DUP2"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "MSTORE"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "ADD"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "KECCAK256"
										},
										{
											"begin": 2209,
											"end": 2225,
											"name": "SLOAD"
										},
										{
											"begin": 2202,
											"end": 2225,
											"name": "SWAP1"
										},
										{
											"begin": 2202,
											"end": 2225,
											"name": "POP"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SWAP2"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "SWAP1"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "POP"
										},
										{
											"begin": 2131,
											"end": 2230,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "JUMPDEST"
										},
										{
											"begin": 3666,
											"end": 3670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "SLOAD"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "EXP"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "DIV"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3402,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3388,
											"end": 3398,
											"name": "CALLER"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "EQ"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "JUMPI"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "DUP1"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "REVERT"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 3380,
											"end": 3408,
											"name": "JUMPDEST"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "DUP1"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "SLOAD"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "EXP"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "DIV"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "AND"
										},
										{
											"begin": 3462,
											"end": 3478,
											"name": "ISZERO"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "JUMPI"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "DUP1"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "REVERT"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 3454,
											"end": 3479,
											"name": "JUMPDEST"
										},
										{
											"begin": 3696,
											"end": 3700,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3678,
											"end": 3693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3678,
											"end": 3693,
											"name": "DUP1"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "EXP"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "DUP2"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "SLOAD"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "DUP2"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "MUL"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "NOT"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "AND"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "SWAP1"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "DUP4"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "ISZERO"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "ISZERO"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "MUL"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "OR"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "SWAP1"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "SSTORE"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "POP"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "PUSH",
											"value": "AE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "MLOAD"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "MLOAD"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "DUP1"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "SWAP2"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "SUB"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "SWAP1"
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "LOG1"
										},
										{
											"begin": 3738,
											"end": 3742,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3731,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3731,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "SWAP1"
										},
										{
											"begin": 3607,
											"end": 3747,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "JUMPDEST"
										},
										{
											"begin": 3310,
											"end": 3317,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "DUP1"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "SLOAD"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "EXP"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "DIV"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "AND"
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "SWAP1"
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "POP"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "SWAP1"
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "JUMPDEST"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "SLOAD"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "EXP"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "DIV"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "AND"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "DUP2"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "JUMPDEST"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MLOAD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP1"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "PUSH",
											"value": "4454000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1615,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "JUMPDEST"
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2484,
											"name": "DUP1"
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "AND"
										},
										{
											"begin": 2468,
											"end": 2471,
											"name": "DUP4"
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "AND"
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "EQ"
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "ISZERO"
										},
										{
											"begin": 2460,
											"end": 2486,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2460,
											"end": 2486,
											"name": "JUMPI"
										},
										{
											"begin": 2460,
											"end": 2486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2486,
											"name": "DUP1"
										},
										{
											"begin": 2460,
											"end": 2486,
											"name": "REVERT"
										},
										{
											"begin": 2460,
											"end": 2486,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2460,
											"end": 2486,
											"name": "JUMPDEST"
										},
										{
											"begin": 2510,
											"end": 2518,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2528,
											"name": "ORIGIN"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "AND"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "AND"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "DUP2"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "MSTORE"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "ADD"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "SWAP1"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "DUP2"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "MSTORE"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "ADD"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "KECCAK256"
										},
										{
											"begin": 2510,
											"end": 2529,
											"name": "SLOAD"
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "DUP3"
										},
										{
											"begin": 2500,
											"end": 2529,
											"name": "GT"
										},
										{
											"begin": 2500,
											"end": 2529,
											"name": "ISZERO"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "JUMPI"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "MLOAD"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "MSTORE"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "ADD"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "DUP1"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "DUP1"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "ADD"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "DUP3"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "SUB"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "DUP3"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "MSTORE"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "DUP2"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "MSTORE"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "ADD"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "DUP1"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "PUSH data",
											"value": "7F7B785A575BF86F94FDFE1AF7672BEDD6E81980B0474355876CDE2604E523D0"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "SWAP2"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "CODECOPY"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "ADD"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "SWAP2"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "POP"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "POP"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "MLOAD"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "DUP1"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "SWAP2"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "SUB"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "SWAP1"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "REVERT"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2492,
											"end": 2572,
											"name": "JUMPDEST"
										},
										{
											"begin": 2601,
											"end": 2632,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2625,
											"end": 2631,
											"name": "DUP3"
										},
										{
											"begin": 2601,
											"end": 2609,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2619,
											"name": "ORIGIN"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "AND"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "AND"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "DUP2"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "MSTORE"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "ADD"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "SWAP1"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "DUP2"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "MSTORE"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "ADD"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "KECCAK256"
										},
										{
											"begin": 2601,
											"end": 2620,
											"name": "SLOAD"
										},
										{
											"begin": 2601,
											"end": 2624,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2601,
											"end": 2624,
											"name": "SWAP1"
										},
										{
											"begin": 2601,
											"end": 2632,
											"name": "SWAP2"
										},
										{
											"begin": 2601,
											"end": 2632,
											"name": "SWAP1"
										},
										{
											"begin": 2601,
											"end": 2632,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2632,
											"name": "AND"
										},
										{
											"begin": 2601,
											"end": 2632,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2601,
											"end": 2632,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2601,
											"end": 2632,
											"name": "JUMPDEST"
										},
										{
											"begin": 2579,
											"end": 2587,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2597,
											"name": "ORIGIN"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "AND"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "AND"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "DUP2"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "MSTORE"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "SWAP1"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "DUP2"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "MSTORE"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "ADD"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2598,
											"name": "KECCAK256"
										},
										{
											"begin": 2579,
											"end": 2632,
											"name": "DUP2"
										},
										{
											"begin": 2579,
											"end": 2632,
											"name": "SWAP1"
										},
										{
											"begin": 2579,
											"end": 2632,
											"name": "SSTORE"
										},
										{
											"begin": 2579,
											"end": 2632,
											"name": "POP"
										},
										{
											"begin": 2654,
											"end": 2679,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "DUP3"
										},
										{
											"begin": 2654,
											"end": 2662,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2666,
											"name": "DUP7"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "AND"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "AND"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "DUP2"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "MSTORE"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "ADD"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "SWAP1"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "DUP2"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "MSTORE"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "ADD"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "KECCAK256"
										},
										{
											"begin": 2654,
											"end": 2667,
											"name": "SLOAD"
										},
										{
											"begin": 2654,
											"end": 2671,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2654,
											"end": 2671,
											"name": "SWAP1"
										},
										{
											"begin": 2654,
											"end": 2679,
											"name": "SWAP2"
										},
										{
											"begin": 2654,
											"end": 2679,
											"name": "SWAP1"
										},
										{
											"begin": 2654,
											"end": 2679,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2654,
											"end": 2679,
											"name": "AND"
										},
										{
											"begin": 2654,
											"end": 2679,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2654,
											"end": 2679,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2654,
											"end": 2679,
											"name": "JUMPDEST"
										},
										{
											"begin": 2638,
											"end": 2646,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "DUP6"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "AND"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "AND"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "DUP2"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "MSTORE"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "ADD"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "SWAP1"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "DUP2"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "MSTORE"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "ADD"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2651,
											"name": "KECCAK256"
										},
										{
											"begin": 2638,
											"end": 2679,
											"name": "DUP2"
										},
										{
											"begin": 2638,
											"end": 2679,
											"name": "SWAP1"
										},
										{
											"begin": 2638,
											"end": 2679,
											"name": "SSTORE"
										},
										{
											"begin": 2638,
											"end": 2679,
											"name": "POP"
										},
										{
											"begin": 2710,
											"end": 2713,
											"name": "DUP3"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "AND"
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "ORIGIN"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "AND"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP5"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "MLOAD"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "DUP1"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "DUP3"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "DUP2"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "MSTORE"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "ADD"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "SWAP2"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "POP"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "POP"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "MLOAD"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "DUP1"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "SWAP2"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "SUB"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "SWAP1"
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "LOG3"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2728,
											"end": 2739,
											"name": "SWAP1"
										},
										{
											"begin": 2728,
											"end": 2739,
											"name": "POP"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP3"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "SWAP2"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "POP"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "POP"
										},
										{
											"begin": 2385,
											"end": 2744,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "JUMPDEST"
										},
										{
											"begin": 5738,
											"end": 5745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5760,
											"end": 5767,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "DUP5"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "AND"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "AND"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "DUP2"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "MSTORE"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "ADD"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "SWAP1"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "DUP2"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "MSTORE"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "ADD"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5760,
											"end": 5775,
											"name": "KECCAK256"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5784,
											"name": "DUP4"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "AND"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "AND"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "DUP2"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "MSTORE"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "ADD"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "SWAP1"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "DUP2"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "MSTORE"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "ADD"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "KECCAK256"
										},
										{
											"begin": 5760,
											"end": 5785,
											"name": "SLOAD"
										},
										{
											"begin": 5753,
											"end": 5785,
											"name": "SWAP1"
										},
										{
											"begin": 5753,
											"end": 5785,
											"name": "POP"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP3"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "SWAP2"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "POP"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "POP"
										},
										{
											"begin": 5664,
											"end": 5790,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 961,
											"end": 1071,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 961,
											"end": 1071,
											"name": "JUMPDEST"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1047,
											"name": "DUP3"
										},
										{
											"begin": 1041,
											"end": 1042,
											"name": "DUP3"
										},
										{
											"begin": 1041,
											"end": 1047,
											"name": "GT"
										},
										{
											"begin": 1041,
											"end": 1047,
											"name": "ISZERO"
										},
										{
											"begin": 1034,
											"end": 1048,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 1034,
											"end": 1048,
											"name": "JUMPI"
										},
										{
											"begin": 1034,
											"end": 1048,
											"name": "INVALID"
										},
										{
											"begin": 1034,
											"end": 1048,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 1034,
											"end": 1048,
											"name": "JUMPDEST"
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "DUP2"
										},
										{
											"begin": 1061,
											"end": 1062,
											"name": "DUP4"
										},
										{
											"begin": 1061,
											"end": 1066,
											"name": "SUB"
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "SWAP1"
										},
										{
											"begin": 1054,
											"end": 1066,
											"name": "POP"
										},
										{
											"begin": 961,
											"end": 1071,
											"name": "SWAP3"
										},
										{
											"begin": 961,
											"end": 1071,
											"name": "SWAP2"
										},
										{
											"begin": 961,
											"end": 1071,
											"name": "POP"
										},
										{
											"begin": 961,
											"end": 1071,
											"name": "POP"
										},
										{
											"begin": 961,
											"end": 1071,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1133,
											"end": 1256,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1133,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "DUP4"
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "ADD"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "POP"
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "DUP3"
										},
										{
											"begin": 1230,
											"end": 1231,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1236,
											"name": "LT"
										},
										{
											"begin": 1230,
											"end": 1236,
											"name": "ISZERO"
										},
										{
											"begin": 1223,
											"end": 1237,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 1223,
											"end": 1237,
											"name": "JUMPI"
										},
										{
											"begin": 1223,
											"end": 1237,
											"name": "INVALID"
										},
										{
											"begin": 1223,
											"end": 1237,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 1223,
											"end": 1237,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1251,
											"name": "DUP1"
										},
										{
											"begin": 1243,
											"end": 1251,
											"name": "SWAP1"
										},
										{
											"begin": 1243,
											"end": 1251,
											"name": "POP"
										},
										{
											"begin": 1133,
											"end": 1256,
											"name": "SWAP3"
										},
										{
											"begin": 1133,
											"end": 1256,
											"name": "SWAP2"
										},
										{
											"begin": 1133,
											"end": 1256,
											"name": "POP"
										},
										{
											"begin": 1133,
											"end": 1256,
											"name": "POP"
										},
										{
											"begin": 1133,
											"end": 1256,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"7F7B785A575BF86F94FDFE1AF7672BEDD6E81980B0474355876CDE2604E523D0": "6d73672e73656e64657220646f65736e2774206861766520656e6f7567682062616c616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"finishMinting()": "7d64bcb4",
							"getOwner()": "893d20e8",
							"mint(address,uint256)": "40c10f19",
							"mintingFinished()": "05d2035b",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens.\",\"return\":\"True if the operation was successful.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint.\",\"_to\":\"The address that will receive the minted tokens.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"totalSupply()\":{\"details\":\"total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0x1ba4d3ad4863bfb43fb433d1d178b360730696cd28862dc6caa023d91da033b7\",\"urls\":[\"bzz-raw://d4ac6aaffef2adf430f32385abb57faa11be3fa8a9c8ae2d2972da296b2d1f4e\",\"dweb:/ipfs/Qme2HCxM7dQ3f9MiYYGGXFXx3EEStRhEHuYMDToZRghPMg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 99,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "mintingFinished",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 103,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "owner",
								"offset": 1,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 109,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 113,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 124,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "totalSupply_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that throw on error",
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":242:1258  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":242:1258  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820b8d61682a7837a20c6197814ebe1a6900d06082178371410ce7bd66d97d69b3364736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b8d61682a7837a20c6197814ebe1a6900d06082178371410ce7bd66d97d69b3364736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB8 0xD6 AND DUP3 0xA7 DUP4 PUSH27 0x20C6197814EBE1A6900D06082178371410CE7BD66D97D69B336473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "242:1016:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b8d61682a7837a20c6197814ebe1a6900d06082178371410ce7bd66d97d69b3364736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB8 0xD6 AND DUP3 0xA7 DUP4 PUSH27 0x20C6197814EBE1A6900D06082178371410CE7BD66D97D69B336473 PUSH16 0x6C634300051100320000000000000000 ",
							"sourceMap": "242:1016:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 242,
									"end": 1258,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 1258,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b8d61682a7837a20c6197814ebe1a6900d06082178371410ce7bd66d97d69b3364736f6c63430005110032",
									".code": [
										{
											"begin": 242,
											"end": 1258,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 242,
											"end": 1258,
											"name": "ADDRESS"
										},
										{
											"begin": 242,
											"end": 1258,
											"name": "EQ"
										},
										{
											"begin": 242,
											"end": 1258,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 242,
											"end": 1258,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 242,
											"end": 1258,
											"name": "MSTORE"
										},
										{
											"begin": 242,
											"end": 1258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 242,
											"end": 1258,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 1258,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0x1ba4d3ad4863bfb43fb433d1d178b360730696cd28862dc6caa023d91da033b7\",\"urls\":[\"bzz-raw://d4ac6aaffef2adf430f32385abb57faa11be3fa8a9c8ae2d2972da296b2d1f4e\",\"dweb:/ipfs/Qme2HCxM7dQ3f9MiYYGGXFXx3EEStRhEHuYMDToZRghPMg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							456
						],
						"SafeMath": [
							93
						]
					},
					"id": 457,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 93,
							"linearizedBaseContracts": [
								93
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "397:98:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "407:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "412:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "407:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 16,
												"nodeType": "IfStatement",
												"src": "403:35:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "415:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "430:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "423:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 17,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "443:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 18,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "447:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 19,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "451:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "447:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "443:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "443:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "465:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "469:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "465:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "474:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "465:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "458:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "458:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "458:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "489:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "482:8:0"
											}
										]
									},
									"documentation": "@dev Multiplies two numbers, throws on overflow.",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "340:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "386:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "385:11:0"
									},
									"scope": 93,
									"src": "328:167:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "644:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 43,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 44,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 46,
												"nodeType": "Return",
												"src": "832:12:0"
											}
										]
									},
									"documentation": "@dev Integer division of two numbers, truncating the quotient.",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "590:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "589:22:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "635:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "634:9:0"
									},
									"scope": 93,
									"src": "577:272:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1028:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 58,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "1041:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 59,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "1046:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1041:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 57,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "1034:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1034:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1034:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 63,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1061:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 64,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "1065:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1061:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 56,
												"id": 66,
												"nodeType": "Return",
												"src": "1054:12:0"
											}
										]
									},
									"documentation": "@dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "974:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "985:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "973:22:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 93,
									"src": "961:110:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1202:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 77,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "1208:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 78,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1212:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 79,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1216:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1212:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1208:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "1208:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 84,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "1230:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1235:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1230:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 83,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "1223:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1223:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 89,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 75,
													"src": "1250:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 76,
												"id": 90,
												"nodeType": "Return",
												"src": "1243:8:0"
											}
										]
									},
									"documentation": "@dev Adds two numbers, throws on overflow.",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1157:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1145:22:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1191:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1190:11:0"
									},
									"scope": 93,
									"src": "1133:123:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 457,
							"src": "242:1016:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 96,
									"libraryName": {
										"contractScope": null,
										"id": 94,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 93,
										"src": "1287:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$93",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1281:27:0",
									"typeName": {
										"id": 95,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1300:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 99,
									"name": "mintingFinished",
									"nodeType": "VariableDeclaration",
									"scope": 456,
									"src": "1318:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 97,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1318:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 98,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1348:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 103,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 456,
									"src": "1364:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 100,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1364:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 101,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 471,
											"src": "1387:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 102,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "1387:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 109,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 456,
									"src": "1408:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 108,
										"keyType": {
											"id": 104,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1417:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1408:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 107,
											"keyType": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1437:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1428:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 106,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1448:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 113,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 456,
									"src": "1480:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 112,
										"keyType": {
											"id": 110,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 111,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1499:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 116,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 456,
									"src": "1532:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 114,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1532:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "44696365546f6b656e",
										"id": 115,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1562:11:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cd9c1c017b2fae172809377aaa6ab3ca09b7a1381f3bd96631d53f5712677f0f",
											"typeString": "literal_string \"DiceToken\""
										},
										"value": "DiceToken"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 119,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 456,
									"src": "1579:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 117,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1579:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4454",
										"id": 118,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1611:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_f3c6d15ee9cd01f6a869c50fdbdb633d5b07cca374a35c88b60c25e0480bd779",
											"typeString": "literal_string \"DT\""
										},
										"value": "DT"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 122,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 456,
									"src": "1621:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 120,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1621:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 121,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1654:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 124,
									"name": "totalSupply_",
									"nodeType": "VariableDeclaration",
									"scope": 456,
									"src": "1662:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 123,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1662:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 132,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1706:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1728:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1748:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1705:57:0"
									},
									"src": "1691:72:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 140,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1783:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1806:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1831:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1782:63:0"
									},
									"src": "1768:78:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 146,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1862:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1882:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1861:36:0"
									},
									"src": "1851:47:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 148,
									"name": "MintFinished",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1921:2:0"
									},
									"src": "1903:21:0"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2196:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 155,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2209:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 157,
													"indexExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2218:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2209:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 154,
												"id": 158,
												"nodeType": "Return",
												"src": "2202:23:0"
											}
										]
									},
									"documentation": "@dev Gets the balance of the specified address.\n@param _owner The address to query the the balance of.\n@return An uint256 representing the amount owned by the passed address.",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2150:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2149:16:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2187:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2186:9:0"
									},
									"scope": 456,
									"src": "2131:99:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2454:290:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 170,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "2468:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2483:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2475:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2475:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2468:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															474,
															475
														],
														"referencedDeclaration": 474,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2460:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 178,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 179,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "2510:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 182,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 180,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "2519:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2519:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2510:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2500:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6d73672e73656e64657220646f65736e2774206861766520656e6f7567682062616c616e6365",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2531:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0",
																"typeString": "literal_string \"msg.sender doesn't have enough balance\""
															},
															"value": "msg.sender doesn't have enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f7b785a575bf86f94fdfe1af7672bedd6e81980b0474355876cde2604e523d0",
																"typeString": "literal_string \"msg.sender doesn't have enough balance\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															474,
															475
														],
														"referencedDeclaration": 475,
														"src": "2492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2492:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2492:80:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 187,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "2579:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 190,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 188,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "2588:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2588:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2579:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 196,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2625:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 191,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "2601:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 194,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 192,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "2610:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2610:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2601:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 68,
															"src": "2601:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2601:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2579:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "2579:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 200,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "2638:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 202,
														"indexExpression": {
															"argumentTypes": null,
															"id": 201,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2647:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2638:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 207,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2672:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "2654:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 205,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "2663:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2654:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "2654:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2654:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2638:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "2638:41:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 212,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "2699:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2699:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 214,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2710:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 215,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "2715:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 211,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2690:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2690:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2685:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2735:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 168,
												"id": 219,
												"nodeType": "Return",
												"src": "2728:11:0"
											}
										]
									},
									"documentation": "@dev transfer token for a specified address\n@param _to The address to transfer to.\n@param _value The amount to be transferred.",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2403:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2416:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2402:29:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2448:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2448:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2447:6:0"
									},
									"scope": 456,
									"src": "2385:359:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3072:190:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 234,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "3078:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 237,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "3110:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 235,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "3093:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "3093:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3093:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3078:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "3078:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 241,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3124:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 243,
														"indexExpression": {
															"argumentTypes": null,
															"id": 242,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3133:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3124:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 248,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "3158:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 244,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "3140:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 246,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 245,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "3149:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3140:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "3140:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3140:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3124:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "3124:42:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 253,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3182:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 254,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3187:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "3177:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3177:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "EmitStatement",
												"src": "3172:23:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3223:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3215:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3215:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 261,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3227:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 262,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3232:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "3206:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3206:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "EmitStatement",
												"src": "3201:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3253:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 233,
												"id": 266,
												"nodeType": "Return",
												"src": "3246:11:0"
											}
										]
									},
									"documentation": "@dev Function to mint tokens\n@param _to The address that will receive the minted tokens.\n@param _amount The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 228,
											"modifierName": {
												"argumentTypes": null,
												"id": 227,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 287,
												"src": "3032:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3032:9:0"
										},
										{
											"arguments": null,
											"id": 230,
											"modifierName": {
												"argumentTypes": null,
												"id": 229,
												"name": "canMint",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 296,
												"src": "3042:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3042:7:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3002:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3015:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3001:30:0"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3066:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3066:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3065:6:0"
									},
									"scope": 456,
									"src": "2988:274:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "3318:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 273,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 103,
													"src": "3333:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 272,
												"id": 274,
												"nodeType": "Return",
												"src": "3326:12:0"
											}
										]
									},
									"documentation": null,
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3286:2:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "3310:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3309:9:0"
									},
									"scope": 456,
									"src": "3269:74:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "3374:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 279,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "3388:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3388:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 281,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "3402:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3388:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															474,
															475
														],
														"referencedDeclaration": 474,
														"src": "3380:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3380:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "3380:28:0"
											},
											{
												"id": 285,
												"nodeType": "PlaceholderStatement",
												"src": "3414:1:0"
											}
										]
									},
									"documentation": null,
									"id": 287,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3371:2:0"
									},
									"src": "3353:67:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "3448:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3462:16:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 290,
																"name": "mintingFinished",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3463:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															474,
															475
														],
														"referencedDeclaration": 474,
														"src": "3454:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3454:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "3454:25:0"
											},
											{
												"id": 294,
												"nodeType": "PlaceholderStatement",
												"src": "3485:1:0"
											}
										]
									},
									"documentation": null,
									"id": 296,
									"name": "canMint",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3445:2:0"
									},
									"src": "3429:62:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "3672:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 305,
														"name": "mintingFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "3678:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3696:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3678:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "3678:22:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 309,
														"name": "MintFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "3711:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "EmitStatement",
												"src": "3706:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3738:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 304,
												"id": 313,
												"nodeType": "Return",
												"src": "3731:11:0"
											}
										]
									},
									"documentation": "@dev Function to stop minting new tokens.\n@return True if the operation was successful.",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 299,
											"modifierName": {
												"argumentTypes": null,
												"id": 298,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 287,
												"src": "3632:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3632:9:0"
										},
										{
											"arguments": null,
											"id": 301,
											"modifierName": {
												"argumentTypes": null,
												"id": 300,
												"name": "canMint",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 296,
												"src": "3642:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3642:7:0"
										}
									],
									"name": "finishMinting",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3629:2:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3666:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3666:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3665:6:0"
									},
									"scope": 456,
									"src": "3607:140:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "4111:423:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 327,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "4125:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4140:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4132:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4125:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															474,
															475
														],
														"referencedDeclaration": 474,
														"src": "4117:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4117:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "4117:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 335,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4157:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 336,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4167:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 338,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 337,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "4176:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4167:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4157:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "46726f6d20646f65736e2774206861766520656e6f7567682062616c616e6365",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4184:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d",
																"typeString": "literal_string \"From doesn't have enough balance\""
															},
															"value": "From doesn't have enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce42a17daeaf718c0f1b34bbe14453c7b1813857f0ec2c1766b69fda815bc31d",
																"typeString": "literal_string \"From doesn't have enough balance\""
															}
														],
														"id": 334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															474,
															475
														],
														"referencedDeclaration": 475,
														"src": "4149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4149:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "4149:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 344,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4233:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 345,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "4243:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 347,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 346,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "4251:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4243:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 350,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 348,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "4258:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4258:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4243:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4233:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420616c6c6f77656420746f207370656e642074686973206d756368",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4270:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f83afab5a2fdc018f2f2409afdd945b8b74c8752fac2171cdb87f94c6eb2b8be",
																"typeString": "literal_string \"Not allowed to spend this much\""
															},
															"value": "Not allowed to spend this much"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f83afab5a2fdc018f2f2409afdd945b8b74c8752fac2171cdb87f94c6eb2b8be",
																"typeString": "literal_string \"Not allowed to spend this much\""
															}
														],
														"id": 343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															474,
															475
														],
														"referencedDeclaration": 475,
														"src": "4225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:78:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "4225:78:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 355,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "4310:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 357,
														"indexExpression": {
															"argumentTypes": null,
															"id": 356,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4319:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4310:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 362,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4348:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 358,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4328:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 360,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 359,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "4337:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4328:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 68,
															"src": "4328:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4328:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4310:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "4310:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 366,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "4361:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 368,
														"indexExpression": {
															"argumentTypes": null,
															"id": 367,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "4370:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4361:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 373,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4395:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 369,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4377:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 371,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 370,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "4386:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4377:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "4377:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4377:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4361:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "4361:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 377,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "4408:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 381,
															"indexExpression": {
																"argumentTypes": null,
																"id": 378,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "4416:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4408:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 382,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 379,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "4423:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4423:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4408:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 390,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4466:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 383,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "4436:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 385,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 384,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "4444:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4436:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 388,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 386,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "4451:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4451:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4436:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 68,
															"src": "4436:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4436:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4408:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "4408:65:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 395,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4493:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 396,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "4500:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 397,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "4505:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 394,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "4484:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4484:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "EmitStatement",
												"src": "4479:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4525:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 325,
												"id": 401,
												"nodeType": "Return",
												"src": "4518:11:0"
											}
										]
									},
									"documentation": "@dev Transfer tokens from one address to another\n@param _from address The address which you want to send tokens from\n@param _to address The address which you want to transfer to\n@param _value uint256 the amount of tokens to be transferred",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4045:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4060:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4073:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4044:44:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4105:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4105:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4104:6:0"
									},
									"scope": 456,
									"src": "4023:511:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "5230:115:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 412,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "5236:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 416,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 413,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "5244:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5244:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5236:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 417,
														"indexExpression": {
															"argumentTypes": null,
															"id": 415,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "5256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5236:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 418,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "5268:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5236:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "5236:38:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 422,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "5294:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5294:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 424,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "5306:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 425,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "5316:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "5285:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5285:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "EmitStatement",
												"src": "5280:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5336:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 411,
												"id": 429,
												"nodeType": "Return",
												"src": "5329:11:0"
											}
										]
									},
									"documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5174:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5192:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5173:34:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5224:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5224:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5223:6:0"
									},
									"scope": 456,
									"src": "5157:188:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "5747:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 440,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "5760:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 442,
														"indexExpression": {
															"argumentTypes": null,
															"id": 441,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "5768:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5760:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 444,
													"indexExpression": {
														"argumentTypes": null,
														"id": 443,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "5776:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5760:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 445,
												"nodeType": "Return",
												"src": "5753:32:0"
											}
										]
									},
									"documentation": "@dev Function to check the amount of tokens that an owner allowed to a spender.\n@param _owner address The address which owns the funds.\n@param _spender address The address which will spend the funds.\n@return A uint256 specifying the amount of tokens still available for the spender.",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "5683:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "5699:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5682:34:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "5738:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5737:9:0"
									},
									"scope": 456,
									"src": "5664:126:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "5904:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 452,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 124,
													"src": "5917:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 451,
												"id": 453,
												"nodeType": "Return",
												"src": "5910:19:0"
											}
										]
									},
									"documentation": "@dev total number of tokens in existence",
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5871:2:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "5895:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5894:9:0"
									},
									"scope": 456,
									"src": "5851:83:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 457,
							"src": "1260:4676:0"
						}
					],
					"src": "0:5936:0"
				},
				"id": 0
			}
		}
	}
}