{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [],
				"name": "createOneMC",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "requestids",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "stakeholderids",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "string[]",
						"name": "names",
						"type": "string[]"
					},
					{
						"indexed": false,
						"internalType": "string[]",
						"name": "ics",
						"type": "string[]"
					}
				],
				"name": "liveRequest",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "numMC",
						"type": "uint256"
					}
				],
				"name": "mcCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "presidentChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "hospitalId",
						"type": "uint256"
					}
				],
				"name": "registered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "reqeustId",
						"type": "uint256"
					}
				],
				"name": "requestMade",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					}
				],
				"name": "requestSolve",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "hospital",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "password",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "personId",
						"type": "uint256"
					},
					{
						"internalType": "enum MedicalCertificate.certCategory",
						"name": "incidentType0incident1death2suicide",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "incidentYYYYMMDDHHMM",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "certifierName",
						"type": "string"
					}
				],
				"name": "addMC",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "hospitalId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "oldpassword",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "newpassword",
						"type": "string"
					}
				],
				"name": "changePassword",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "hospitalId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "password",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "NRIC",
						"type": "string"
					}
				],
				"name": "changePresident",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_hospitalId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_stakeholderId",
						"type": "uint256"
					}
				],
				"name": "checkMCIdFromStakeholder",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "hospitalId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "password",
						"type": "string"
					}
				],
				"name": "checkRequestFromHospital",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "hospitalId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "password",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "NRIC",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "sex",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "birthdateYYYYMMDD",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "race_nationality",
						"type": "string"
					}
				],
				"name": "createPersonalInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getHospitalCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "president",
						"type": "address"
					}
				],
				"name": "getHospitalId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "getMCCategory",
				"outputs": [
					{
						"internalType": "enum MedicalCertificate.certCategory",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "getMCNRIC",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "getMCName",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumOfPeople",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumOfReqs",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "hospitalId",
						"type": "uint256"
					}
				],
				"name": "getPassword",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "hospitalId",
						"type": "uint256"
					}
				],
				"name": "getPresident",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "NRIC",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "password",
						"type": "string"
					}
				],
				"name": "register",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "hospitalId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "stakeholderId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "nameAssured",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "icAssured",
						"type": "string"
					}
				],
				"name": "requestMC",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "hospitalId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "password",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "mcId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "stakeholderId",
						"type": "uint256"
					}
				],
				"name": "solveRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addMC(uint256,string,uint256,uint8,string,string)": {
					"details": "Create the medical certificate for the injured or dead person",
					"params": {
						"certifierName": "the certifier of the MC of the accident",
						"hospital": "the id of the hospital",
						"incidentType0incident1death2suicide": "the incident type of accident where 0 is incident 1 is death and 2 is suicide",
						"incidentYYYYMMDDHHMM": "the incident date and time of the incident",
						"password": "password for hospital",
						"personId": "the id of the person who has accident"
					},
					"returns": {
						"_0": "uint256 MC id in bytes"
					}
				},
				"changePassword(uint256,string,string)": {
					"details": "change password of hospital",
					"params": {
						"newpassword": "the new password",
						"oldpassword": "old password needed to change"
					}
				},
				"changePresident(uint256,string,string)": {
					"details": "change president of hospital",
					"params": {
						"NRIC": "president NRIC",
						"hospitalId": "hospital id",
						"password": "password of hospital"
					}
				},
				"checkMCIdFromStakeholder(uint256,uint256,uint256)": {
					"details": "check mc Ids from stakeholder",
					"params": {
						"_hospitalId": "hospital id",
						"_requestId": "whether the MC is for some request",
						"_stakeholderId": "if it's a request, what's the stakeholder id"
					},
					"returns": {
						"_0": "uint256 mcId"
					}
				},
				"checkRequestFromHospital(uint256,string)": {
					"details": "check requests from hospital",
					"params": {
						"hospitalId": "the hospital id ",
						"password": "password to register"
					}
				},
				"createPersonalInfo(uint256,string,string,string,string,string,string)": {
					"details": "Create information profile for the assured person",
					"params": {
						"NRIC": "the NRIC of the person who has accident",
						"birthdateYYYYMMDD": "the birthdate of the person who has accident",
						"hospitalId": "hospital id",
						"name": "the name of the person who has accident",
						"password": "password for hospital",
						"race_nationality": "the race and nationality of the person who has accident",
						"sex": "the sexof the person who has accident"
					},
					"returns": {
						"_0": "uint256 number of people"
					}
				},
				"getHospitalCounter()": {
					"details": "Get number of hospital",
					"returns": {
						"_0": "uint256 number of hospital"
					}
				},
				"getHospitalId(address)": {
					"details": "Get the hospital Id",
					"params": {
						"president": "president of hospital"
					},
					"returns": {
						"_0": "uint256 hospital id"
					}
				},
				"getNumOfPeople()": {
					"details": "Get number of people",
					"returns": {
						"_0": "uint256 number of people"
					}
				},
				"getNumOfReqs()": {
					"details": "Get number of requests",
					"returns": {
						"_0": "uint256 number of requests"
					}
				},
				"getPassword(uint256)": {
					"details": "Get the password of hospital",
					"params": {
						"hospitalId": "id of hospital"
					},
					"returns": {
						"_0": "string password"
					}
				},
				"getPresident(uint256)": {
					"details": "Get the president of hospital",
					"params": {
						"hospitalId": "id of hospital"
					},
					"returns": {
						"_0": "address president"
					}
				},
				"register(string,string)": {
					"details": "register the hospital on chain",
					"params": {
						"NRIC": "president NRIC",
						"password": "password to register"
					},
					"returns": {
						"_0": "uint256 registered hospital id"
					}
				},
				"requestMC(uint256,uint256,string,string)": {
					"details": "stakeholder request to create MC",
					"params": {
						"hospitalId": "the hospital id ",
						"icAssured": "the assured person's NRIC",
						"nameAssured": "the assured person's name",
						"stakeholderId": "the stakeholder Id"
					},
					"returns": {
						"_0": "uint256 number of requests"
					}
				},
				"solveRequest(uint256,string,uint256,uint256,uint256)": {
					"details": "Create the medical certificate for the injured or dead person",
					"params": {
						"hospitalId": "the id of the hospital",
						"mcId": "the mc id of the request",
						"password": "password for hospital",
						"requestId": "the id of the request",
						"stakeholderId": "the id of the stakeholder"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Hospital.sol": "Hospital"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Hospital.sol": {
			"keccak256": "0xaad8b180b32af073943d6ea2fef69317796b55a2e1c099f38bf02c78015816bb",
			"urls": [
				"bzz-raw://e6730adf7b56f1c8cfa9b6a38280bf11b11cd24e25f8568fdd30bdd50b90ddf2",
				"dweb:/ipfs/QmcUzXCdwyFh7TVbZoceAsvunhk8Gfgt2GjuRymEcDXVRc"
			]
		},
		"contracts/MedicalCert.sol": {
			"keccak256": "0xe8078b5ffb8c10d495e8a160c8116d357021c29f286bb87c63a3108fd346c6b9",
			"urls": [
				"bzz-raw://0023a5e3580c29c58154dee985efaf9113e0b7d6508f6ccd15201cb55ab65576",
				"dweb:/ipfs/QmemFrBRkfjLfhtPfjp9vbFhysLvVbFLX6mcxhWTM5v9vU"
			]
		}
	},
	"version": 1
}